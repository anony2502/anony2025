[
  {
    "bCommit": "0533816d4",
    "aCommit": "589433291",
    "changes": [
      {
        "bPath": "tools/src/main/java/org/apache/rocketmq/tools/command/broker/BrokerStatusSubCommand.java",
        "aPath": "tools/src/main/java/org/apache/rocketmq/tools/command/broker/BrokerStatusSubCommand.java",
        "name": "org.apache.rocketmq.tools.command.broker.BrokerStatusSubCommand",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "OptionGroup optionGroup = new OptionGroup();",
                "type": "ADD",
                "lineNo": 52
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.commons.cli.OptionGroup optionGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.commons.cli.OptionGroup"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.commons.cli.OptionGroup()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.commons.cli.OptionGroup"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "opt.setRequired(false);",
                "type": "DELETE",
                "lineNo": 52
              },
              {
                "line": "options.addOption(opt);",
                "type": "DELETE",
                "lineNo": 53
              }
            ],
            "targetChanges": [
              {
                "line": "optionGroup.addOption(opt);",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "setRequired(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.cli.Option opt"
              },
              {
                "type": "CtExecutableReference",
                "value": "setRequired(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'false'"
              },
              {
                "type": "CtInvocation",
                "value": "addOption(org.apache.commons.cli.Option)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.cli.Options options"
              },
              {
                "type": "CtExecutableReference",
                "value": "addOption(org.apache.commons.cli.Option)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.cli.Option opt"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "addOption(org.apache.commons.cli.Option)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.cli.OptionGroup optionGroup"
              },
              {
                "type": "CtExecutableReference",
                "value": "addOption(org.apache.commons.cli.Option)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.cli.Option opt"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "opt.setRequired(false);",
                "type": "DELETE",
                "lineNo": 56
              },
              {
                "line": "options.addOption(opt);",
                "type": "DELETE",
                "lineNo": 57
              }
            ],
            "targetChanges": [
              {
                "line": "optionGroup.addOption(opt);",
                "type": "ADD",
                "lineNo": 57
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "setRequired(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.cli.Option opt"
              },
              {
                "type": "CtExecutableReference",
                "value": "setRequired(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'false'"
              },
              {
                "type": "CtInvocation",
                "value": "addOption(org.apache.commons.cli.Option)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.cli.Options options"
              },
              {
                "type": "CtExecutableReference",
                "value": "addOption(org.apache.commons.cli.Option)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.cli.Option opt"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "addOption(org.apache.commons.cli.Option)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.cli.OptionGroup optionGroup"
              },
              {
                "type": "CtExecutableReference",
                "value": "addOption(org.apache.commons.cli.Option)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.cli.Option opt"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "optionGroup.setRequired(true);",
                "type": "ADD",
                "lineNo": 59
              },
              {
                "line": "options.addOptionGroup(optionGroup);",
                "type": "ADD",
                "lineNo": 60
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setRequired(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.cli.OptionGroup optionGroup"
              },
              {
                "type": "CtExecutableReference",
                "value": "setRequired(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "addOptionGroup(org.apache.commons.cli.OptionGroup)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.cli.Options options"
              },
              {
                "type": "CtExecutableReference",
                "value": "addOptionGroup(org.apache.commons.cli.OptionGroup)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.cli.OptionGroup optionGroup"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "tools/src/test/java/org/apache/rocketmq/tools/command/broker/BrokerStatusSubCommandTest.java",
        "aPath": "tools/src/test/java/org/apache/rocketmq/tools/command/broker/BrokerStatusSubCommandTest.java",
        "name": "org.apache.rocketmq.tools.command.broker.BrokerStatusSubCommandTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "String[] subargs = new String[] {\"-b 127.0.0.1:\" + listenPort(), \"-c default-cluster\"};",
                "type": "DELETE",
                "lineNo": 42
              }
            ],
            "targetChanges": [
              {
                "line": "String[] subargs = new String[] {\"-b 127.0.0.1:\" + listenPort()};",
                "type": "ADD",
                "lineNo": 42
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "String[] subargs"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '-b 127.0.0.1:'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.tools.command.server.ServerResponseMocker.listenPort()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.tools.command.server.ServerResponseMocker.listenPort()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '-c default-cluster'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "String[] subargs"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '-b 127.0.0.1:'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.tools.command.server.ServerResponseMocker.listenPort()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.tools.command.server.ServerResponseMocker.listenPort()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "737c1e533",
    "aCommit": "7996ec3b3",
    "changes": [
      {
        "bPath": "common/src/main/java/org/apache/rocketmq/common/utils/ConcurrentHashMapUtils.java",
        "aPath": "common/src/main/java/org/apache/rocketmq/common/utils/ConcurrentHashMapUtils.java",
        "name": "org.apache.rocketmq.common.utils.ConcurrentHashMapUtils",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "Objects.requireNonNull(func);",
                "type": "ADD",
                "lineNo": 44
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.requireNonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.requireNonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Function func"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "v = map.computeIfAbsent(key, func);",
                "type": "DELETE",
                "lineNo": 46
              }
            ],
            "targetChanges": [
              {
                "line": "//                v = map.computeIfAbsent(key, func);",
                "type": "ADD",
                "lineNo": 48
              },
              {
                "line": "// this bug fix methods maybe cause `func.apply` multiple calls.",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "v = func.apply(key);",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "if (null == v) {",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "return null;",
                "type": "ADD",
                "lineNo": 53
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 54
              },
              {
                "line": "final V res = map.putIfAbsent(key, v);",
                "type": "ADD",
                "lineNo": 55
              },
              {
                "line": "if (null != res) {",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "// if pre value present, means other thread put value already, and putIfAbsent not effect",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "// return exist value",
                "type": "ADD",
                "lineNo": 58
              },
              {
                "line": "return res;",
                "type": "ADD",
                "lineNo": 59
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 60
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableWrite",
                "value": "null v"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.ConcurrentMap.computeIfAbsent(Object,Function)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.ConcurrentMap map"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.ConcurrentMap.computeIfAbsent(Object,Function)"
              },
              {
                "type": "CtVariableRead",
                "value": "null key"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Function func"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableWrite",
                "value": "null v"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Function.apply(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Function func"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Function.apply(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "null key"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "null v"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtLocalVariable",
                "value": "null res"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.ConcurrentMap.putIfAbsent(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.ConcurrentMap map"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.ConcurrentMap.putIfAbsent(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "null key"
              },
              {
                "type": "CtVariableRead",
                "value": "null v"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "null res"
              },
              {
                "type": "CtVariableRead",
                "value": "null res"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "common/src/test/java/org/apache/rocketmq/common/utils/ConcurrentHashMapUtilsTest.java",
        "aPath": "common/src/test/java/org/apache/rocketmq/common/utils/ConcurrentHashMapUtilsTest.java",
        "name": "org.apache.rocketmq.common.utils.ConcurrentHashMapUtilsTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "//        map.computeIfAbsent(\"AaAa\", key->map.computeIfAbsent(\"BBBB\",key2->\"42\"));",
                "type": "ADD",
                "lineNo": 38
              },
              {
                "line": "ConcurrentHashMapUtils.computeIfAbsent(map, \"AaAa\", key -> map.computeIfAbsent(\"BBBB\", key2 -> \"42\"));",
                "type": "ADD",
                "lineNo": 39
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.common.utils.ConcurrentHashMapUtils.computeIfAbsent(ConcurrentMap,Object,Function)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.utils.ConcurrentHashMapUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.common.utils.ConcurrentHashMapUtils.computeIfAbsent(ConcurrentMap,Object,Function)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.ConcurrentHashMap map"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'AaAa'"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String key"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Object,Function)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.ConcurrentHashMap map"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.ConcurrentHashMap.computeIfAbsent(Object,Function)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'BBBB'"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String key2"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '42'"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "49ccdc9d2",
    "aCommit": "15c6889bb",
    "changes": [
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/consumer/ReceiveMessageActivity.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/consumer/ReceiveMessageActivity.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.consumer.ReceiveMessageActivity",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "request.getAttemptId(),",
                "type": "DELETE",
                "lineNo": 133
              }
            ],
            "targetChanges": [
              {
                "line": "request.hasAttemptId() ? request.getAttemptId() : null,",
                "type": "ADD",
                "lineNo": 133
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "getAttemptId()"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.ReceiveMessageRequest request"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttemptId()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "hasAttemptId()"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.ReceiveMessageRequest request"
              },
              {
                "type": "CtExecutableReference",
                "value": "hasAttemptId()"
              },
              {
                "type": "CtInvocation",
                "value": "getAttemptId()"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.ReceiveMessageRequest request"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttemptId()"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/grpc/v2/consumer/ReceiveMessageActivityTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/grpc/v2/consumer/ReceiveMessageActivityTest.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.consumer.ReceiveMessageActivityTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "pollTimeCaptor.capture(), anyInt(), any(), anyBoolean(), any(), anyString(), anyLong()))",
                "type": "DELETE",
                "lineNo": 92
              }
            ],
            "targetChanges": [
              {
                "line": "pollTimeCaptor.capture(), anyInt(), any(), anyBoolean(), any(), isNull(), anyLong()))",
                "type": "ADD",
                "lineNo": 93
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "capture()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.mockito.ArgumentCaptor pollTimeCaptor"
              },
              {
                "type": "CtExecutableReference",
                "value": "capture()"
              },
              {
                "type": "CtInvocation",
                "value": "anyInt()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyInt()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyBoolean()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyBoolean()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "anyLong()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyLong()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "capture()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.mockito.ArgumentCaptor pollTimeCaptor"
              },
              {
                "type": "CtExecutableReference",
                "value": "capture()"
              },
              {
                "type": "CtInvocation",
                "value": "anyInt()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyInt()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyBoolean()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyBoolean()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "isNull()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isNull()"
              },
              {
                "type": "CtInvocation",
                "value": "anyLong()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyLong()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "anyString(),",
                "type": "DELETE",
                "lineNo": 248
              }
            ],
            "targetChanges": [
              {
                "line": "isNull(),",
                "type": "ADD",
                "lineNo": 248
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isNull()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isNull()"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "66ba4566f",
    "aCommit": "87b97f271",
    "changes": [
      {
        "bPath": "common/src/main/java/org/apache/rocketmq/common/constant/PermName.java",
        "aPath": "common/src/main/java/org/apache/rocketmq/common/constant/PermName.java",
        "name": "org.apache.rocketmq.common.constant.PermName",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "public static boolean isAccessible(final int perm) {",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "return isReadable(perm) || isWriteable(perm);",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 74
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.common.constant.PermName.isAccessible(int)"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtParameter",
                "value": "int perm"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.common.constant.PermName.isReadable(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.common.constant.PermName.isReadable(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "int perm"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.common.constant.PermName.isWriteable(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.common.constant.PermName.isWriteable(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "int perm"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/route/RouteActivity.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/route/RouteActivity.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivity",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "int n = 0;",
                "type": "ADD",
                "lineNo": 247
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "int n"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "} else if (!PermName.isAccessible(queueData.getPerm())) {",
                "type": "ADD",
                "lineNo": 256
              },
              {
                "line": "n = Math.max(1, Math.max(queueData.getWriteQueueNums(), queueData.getReadQueueNums()));",
                "type": "ADD",
                "lineNo": 257
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.common.constant.PermName.isAccessible(int)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.constant.PermName"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.common.constant.PermName.isAccessible(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData.getPerm()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData queueData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData.getPerm()"
              },
              {
                "type": "CtVariableWrite",
                "value": "int n"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Math.max(int,int)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Math"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Math.max(int,int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Math.max(int,int)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Math"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Math.max(int,int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData.getWriteQueueNums()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData queueData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData.getWriteQueueNums()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData.getReadQueueNums()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData queueData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData.getReadQueueNums()"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "for (int i = 0; i < n; i++) {",
                "type": "ADD",
                "lineNo": 289
              },
              {
                "line": "MessageQueue messageQueue = MessageQueue.newBuilder().setBroker(broker).setTopic(topic)",
                "type": "ADD",
                "lineNo": 290
              },
              {
                "line": ".setId(queueIdIndex++)",
                "type": "ADD",
                "lineNo": 291
              },
              {
                "line": ".setPermission(Permission.NONE)",
                "type": "ADD",
                "lineNo": 292
              },
              {
                "line": ".addAllAcceptMessageTypes(parseTopicMessageType(topicMessageType))",
                "type": "ADD",
                "lineNo": 293
              },
              {
                "line": ".build();",
                "type": "ADD",
                "lineNo": 294
              },
              {
                "line": "messageQueueList.add(messageQueue);",
                "type": "ADD",
                "lineNo": 295
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 296
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "int i"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtVariableRead",
                "value": "int n"
              },
              {
                "type": "CtVariableWrite",
                "value": "int i"
              },
              {
                "type": "CtLocalVariable",
                "value": "apache.rocketmq.v2.MessageQueue messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "apache.rocketmq.v2.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "addAllAcceptMessageTypes(java.util.List)"
              },
              {
                "type": "CtInvocation",
                "value": "setPermission()"
              },
              {
                "type": "CtInvocation",
                "value": "setId(int)"
              },
              {
                "type": "CtInvocation",
                "value": "setTopic(apache.rocketmq.v2.Resource)"
              },
              {
                "type": "CtInvocation",
                "value": "setBroker(apache.rocketmq.v2.Broker)"
              },
              {
                "type": "CtInvocation",
                "value": "newBuilder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "apache.rocketmq.v2.MessageQueue"
              },
              {
                "type": "CtExecutableReference",
                "value": "newBuilder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "setBroker(apache.rocketmq.v2.Broker)"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.Broker broker"
              },
              {
                "type": "CtExecutableReference",
                "value": "setTopic(apache.rocketmq.v2.Resource)"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.Resource topic"
              },
              {
                "type": "CtExecutableReference",
                "value": "setId(int)"
              },
              {
                "type": "CtVariableWrite",
                "value": "int queueIdIndex"
              },
              {
                "type": "CtExecutableReference",
                "value": "setPermission()"
              },
              {
                "type": "CtTypeAccess",
                "value": "Permission.NONE"
              },
              {
                "type": "CtExecutableReference",
                "value": "addAllAcceptMessageTypes(java.util.List)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivity.parseTopicMessageType(TopicMessageType)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivity.parseTopicMessageType(TopicMessageType)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType topicMessageType"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "add(apache.rocketmq.v2.MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List messageQueueList"
              },
              {
                "type": "CtExecutableReference",
                "value": "add(apache.rocketmq.v2.MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.MessageQueue messageQueue"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/grpc/v2/route/RouteActivityTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/grpc/v2/route/RouteActivityTest.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivityTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "// test queueData with 2 read queues, 2 write queues, and no permission, expect 2 no permission queues.",
                "type": "ADD",
                "lineNo": 276
              },
              {
                "line": "QueueData queueDataWith2R2WNoPerm = createQueueData(2, 2, 0);",
                "type": "ADD",
                "lineNo": 277
              },
              {
                "line": "List<MessageQueue> partitionWith2R2WNoPerm = this.routeActivity.genMessageQueueFromQueueData(queueDataWith2R2WNoPerm, GRPC_TOPIC, TopicMessageType.UNSPECIFIED, GRPC_BROKER);",
                "type": "ADD",
                "lineNo": 278
              },
              {
                "line": "assertEquals(2, partitionWith2R2WNoPerm.size());",
                "type": "ADD",
                "lineNo": 279
              },
              {
                "line": "assertEquals(2, partitionWith2R2WNoPerm.stream().filter(a -> a.getAcceptMessageTypesValue(0) == MessageType.MESSAGE_TYPE_UNSPECIFIED.getNumber()).count());",
                "type": "ADD",
                "lineNo": 280
              },
              {
                "line": "assertEquals(2, partitionWith2R2WNoPerm.stream().filter(a -> a.getPermission() == Permission.NONE).count());",
                "type": "ADD",
                "lineNo": 281
              },
              {
                "line": "assertEquals(0, partitionWith2R2WNoPerm.stream().filter(a -> a.getPermission() == Permission.WRITE).count());",
                "type": "ADD",
                "lineNo": 282
              },
              {
                "line": "assertEquals(0, partitionWith2R2WNoPerm.stream().filter(a -> a.getPermission() == Permission.READ_WRITE).count());",
                "type": "ADD",
                "lineNo": 283
              },
              {
                "line": "assertEquals(0, partitionWith2R2WNoPerm.stream().filter(a -> a.getPermission() == Permission.READ).count());",
                "type": "ADD",
                "lineNo": 284
              },
              {
                "line": "// test queueData with 0 read queues, 0 write queues, and no permission, expect 1 no permission queue.",
                "type": "ADD",
                "lineNo": 286
              },
              {
                "line": "QueueData queueDataWith0R0WNoPerm = createQueueData(0, 0, 0);",
                "type": "ADD",
                "lineNo": 287
              },
              {
                "line": "List<MessageQueue> partitionWith0R0WNoPerm = this.routeActivity.genMessageQueueFromQueueData(queueDataWith0R0WNoPerm, GRPC_TOPIC, TopicMessageType.UNSPECIFIED, GRPC_BROKER);",
                "type": "ADD",
                "lineNo": 288
              },
              {
                "line": "assertEquals(1, partitionWith0R0WNoPerm.size());",
                "type": "ADD",
                "lineNo": 289
              },
              {
                "line": "assertEquals(1, partitionWith0R0WNoPerm.stream().filter(a -> a.getAcceptMessageTypesValue(0) == MessageType.MESSAGE_TYPE_UNSPECIFIED.getNumber()).count());",
                "type": "ADD",
                "lineNo": 290
              },
              {
                "line": "assertEquals(1, partitionWith0R0WNoPerm.stream().filter(a -> a.getPermission() == Permission.NONE).count());",
                "type": "ADD",
                "lineNo": 291
              },
              {
                "line": "assertEquals(0, partitionWith0R0WNoPerm.stream().filter(a -> a.getPermission() == Permission.WRITE).count());",
                "type": "ADD",
                "lineNo": 292
              },
              {
                "line": "assertEquals(0, partitionWith0R0WNoPerm.stream().filter(a -> a.getPermission() == Permission.READ_WRITE).count());",
                "type": "ADD",
                "lineNo": 293
              },
              {
                "line": "assertEquals(0, partitionWith0R0WNoPerm.stream().filter(a -> a.getPermission() == Permission.READ).count());",
                "type": "ADD",
                "lineNo": 294
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData queueDataWith2R2WNoPerm"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivityTest.createQueueData(int,int,int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivityTest.createQueueData(int,int,int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '2'"
              },
              {
                "type": "CtLiteral",
                "value": "int '2'"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List partitionWith2R2WNoPerm"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "apache.rocketmq.v2.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivity.genMessageQueueFromQueueData(QueueData,Resource,TopicMessageType,Broker)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivity routeActivity"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivity.genMessageQueueFromQueueData(QueueData,Resource,TopicMessageType,Broker)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData queueDataWith2R2WNoPerm"
              },
              {
                "type": "CtFieldRead",
                "value": "apache.rocketmq.v2.Resource GRPC_TOPIC"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType UNSPECIFIED"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType UNSPECIFIED"
              },
              {
                "type": "CtFieldRead",
                "value": "apache.rocketmq.v2.Broker GRPC_BROKER"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "int '2'"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List partitionWith2R2WNoPerm"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "int '2'"
              },
              {
                "type": "CtInvocation",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "filter()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List partitionWith2R2WNoPerm"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "filter()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> a"
              },
              {
                "type": "CtInvocation",
                "value": "getAcceptMessageTypesValue()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> a"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> a"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAcceptMessageTypesValue()"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "getNumber()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> MessageType.MESSAGE_TYPE_UNSPECIFIED"
              },
              {
                "type": "CtExecutableReference",
                "value": "getNumber()"
              },
              {
                "type": "CtExecutableReference",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "int '2'"
              },
              {
                "type": "CtInvocation",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "filter()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List partitionWith2R2WNoPerm"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "filter()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> a"
              },
              {
                "type": "CtInvocation",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> a"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> a"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Permission.NONE"
              },
              {
                "type": "CtExecutableReference",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "filter()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List partitionWith2R2WNoPerm"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "filter()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> a"
              },
              {
                "type": "CtInvocation",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> a"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> a"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Permission.WRITE"
              },
              {
                "type": "CtExecutableReference",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "filter()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List partitionWith2R2WNoPerm"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "filter()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> a"
              },
              {
                "type": "CtInvocation",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> a"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> a"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Permission.READ_WRITE"
              },
              {
                "type": "CtExecutableReference",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "filter()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List partitionWith2R2WNoPerm"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "filter()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> a"
              },
              {
                "type": "CtInvocation",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> a"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> a"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Permission.READ"
              },
              {
                "type": "CtExecutableReference",
                "value": "count()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData queueDataWith0R0WNoPerm"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivityTest.createQueueData(int,int,int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivityTest.createQueueData(int,int,int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List partitionWith0R0WNoPerm"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "apache.rocketmq.v2.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivity.genMessageQueueFromQueueData(QueueData,Resource,TopicMessageType,Broker)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivity routeActivity"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivity.genMessageQueueFromQueueData(QueueData,Resource,TopicMessageType,Broker)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.route.QueueData queueDataWith0R0WNoPerm"
              },
              {
                "type": "CtFieldRead",
                "value": "apache.rocketmq.v2.Resource GRPC_TOPIC"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType UNSPECIFIED"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType UNSPECIFIED"
              },
              {
                "type": "CtFieldRead",
                "value": "apache.rocketmq.v2.Broker GRPC_BROKER"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List partitionWith0R0WNoPerm"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "filter()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List partitionWith0R0WNoPerm"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "filter()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> a"
              },
              {
                "type": "CtInvocation",
                "value": "getAcceptMessageTypesValue()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> a"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> a"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAcceptMessageTypesValue()"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "getNumber()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> MessageType.MESSAGE_TYPE_UNSPECIFIED"
              },
              {
                "type": "CtExecutableReference",
                "value": "getNumber()"
              },
              {
                "type": "CtExecutableReference",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "filter()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List partitionWith0R0WNoPerm"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "filter()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> a"
              },
              {
                "type": "CtInvocation",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> a"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> a"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Permission.NONE"
              },
              {
                "type": "CtExecutableReference",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "filter()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List partitionWith0R0WNoPerm"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "filter()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> a"
              },
              {
                "type": "CtInvocation",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> a"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> a"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Permission.WRITE"
              },
              {
                "type": "CtExecutableReference",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "filter()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List partitionWith0R0WNoPerm"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "filter()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> a"
              },
              {
                "type": "CtInvocation",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> a"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> a"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Permission.READ_WRITE"
              },
              {
                "type": "CtExecutableReference",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "count()"
              },
              {
                "type": "CtInvocation",
                "value": "filter()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List partitionWith0R0WNoPerm"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "filter()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> a"
              },
              {
                "type": "CtInvocation",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> a"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> a"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPermission()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Permission.READ"
              },
              {
                "type": "CtExecutableReference",
                "value": "count()"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "6d7513425",
    "aCommit": "526235814",
    "changes": [
      {
        "bPath": "broker/src/main/java/org/apache/rocketmq/broker/out/BrokerOuterAPI.java",
        "aPath": "broker/src/main/java/org/apache/rocketmq/broker/out/BrokerOuterAPI.java",
        "name": "org.apache.rocketmq.broker.out.BrokerOuterAPI",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "RemotingCommand request = RemotingCommand.createRequestCommand(RequestCode.LOCK_BATCH_MQ, null);",
                "type": "DELETE",
                "lineNo": 909
              }
            ],
            "targetChanges": [
              {
                "line": "RemotingCommand request = RemotingCommand.createRequestCommand(RequestCode.LOCK_BATCH_MQ, new LockBatchMqRequestHeader());",
                "type": "ADD",
                "lineNo": 911
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtFieldRead",
                "value": "int LOCK_BATCH_MQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RequestCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int LOCK_BATCH_MQ"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtFieldRead",
                "value": "int LOCK_BATCH_MQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RequestCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int LOCK_BATCH_MQ"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.remoting.protocol.header.LockBatchMqRequestHeader.LockBatchMqRequestHeader()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.header.LockBatchMqRequestHeader"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "RemotingCommand request = RemotingCommand.createRequestCommand(RequestCode.UNLOCK_BATCH_MQ, null);",
                "type": "DELETE",
                "lineNo": 948
              }
            ],
            "targetChanges": [
              {
                "line": "RemotingCommand request = RemotingCommand.createRequestCommand(RequestCode.UNLOCK_BATCH_MQ, new UnlockBatchMqRequestHeader());",
                "type": "ADD",
                "lineNo": 950
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtFieldRead",
                "value": "int UNLOCK_BATCH_MQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RequestCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int UNLOCK_BATCH_MQ"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtFieldRead",
                "value": "int UNLOCK_BATCH_MQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RequestCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int UNLOCK_BATCH_MQ"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.remoting.protocol.header.UnlockBatchMqRequestHeader.UnlockBatchMqRequestHeader()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.header.UnlockBatchMqRequestHeader"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "client/src/main/java/org/apache/rocketmq/client/impl/MQClientAPIImpl.java",
        "aPath": "client/src/main/java/org/apache/rocketmq/client/impl/MQClientAPIImpl.java",
        "name": "org.apache.rocketmq.client.impl.MQClientAPIImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "RemotingCommand request = RemotingCommand.createRequestCommand(RequestCode.LOCK_BATCH_MQ, null);",
                "type": "DELETE",
                "lineNo": 1616
              }
            ],
            "targetChanges": [
              {
                "line": "RemotingCommand request = RemotingCommand.createRequestCommand(RequestCode.LOCK_BATCH_MQ, new LockBatchMqRequestHeader());",
                "type": "ADD",
                "lineNo": 1618
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtFieldRead",
                "value": "int LOCK_BATCH_MQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RequestCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int LOCK_BATCH_MQ"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtFieldRead",
                "value": "int LOCK_BATCH_MQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RequestCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int LOCK_BATCH_MQ"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.remoting.protocol.header.LockBatchMqRequestHeader.LockBatchMqRequestHeader()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.header.LockBatchMqRequestHeader"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "RemotingCommand request = RemotingCommand.createRequestCommand(RequestCode.UNLOCK_BATCH_MQ, null);",
                "type": "DELETE",
                "lineNo": 1640
              }
            ],
            "targetChanges": [
              {
                "line": "RemotingCommand request = RemotingCommand.createRequestCommand(RequestCode.UNLOCK_BATCH_MQ, new UnlockBatchMqRequestHeader());",
                "type": "ADD",
                "lineNo": 1642
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtFieldRead",
                "value": "int UNLOCK_BATCH_MQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RequestCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int UNLOCK_BATCH_MQ"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtFieldRead",
                "value": "int UNLOCK_BATCH_MQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RequestCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int UNLOCK_BATCH_MQ"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.remoting.protocol.header.UnlockBatchMqRequestHeader.UnlockBatchMqRequestHeader()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.header.UnlockBatchMqRequestHeader"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "client/src/main/java/org/apache/rocketmq/client/impl/mqclient/MQClientAPIExt.java",
        "aPath": "client/src/main/java/org/apache/rocketmq/client/impl/mqclient/MQClientAPIExt.java",
        "name": "org.apache.rocketmq.client.impl.mqclient.MQClientAPIExt",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "RemotingCommand request = RemotingCommand.createRequestCommand(RequestCode.LOCK_BATCH_MQ, null);",
                "type": "DELETE",
                "lineNo": 546
              }
            ],
            "targetChanges": [
              {
                "line": "RemotingCommand request = RemotingCommand.createRequestCommand(RequestCode.LOCK_BATCH_MQ, new LockBatchMqRequestHeader());",
                "type": "ADD",
                "lineNo": 548
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtFieldRead",
                "value": "int LOCK_BATCH_MQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RequestCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int LOCK_BATCH_MQ"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtFieldRead",
                "value": "int LOCK_BATCH_MQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RequestCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int LOCK_BATCH_MQ"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.remoting.protocol.header.LockBatchMqRequestHeader.LockBatchMqRequestHeader()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.header.LockBatchMqRequestHeader"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "RemotingCommand request = RemotingCommand.createRequestCommand(RequestCode.UNLOCK_BATCH_MQ, null);",
                "type": "DELETE",
                "lineNo": 568
              }
            ],
            "targetChanges": [
              {
                "line": "RemotingCommand request = RemotingCommand.createRequestCommand(RequestCode.UNLOCK_BATCH_MQ, new UnlockBatchMqRequestHeader());",
                "type": "ADD",
                "lineNo": 570
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtFieldRead",
                "value": "int UNLOCK_BATCH_MQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RequestCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int UNLOCK_BATCH_MQ"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.createRequestCommand(int,CommandCustomHeader)"
              },
              {
                "type": "CtFieldRead",
                "value": "int UNLOCK_BATCH_MQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.RequestCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int UNLOCK_BATCH_MQ"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.remoting.protocol.header.UnlockBatchMqRequestHeader.UnlockBatchMqRequestHeader()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.header.UnlockBatchMqRequestHeader"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "client/src/main/java/org/apache/rocketmq/client/rpchook/NamespaceRpcHook.java",
        "aPath": "client/src/main/java/org/apache/rocketmq/client/rpchook/NamespaceRpcHook.java",
        "name": "org.apache.rocketmq.client.rpchook.NamespaceRpcHook",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "CommandCustomHeader customHeader = request.readCustomHeader();",
                "type": "DELETE",
                "lineNo": 36
              },
              {
                "line": "if (customHeader instanceof RpcRequestHeader) {",
                "type": "DELETE",
                "lineNo": 37
              },
              {
                "line": "RpcRequestHeader requestHeader = (RpcRequestHeader) customHeader;",
                "type": "DELETE",
                "lineNo": 38
              },
              {
                "line": "if (StringUtils.isNotEmpty(clientConfig.getNamespaceV2())) {",
                "type": "DELETE",
                "lineNo": 39
              },
              {
                "line": "requestHeader.setNamespaced(true);",
                "type": "DELETE",
                "lineNo": 40
              },
              {
                "line": "requestHeader.setNamespace(clientConfig.getNamespaceV2());",
                "type": "DELETE",
                "lineNo": 41
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 42
              }
            ],
            "targetChanges": [
              {
                "line": "if (StringUtils.isNotEmpty(clientConfig.getNamespaceV2())) {",
                "type": "ADD",
                "lineNo": 35
              },
              {
                "line": "request.addExtField(MixAll.RPC_REQUEST_HEADER_NAMESPACED_FIELD, \"true\");",
                "type": "ADD",
                "lineNo": 36
              },
              {
                "line": "request.addExtField(MixAll.RPC_REQUEST_HEADER_NAMESPACE_FIELD, clientConfig.getNamespaceV2());",
                "type": "ADD",
                "lineNo": 37
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.CommandCustomHeader customHeader"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.CommandCustomHeader"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.readCustomHeader()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.readCustomHeader()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.CommandCustomHeader customHeader"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader requestHeader"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.CommandCustomHeader customHeader"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.client.ClientConfig.getNamespaceV2()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.client.ClientConfig clientConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.client.ClientConfig.getNamespaceV2()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader.setNamespaced(Boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader requestHeader"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader.setNamespaced(Boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader.setNamespace(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader requestHeader"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader.setNamespace(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.client.ClientConfig.getNamespaceV2()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.client.ClientConfig clientConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.client.ClientConfig.getNamespaceV2()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.client.ClientConfig.getNamespaceV2()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.client.ClientConfig clientConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.client.ClientConfig.getNamespaceV2()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.addExtField(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.addExtField(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String RPC_REQUEST_HEADER_NAMESPACED_FIELD"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.MixAll"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String RPC_REQUEST_HEADER_NAMESPACED_FIELD"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.addExtField(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.addExtField(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String RPC_REQUEST_HEADER_NAMESPACE_FIELD"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.MixAll"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String RPC_REQUEST_HEADER_NAMESPACE_FIELD"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.client.ClientConfig.getNamespaceV2()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.client.ClientConfig clientConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.client.ClientConfig.getNamespaceV2()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "client/src/test/java/org/apache/rocketmq/client/rpchook/NamespaceRpcHookTest.java",
        "aPath": "client/src/test/java/org/apache/rocketmq/client/rpchook/NamespaceRpcHookTest.java",
        "name": "org.apache.rocketmq.client.rpchook.NamespaceRpcHookTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertThat(pullMessageRequestHeader.getNamespaced()).isTrue();",
                "type": "DELETE",
                "lineNo": 42
              },
              {
                "line": "assertThat(pullMessageRequestHeader.getNamespace()).isEqualTo(namespace);",
                "type": "DELETE",
                "lineNo": 43
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(request.getExtFields().get(MixAll.RPC_REQUEST_HEADER_NAMESPACED_FIELD)).isEqualTo(\"true\");",
                "type": "ADD",
                "lineNo": 43
              },
              {
                "line": "assertThat(request.getExtFields().get(MixAll.RPC_REQUEST_HEADER_NAMESPACE_FIELD)).isEqualTo(namespace);",
                "type": "ADD",
                "lineNo": 44
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isTrue()"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.Boolean)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.Boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader.getNamespaced()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.header.PullMessageRequestHeader pullMessageRequestHeader"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader.getNamespaced()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isTrue()"
              },
              {
                "type": "CtInvocation",
                "value": "isEqualTo(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader.getNamespace()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.header.PullMessageRequestHeader pullMessageRequestHeader"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader.getNamespace()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String namespace"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.HashMap.get(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getExtFields()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getExtFields()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.HashMap.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String RPC_REQUEST_HEADER_NAMESPACED_FIELD"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.MixAll"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String RPC_REQUEST_HEADER_NAMESPACED_FIELD"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "isEqualTo(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.HashMap.get(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getExtFields()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getExtFields()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.HashMap.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String RPC_REQUEST_HEADER_NAMESPACE_FIELD"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.MixAll"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String RPC_REQUEST_HEADER_NAMESPACE_FIELD"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String namespace"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(pullMessageRequestHeader.getNamespaced()).isNull();",
                "type": "DELETE",
                "lineNo": 53
              },
              {
                "line": "assertThat(pullMessageRequestHeader.getNamespace()).isNull();",
                "type": "DELETE",
                "lineNo": 54
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(request.getExtFields()).isNull();",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isNull()"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.Boolean)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.Boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader.getNamespaced()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.header.PullMessageRequestHeader pullMessageRequestHeader"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader.getNamespaced()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isNull()"
              },
              {
                "type": "CtInvocation",
                "value": "isNull()"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader.getNamespace()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.header.PullMessageRequestHeader pullMessageRequestHeader"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.rpc.RpcRequestHeader.getNamespace()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isNull()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isNull()"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(java.util.HashMap)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.util.HashMap)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getExtFields()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand request"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getExtFields()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isNull()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "common/src/main/java/org/apache/rocketmq/common/MixAll.java",
        "aPath": "common/src/main/java/org/apache/rocketmq/common/MixAll.java",
        "name": "org.apache.rocketmq.common.MixAll",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "public final static String RPC_REQUEST_HEADER_NAMESPACED_FIELD = \"nsd\";",
                "type": "ADD",
                "lineNo": 111
              },
              {
                "line": "public final static String RPC_REQUEST_HEADER_NAMESPACE_FIELD = \"ns\";",
                "type": "ADD",
                "lineNo": 112
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String RPC_REQUEST_HEADER_NAMESPACED_FIELD"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'nsd'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String RPC_REQUEST_HEADER_NAMESPACE_FIELD"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ns'"
              }
            ]
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "9aa081b8a",
    "aCommit": "b5cf3ca90",
    "changes": [
      {
        "bPath": "broker/src/main/java/org/apache/rocketmq/broker/client/net/Broker2Client.java",
        "aPath": "broker/src/main/java/org/apache/rocketmq/broker/client/net/Broker2Client.java",
        "name": "org.apache.rocketmq.broker.client.net.Broker2Client",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 116
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.TOPIC_NOT_EXIST);",
                "type": "ADD",
                "lineNo": 116
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int TOPIC_NOT_EXIST"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int TOPIC_NOT_EXIST"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/AbstractSendMessageProcessor.java",
        "aPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/AbstractSendMessageProcessor.java",
        "name": "org.apache.rocketmq.broker.processor.AbstractSendMessageProcessor",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 470
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 470
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 525
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 525
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessor.java",
        "aPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessor.java",
        "name": "org.apache.rocketmq.broker.processor.AdminBrokerProcessor",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 428
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.SUBSCRIPTION_GROUP_NOT_EXIST);",
                "type": "ADD",
                "lineNo": 428
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SUBSCRIPTION_GROUP_NOT_EXIST"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SUBSCRIPTION_GROUP_NOT_EXIST"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 517
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 517
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 523
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 523
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 544
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 544
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 607
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 607
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 613
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 613
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 623
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 623
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 677
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 677
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 683
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 683
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 724
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 724
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 731
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 731
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 1095
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 1095
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 3084
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 3084
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 3116
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 3116
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 3180
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 3180
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/ConsumerManageProcessor.java",
        "aPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/ConsumerManageProcessor.java",
        "name": "org.apache.rocketmq.broker.processor.ConsumerManageProcessor",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 180
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 180
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 186
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 186
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/NotificationProcessor.java",
        "aPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/NotificationProcessor.java",
        "name": "org.apache.rocketmq.broker.processor.NotificationProcessor",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 115
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 115
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/PeekMessageProcessor.java",
        "aPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/PeekMessageProcessor.java",
        "name": "org.apache.rocketmq.broker.processor.PeekMessageProcessor",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 117
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 117
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/PollingInfoProcessor.java",
        "aPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/PollingInfoProcessor.java",
        "name": "org.apache.rocketmq.broker.processor.PollingInfoProcessor",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 92
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 92
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/PopMessageProcessor.java",
        "aPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/PopMessageProcessor.java",
        "name": "org.apache.rocketmq.broker.processor.PopMessageProcessor",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 255
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 255
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 291
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 291
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/PullMessageProcessor.java",
        "aPath": "broker/src/main/java/org/apache/rocketmq/broker/processor/PullMessageProcessor.java",
        "name": "org.apache.rocketmq.broker.processor.PullMessageProcessor",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "response.setCode(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 374
              }
            ],
            "targetChanges": [
              {
                "line": "response.setCode(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 374
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.setCode(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "broker/src/test/java/org/apache/rocketmq/broker/client/net/Broker2ClientTest.java",
        "aPath": "broker/src/test/java/org/apache/rocketmq/broker/client/net/Broker2ClientTest.java",
        "name": "org.apache.rocketmq.broker.client.net.Broker2ClientTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertEquals(ResponseCode.SYSTEM_ERROR, response.getCode());",
                "type": "DELETE",
                "lineNo": 132
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(ResponseCode.TOPIC_NOT_EXIST, response.getCode());",
                "type": "ADD",
                "lineNo": 132
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int TOPIC_NOT_EXIST"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int TOPIC_NOT_EXIST"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "broker/src/test/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessorTest.java",
        "aPath": "broker/src/test/java/org/apache/rocketmq/broker/processor/AdminBrokerProcessorTest.java",
        "name": "org.apache.rocketmq.broker.processor.AdminBrokerProcessorTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 320
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 320
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 328
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 328
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 342
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 342
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 354
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 354
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 361
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 361
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 381
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 381
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 403
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 403
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 1068
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 1068
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "broker/src/test/java/org/apache/rocketmq/broker/processor/PeekMessageProcessorTest.java",
        "aPath": "broker/src/test/java/org/apache/rocketmq/broker/processor/PeekMessageProcessorTest.java",
        "name": "org.apache.rocketmq.broker.processor.PeekMessageProcessorTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.SYSTEM_ERROR);",
                "type": "DELETE",
                "lineNo": 157
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(response.getCode()).isEqualTo(ResponseCode.INVALID_PARAMETER);",
                "type": "ADD",
                "lineNo": 157
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int SYSTEM_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int SYSTEM_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand response"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.RemotingCommand.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEqualTo(int)"
              },
              {
                "type": "CtFieldRead",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int INVALID_PARAMETER"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "remoting/src/main/java/org/apache/rocketmq/remoting/protocol/ResponseCode.java",
        "aPath": "remoting/src/main/java/org/apache/rocketmq/remoting/protocol/ResponseCode.java",
        "name": "org.apache.rocketmq.remoting.protocol.ResponseCode",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "public static final int INVALID_PARAMETER = 29;",
                "type": "ADD",
                "lineNo": 58
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "int INVALID_PARAMETER"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtLiteral",
                "value": "int '29'"
              }
            ]
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "bee5077bc",
    "aCommit": "a325d144b",
    "changes": [
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/client/ClientActivity.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/client/ClientActivity.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.client.ClientActivity",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "TopicMessageType topicMessageType = this.messagingProcessor.getMetadataService().getTopicMessageType(topicName);",
                "type": "DELETE",
                "lineNo": 290
              }
            ],
            "targetChanges": [
              {
                "line": "TopicMessageType topicMessageType = this.messagingProcessor.getMetadataService().getTopicMessageType(ctx, topicName);",
                "type": "ADD",
                "lineNo": 290
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType topicMessageType"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor messagingProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topicName"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType topicMessageType"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor messagingProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topicName"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/consumer/AckMessageActivity.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/consumer/AckMessageActivity.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.consumer.AckMessageActivity",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "MessageReceiptHandle messageReceiptHandle = receiptHandleProcessor.removeReceiptHandle(grpcChannelManager.getChannel(ctx.getClientID()), group, ackMessageEntry.getMessageId(), ackMessageEntry.getReceiptHandle());",
                "type": "DELETE",
                "lineNo": 101
              }
            ],
            "targetChanges": [
              {
                "line": "MessageReceiptHandle messageReceiptHandle = receiptHandleProcessor.removeReceiptHandle(ctx, grpcChannelManager.getChannel(ctx.getClientID()), group, ackMessageEntry.getMessageId(), ackMessageEntry.getReceiptHandle());",
                "type": "ADD",
                "lineNo": 101
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle"
              },
              {
                "type": "CtInvocation",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager.getChannel(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager grpcChannelManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager.getChannel(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtInvocation",
                "value": "getMessageId()"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.AckMessageEntry ackMessageEntry"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMessageId()"
              },
              {
                "type": "CtInvocation",
                "value": "getReceiptHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.AckMessageEntry ackMessageEntry"
              },
              {
                "type": "CtExecutableReference",
                "value": "getReceiptHandle()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle"
              },
              {
                "type": "CtInvocation",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.common.ProxyContext,org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.common.ProxyContext,org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager.getChannel(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager grpcChannelManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager.getChannel(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtInvocation",
                "value": "getMessageId()"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.AckMessageEntry ackMessageEntry"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMessageId()"
              },
              {
                "type": "CtInvocation",
                "value": "getReceiptHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.AckMessageEntry ackMessageEntry"
              },
              {
                "type": "CtExecutableReference",
                "value": "getReceiptHandle()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/consumer/ChangeInvisibleDurationActivity.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/consumer/ChangeInvisibleDurationActivity.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.consumer.ChangeInvisibleDurationActivity",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "MessageReceiptHandle messageReceiptHandle = receiptHandleProcessor.removeReceiptHandle(grpcChannelManager.getChannel(ctx.getClientID()), group, request.getMessageId(), receiptHandle.getReceiptHandle());",
                "type": "DELETE",
                "lineNo": 58
              }
            ],
            "targetChanges": [
              {
                "line": "MessageReceiptHandle messageReceiptHandle = receiptHandleProcessor.removeReceiptHandle(ctx, grpcChannelManager.getChannel(ctx.getClientID()), group, request.getMessageId(), receiptHandle.getReceiptHandle());",
                "type": "ADD",
                "lineNo": 58
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle"
              },
              {
                "type": "CtInvocation",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager.getChannel(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager grpcChannelManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager.getChannel(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtInvocation",
                "value": "getMessageId()"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.ChangeInvisibleDurationRequest request"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMessageId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle.getReceiptHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle receiptHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle.getReceiptHandle()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle"
              },
              {
                "type": "CtInvocation",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.common.ProxyContext,org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.common.ProxyContext,org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager.getChannel(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager grpcChannelManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager.getChannel(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtInvocation",
                "value": "getMessageId()"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.ChangeInvisibleDurationRequest request"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMessageId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle.getReceiptHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle receiptHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle.getReceiptHandle()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/consumer/ReceiveMessageActivity.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/consumer/ReceiveMessageActivity.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.consumer.ReceiveMessageActivity",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(grpcChannelManager.getChannel(ctx.getClientID()), group, messageExt.getMsgId(), receiptHandle, messageReceiptHandle);",
                "type": "DELETE",
                "lineNo": 147
              }
            ],
            "targetChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(ctx, grpcChannelManager.getChannel(ctx.getClientID()), group, messageExt.getMsgId(), receiptHandle, messageReceiptHandle);",
                "type": "ADD",
                "lineNo": 147
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "addReceiptHandle()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "addReceiptHandle()"
              },
              {
                "type": "CtInvocation",
                "value": "getChannel()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager grpcChannelManager"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager grpcChannelManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "getChannel()"
              },
              {
                "type": "CtInvocation",
                "value": "getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtExecutableReference",
                "value": "getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String group"
              },
              {
                "type": "CtInvocation",
                "value": "getMsgId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageExt messageExt"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.rocketmq.common.message.MessageExt messageExt"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMsgId()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "addReceiptHandle()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "addReceiptHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtInvocation",
                "value": "getChannel()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager grpcChannelManager"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager grpcChannelManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "getChannel()"
              },
              {
                "type": "CtInvocation",
                "value": "getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtExecutableReference",
                "value": "getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String group"
              },
              {
                "type": "CtInvocation",
                "value": "getMsgId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageExt messageExt"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.rocketmq.common.message.MessageExt messageExt"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMsgId()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/producer/ForwardMessageToDLQActivity.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/producer/ForwardMessageToDLQActivity.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.producer.ForwardMessageToDLQActivity",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "MessageReceiptHandle messageReceiptHandle = receiptHandleProcessor.removeReceiptHandle(grpcChannelManager.getChannel(ctx.getClientID()), group, request.getMessageId(), request.getReceiptHandle());",
                "type": "DELETE",
                "lineNo": 51
              }
            ],
            "targetChanges": [
              {
                "line": "MessageReceiptHandle messageReceiptHandle = receiptHandleProcessor.removeReceiptHandle(ctx, grpcChannelManager.getChannel(ctx.getClientID()), group, request.getMessageId(), request.getReceiptHandle());",
                "type": "ADD",
                "lineNo": 51
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle"
              },
              {
                "type": "CtInvocation",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager.getChannel(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager grpcChannelManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager.getChannel(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtInvocation",
                "value": "getMessageId()"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.ForwardMessageToDeadLetterQueueRequest request"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMessageId()"
              },
              {
                "type": "CtInvocation",
                "value": "getReceiptHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.ForwardMessageToDeadLetterQueueRequest request"
              },
              {
                "type": "CtExecutableReference",
                "value": "getReceiptHandle()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle"
              },
              {
                "type": "CtInvocation",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.common.ProxyContext,org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.common.ProxyContext,org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager.getChannel(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager grpcChannelManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.grpc.v2.channel.GrpcChannelManager.getChannel(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.getClientID()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtInvocation",
                "value": "getMessageId()"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.ForwardMessageToDeadLetterQueueRequest request"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMessageId()"
              },
              {
                "type": "CtInvocation",
                "value": "getReceiptHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "apache.rocketmq.v2.ForwardMessageToDeadLetterQueueRequest request"
              },
              {
                "type": "CtExecutableReference",
                "value": "getReceiptHandle()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/route/RouteActivity.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/grpc/v2/route/RouteActivity.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivity",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "TopicMessageType topicMessageType = messagingProcessor.getMetadataService().getTopicMessageType(topicName);",
                "type": "DELETE",
                "lineNo": 74
              }
            ],
            "targetChanges": [
              {
                "line": "TopicMessageType topicMessageType = messagingProcessor.getMetadataService().getTopicMessageType(ctx, topicName);",
                "type": "ADD",
                "lineNo": 74
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType topicMessageType"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor messagingProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topicName"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType topicMessageType"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor messagingProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topicName"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/processor/ConsumerProcessor.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/processor/ConsumerProcessor.java",
        "name": "org.apache.rocketmq.proxy.processor.ConsumerProcessor",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "AddressableMessageQueue messageQueue = queueSelector.select(ctx, this.serviceManager.getTopicRouteService().getCurrentMessageQueueView(topic));",
                "type": "DELETE",
                "lineNo": 90
              }
            ],
            "targetChanges": [
              {
                "line": "AddressableMessageQueue messageQueue = queueSelector.select(ctx, this.serviceManager.getTopicRouteService().getCurrentMessageQueueView(ctx, topic));",
                "type": "ADD",
                "lineNo": 90
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.QueueSelector.select(ProxyContext,MessageQueueView)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.processor.QueueSelector queueSelector"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.QueueSelector.select(ProxyContext,MessageQueueView)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.QueueSelector.select(ProxyContext,MessageQueueView)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.processor.QueueSelector queueSelector"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.QueueSelector.select(ProxyContext,MessageQueueView)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".buildAddressableMessageQueue(messageQueue);",
                "type": "DELETE",
                "lineNo": 290
              }
            ],
            "targetChanges": [
              {
                "line": ".buildAddressableMessageQueue(ctx, messageQueue);",
                "type": "ADD",
                "lineNo": 290
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".buildAddressableMessageQueue(messageQueue);",
                "type": "DELETE",
                "lineNo": 314
              }
            ],
            "targetChanges": [
              {
                "line": ".buildAddressableMessageQueue(ctx, messageQueue);",
                "type": "ADD",
                "lineNo": 314
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".buildAddressableMessageQueue(messageQueue);",
                "type": "DELETE",
                "lineNo": 332
              }
            ],
            "targetChanges": [
              {
                "line": ".buildAddressableMessageQueue(ctx, messageQueue);",
                "type": "ADD",
                "lineNo": 332
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Set<AddressableMessageQueue> addressableMessageQueueSet = buildAddressableSet(mqSet);",
                "type": "DELETE",
                "lineNo": 348
              }
            ],
            "targetChanges": [
              {
                "line": "Set<AddressableMessageQueue> addressableMessageQueueSet = buildAddressableSet(ctx, mqSet);",
                "type": "ADD",
                "lineNo": 348
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Set addressableMessageQueueSet"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.buildAddressableSet(Set)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.buildAddressableSet(Set)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set mqSet"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Set addressableMessageQueueSet"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.buildAddressableSet(ProxyContext,Set)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.buildAddressableSet(ProxyContext,Set)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set mqSet"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Set<AddressableMessageQueue> addressableMessageQueueSet = buildAddressableSet(mqSet);",
                "type": "DELETE",
                "lineNo": 373
              }
            ],
            "targetChanges": [
              {
                "line": "Set<AddressableMessageQueue> addressableMessageQueueSet = buildAddressableSet(ctx, mqSet);",
                "type": "ADD",
                "lineNo": 373
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Set addressableMessageQueueSet"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.buildAddressableSet(Set)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.buildAddressableSet(Set)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set mqSet"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Set addressableMessageQueueSet"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.buildAddressableSet(ProxyContext,Set)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.buildAddressableSet(ProxyContext,Set)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set mqSet"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".buildAddressableMessageQueue(messageQueue);",
                "type": "DELETE",
                "lineNo": 397
              }
            ],
            "targetChanges": [
              {
                "line": ".buildAddressableMessageQueue(ctx, messageQueue);",
                "type": "ADD",
                "lineNo": 397
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".buildAddressableMessageQueue(messageQueue);",
                "type": "DELETE",
                "lineNo": 412
              }
            ],
            "targetChanges": [
              {
                "line": ".buildAddressableMessageQueue(ctx, messageQueue);",
                "type": "ADD",
                "lineNo": 412
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "protected Set<AddressableMessageQueue> buildAddressableSet(Set<MessageQueue> mqSet) {",
                "type": "DELETE",
                "lineNo": 423
              }
            ],
            "targetChanges": [
              {
                "line": "protected Set<AddressableMessageQueue> buildAddressableSet(ProxyContext ctx, Set<MessageQueue> mqSet) {",
                "type": "ADD",
                "lineNo": 423
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.buildAddressableSet(Set)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Set mqSet"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.buildAddressableSet(ProxyContext,Set)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Set mqSet"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return serviceManager.getTopicRouteService().buildAddressableMessageQueue(mq);",
                "type": "DELETE",
                "lineNo": 426
              }
            ],
            "targetChanges": [
              {
                "line": "return serviceManager.getTopicRouteService().buildAddressableMessageQueue(ctx, mq);",
                "type": "ADD",
                "lineNo": 426
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue mq"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue mq"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/processor/DefaultMessagingProcessor.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/processor/DefaultMessagingProcessor.java",
        "name": "org.apache.rocketmq.proxy.processor.DefaultMessagingProcessor",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return this.serviceManager.getMetadataService().getSubscriptionGroupConfig(consumerGroupName);",
                "type": "DELETE",
                "lineNo": 130
              }
            ],
            "targetChanges": [
              {
                "line": "return this.serviceManager.getMetadataService().getSubscriptionGroupConfig(ctx, consumerGroupName);",
                "type": "ADD",
                "lineNo": 130
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getMetadataService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getMetadataService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String consumerGroupName"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getMetadataService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getMetadataService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String consumerGroupName"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return this.serviceManager.getTopicRouteService().getTopicRouteForProxy(requestHostAndPortList, topicName);",
                "type": "DELETE",
                "lineNo": 136
              }
            ],
            "targetChanges": [
              {
                "line": "return this.serviceManager.getTopicRouteService().getTopicRouteForProxy(ctx, requestHostAndPortList, topicName);",
                "type": "ADD",
                "lineNo": 136
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getTopicRouteForProxy(List,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getTopicRouteForProxy(List,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List requestHostAndPortList"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topicName"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getTopicRouteForProxy(ProxyContext,List,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getTopicRouteForProxy(ProxyContext,List,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List requestHostAndPortList"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topicName"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/processor/ProducerProcessor.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/processor/ProducerProcessor.java",
        "name": "org.apache.rocketmq.proxy.processor.ProducerProcessor",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "TopicMessageType topicMessageType = serviceManager.getMetadataService().getTopicMessageType(topic);",
                "type": "DELETE",
                "lineNo": 76
              }
            ],
            "targetChanges": [
              {
                "line": "TopicMessageType topicMessageType = serviceManager.getMetadataService().getTopicMessageType(ctx, topic);",
                "type": "ADD",
                "lineNo": 76
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType topicMessageType"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getMetadataService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getMetadataService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType topicMessageType"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getMetadataService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getMetadataService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.serviceManager.getTopicRouteService().getCurrentMessageQueueView(topic));",
                "type": "DELETE",
                "lineNo": 83
              }
            ],
            "targetChanges": [
              {
                "line": "this.serviceManager.getTopicRouteService().getCurrentMessageQueueView(ctx, topic));",
                "type": "ADD",
                "lineNo": 83
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTopicRouteService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "fillTransactionData(producerGroup, messageQueue, sendResult, messageList);",
                "type": "DELETE",
                "lineNo": 105
              }
            ],
            "targetChanges": [
              {
                "line": "fillTransactionData(ctx, producerGroup, messageQueue, sendResult, messageList);",
                "type": "ADD",
                "lineNo": 105
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ProducerProcessor.fillTransactionData(String,AddressableMessageQueue,SendResult,List)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ProducerProcessor.fillTransactionData(String,AddressableMessageQueue,SendResult,List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue messageQueue"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.client.producer.SendResult sendResult"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List messageList"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ProducerProcessor.fillTransactionData(ProxyContext,String,AddressableMessageQueue,SendResult,List)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ProducerProcessor.fillTransactionData(ProxyContext,String,AddressableMessageQueue,SendResult,List)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue messageQueue"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.client.producer.SendResult sendResult"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List messageList"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "protected void fillTransactionData(String producerGroup, AddressableMessageQueue messageQueue, SendResult sendResult, List<Message> messageList) {",
                "type": "DELETE",
                "lineNo": 116
              }
            ],
            "targetChanges": [
              {
                "line": "protected void fillTransactionData(ProxyContext ctx, String producerGroup, AddressableMessageQueue messageQueue, SendResult sendResult, List<Message> messageList) {",
                "type": "ADD",
                "lineNo": 116
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.processor.ProducerProcessor.fillTransactionData(String,AddressableMessageQueue,SendResult,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.client.producer.SendResult sendResult"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.client.producer.SendResult"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List messageList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.Message"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.processor.ProducerProcessor.fillTransactionData(ProxyContext,String,AddressableMessageQueue,SendResult,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.client.producer.SendResult sendResult"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.client.producer.SendResult"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List messageList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.Message"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "ctx,",
                "type": "ADD",
                "lineNo": 125
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/processor/ReceiptHandleProcessor.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/processor/ReceiptHandleProcessor.java",
        "name": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "messagingProcessor.getMetadataService().getSubscriptionGroupConfig(messageReceiptHandle.getGroup());",
                "type": "DELETE",
                "lineNo": 204
              }
            ],
            "targetChanges": [
              {
                "line": "messagingProcessor.getMetadataService().getSubscriptionGroupConfig(context, messageReceiptHandle.getGroup());",
                "type": "ADD",
                "lineNo": 204
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor messagingProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle.getGroup()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle.getGroup()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor messagingProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext context"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle.getGroup()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle.getGroup()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void addReceiptHandle(Channel channel, String group, String msgID, String receiptHandle,",
                "type": "DELETE",
                "lineNo": 243
              }
            ],
            "targetChanges": [
              {
                "line": "public void addReceiptHandle(ProxyContext ctx, Channel channel, String group, String msgID, String receiptHandle,",
                "type": "ADD",
                "lineNo": 243
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtTypeReference",
                "value": "io.netty.channel.Channel"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String msgID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtTypeReference",
                "value": "io.netty.channel.Channel"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String msgID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.addReceiptHandle(new ReceiptHandleGroupKey(channel, group), msgID, receiptHandle, messageReceiptHandle);",
                "type": "DELETE",
                "lineNo": 245
              }
            ],
            "targetChanges": [
              {
                "line": "this.addReceiptHandle(ctx, new ReceiptHandleGroupKey(channel, group), msgID, receiptHandle, messageReceiptHandle);",
                "type": "ADD",
                "lineNo": 245
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ReceiptHandleGroupKey,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ReceiptHandleGroupKey,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey.ReceiptHandleGroupKey(Channel,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String msgID"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,ReceiptHandleGroupKey,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,ReceiptHandleGroupKey,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey.ReceiptHandleGroupKey(Channel,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String msgID"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "protected void addReceiptHandle(ReceiptHandleGroupKey key, String msgID, String receiptHandle,",
                "type": "DELETE",
                "lineNo": 248
              }
            ],
            "targetChanges": [
              {
                "line": "protected void addReceiptHandle(ProxyContext ctx, ReceiptHandleGroupKey key, String msgID, String receiptHandle,",
                "type": "ADD",
                "lineNo": 248
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ReceiptHandleGroupKey,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey key"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String msgID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,ReceiptHandleGroupKey,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey key"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String msgID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public MessageReceiptHandle removeReceiptHandle(Channel channel, String group, String msgID, String receiptHandle) {",
                "type": "DELETE",
                "lineNo": 257
              },
              {
                "line": "return this.removeReceiptHandle(new ReceiptHandleGroupKey(channel, group), msgID, receiptHandle);",
                "type": "DELETE",
                "lineNo": 258
              }
            ],
            "targetChanges": [
              {
                "line": "public MessageReceiptHandle removeReceiptHandle(ProxyContext ctx, Channel channel, String group, String msgID, String receiptHandle) {",
                "type": "ADD",
                "lineNo": 257
              },
              {
                "line": "return this.removeReceiptHandle(ctx, new ReceiptHandleGroupKey(channel, group), msgID, receiptHandle);",
                "type": "ADD",
                "lineNo": 258
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.removeReceiptHandle(Channel,String,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle"
              },
              {
                "type": "CtParameter",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtTypeReference",
                "value": "io.netty.channel.Channel"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String msgID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.removeReceiptHandle(ReceiptHandleGroupKey,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.removeReceiptHandle(ReceiptHandleGroupKey,String,String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey.ReceiptHandleGroupKey(Channel,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String msgID"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String receiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.removeReceiptHandle(ProxyContext,Channel,String,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtTypeReference",
                "value": "io.netty.channel.Channel"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String msgID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.removeReceiptHandle(ProxyContext,ReceiptHandleGroupKey,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.removeReceiptHandle(ProxyContext,ReceiptHandleGroupKey,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey.ReceiptHandleGroupKey(Channel,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String msgID"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String receiptHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "protected MessageReceiptHandle removeReceiptHandle(ReceiptHandleGroupKey key, String msgID, String receiptHandle) {",
                "type": "DELETE",
                "lineNo": 261
              }
            ],
            "targetChanges": [
              {
                "line": "protected MessageReceiptHandle removeReceiptHandle(ProxyContext ctx, ReceiptHandleGroupKey key, String msgID, String receiptHandle) {",
                "type": "ADD",
                "lineNo": 261
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.removeReceiptHandle(ReceiptHandleGroupKey,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey key"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String msgID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.removeReceiptHandle(ProxyContext,ReceiptHandleGroupKey,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey key"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor$ReceiptHandleGroupKey"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String msgID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/processor/TransactionProcessor.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/processor/TransactionProcessor.java",
        "name": "org.apache.rocketmq.proxy.processor.TransactionProcessor",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "ctx,",
                "type": "ADD",
                "lineNo": 39
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.serviceManager.getTransactionService().addTransactionSubscription(producerGroup, topic);",
                "type": "DELETE",
                "lineNo": 73
              }
            ],
            "targetChanges": [
              {
                "line": "this.serviceManager.getTransactionService().addTransactionSubscription(ctx, producerGroup, topic);",
                "type": "ADD",
                "lineNo": 74
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTransactionService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTransactionService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTransactionService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager serviceManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ServiceManager.getTransactionService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/remoting/activity/SendMessageActivity.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/remoting/activity/SendMessageActivity.java",
        "name": "org.apache.rocketmq.proxy.remoting.activity.SendMessageActivity",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "TopicMessageType topicMessageType = messagingProcessor.getMetadataService().getTopicMessageType(topic);",
                "type": "DELETE",
                "lineNo": 73
              }
            ],
            "targetChanges": [
              {
                "line": "TopicMessageType topicMessageType = messagingProcessor.getMetadataService().getTopicMessageType(context, topic);",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType topicMessageType"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor messagingProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType topicMessageType"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor messagingProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.MessagingProcessor.getMetadataService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext context"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/ClusterServiceManager.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/ClusterServiceManager.java",
        "name": "org.apache.rocketmq.proxy.service.ClusterServiceManager",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "getTransactionService().unSubscribeAllTransactionTopic(group);",
                "type": "DELETE",
                "lineNo": 194
              }
            ],
            "targetChanges": [
              {
                "line": "getTransactionService().unSubscribeAllTransactionTopic(ProxyContext.createForInner(this.getClass()), group);",
                "type": "ADD",
                "lineNo": 195
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.unSubscribeAllTransactionTopic(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ClusterServiceManager.getTransactionService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ClusterServiceManager.getTransactionService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.unSubscribeAllTransactionTopic(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.unSubscribeAllTransactionTopic(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.ClusterServiceManager.getTransactionService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.ClusterServiceManager.getTransactionService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.unSubscribeAllTransactionTopic(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.createForInner(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.createForInner(Class)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/message/ClusterMessageService.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/message/ClusterMessageService.java",
        "name": "org.apache.rocketmq.proxy.service.message.ClusterMessageService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "this.resolveBrokerAddrInReceiptHandle(handle),",
                "type": "DELETE",
                "lineNo": 83
              }
            ],
            "targetChanges": [
              {
                "line": "this.resolveBrokerAddrInReceiptHandle(ctx, handle),",
                "type": "ADD",
                "lineNo": 83
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ReceiptHandle)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle handle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ProxyContext,ReceiptHandle)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ProxyContext,ReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle handle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.resolveBrokerAddr(brokerName),",
                "type": "DELETE",
                "lineNo": 96
              }
            ],
            "targetChanges": [
              {
                "line": "this.resolveBrokerAddr(ctx, brokerName),",
                "type": "ADD",
                "lineNo": 96
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddr(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddr(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String brokerName"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String brokerName"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.resolveBrokerAddrInReceiptHandle(handle),",
                "type": "DELETE",
                "lineNo": 123
              }
            ],
            "targetChanges": [
              {
                "line": "this.resolveBrokerAddrInReceiptHandle(ctx, handle),",
                "type": "ADD",
                "lineNo": 123
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ReceiptHandle)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle handle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ProxyContext,ReceiptHandle)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ProxyContext,ReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle handle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.resolveBrokerAddrInReceiptHandle(handle),",
                "type": "DELETE",
                "lineNo": 134
              }
            ],
            "targetChanges": [
              {
                "line": "this.resolveBrokerAddrInReceiptHandle(ctx, handle),",
                "type": "ADD",
                "lineNo": 134
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ReceiptHandle)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle handle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ProxyContext,ReceiptHandle)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ProxyContext,ReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle handle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "String brokerAddress = topicRouteService.getBrokerAddr(brokerName);",
                "type": "DELETE",
                "lineNo": 214
              }
            ],
            "targetChanges": [
              {
                "line": "String brokerAddress = topicRouteService.getBrokerAddr(ctx, brokerName);",
                "type": "ADD",
                "lineNo": 214
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String brokerAddress"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String brokerName"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String brokerAddress"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String brokerName"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "String brokerAddress = topicRouteService.getBrokerAddr(brokerName);",
                "type": "DELETE",
                "lineNo": 225
              }
            ],
            "targetChanges": [
              {
                "line": "String brokerAddress = topicRouteService.getBrokerAddr(ctx, brokerName);",
                "type": "ADD",
                "lineNo": 225
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String brokerAddress"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String brokerName"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String brokerAddress"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String brokerName"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "protected String resolveBrokerAddrInReceiptHandle(ReceiptHandle handle) {",
                "type": "DELETE",
                "lineNo": 232
              }
            ],
            "targetChanges": [
              {
                "line": "protected String resolveBrokerAddrInReceiptHandle(ProxyContext ctx, ReceiptHandle handle) {",
                "type": "ADD",
                "lineNo": 232
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ReceiptHandle)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle handle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddrInReceiptHandle(ProxyContext,ReceiptHandle)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle handle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return this.topicRouteService.getBrokerAddr(handle.getBrokerName());",
                "type": "DELETE",
                "lineNo": 234
              }
            ],
            "targetChanges": [
              {
                "line": "return this.topicRouteService.getBrokerAddr(ctx, handle.getBrokerName());",
                "type": "ADD",
                "lineNo": 234
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle.getBrokerName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle handle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle.getBrokerName()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle.getBrokerName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle handle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.common.consumer.ReceiptHandle.getBrokerName()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "protected String resolveBrokerAddr(String brokerName) {",
                "type": "DELETE",
                "lineNo": 240
              }
            ],
            "targetChanges": [
              {
                "line": "protected String resolveBrokerAddr(ProxyContext ctx, String brokerName) {",
                "type": "ADD",
                "lineNo": 240
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddr(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.message.ClusterMessageService.resolveBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return this.topicRouteService.getBrokerAddr(brokerName);",
                "type": "DELETE",
                "lineNo": 242
              }
            ],
            "targetChanges": [
              {
                "line": "return this.topicRouteService.getBrokerAddr(ctx, brokerName);",
                "type": "ADD",
                "lineNo": 242
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String brokerName"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String brokerName"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/metadata/ClusterMetadataService.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/metadata/ClusterMetadataService.java",
        "name": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public TopicMessageType getTopicMessageType(String topic) {",
                "type": "DELETE",
                "lineNo": 86
              }
            ],
            "targetChanges": [
              {
                "line": "public TopicMessageType getTopicMessageType(ProxyContext ctx, String topic) {",
                "type": "ADD",
                "lineNo": 87
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public SubscriptionGroupConfig getSubscriptionGroupConfig(String group) {",
                "type": "DELETE",
                "lineNo": 100
              }
            ],
            "targetChanges": [
              {
                "line": "public SubscriptionGroupConfig getSubscriptionGroupConfig(ProxyContext ctx, String group) {",
                "type": "ADD",
                "lineNo": 101
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return topicRouteService.getAllMessageQueueView(topic).getTopicRouteData().getBrokerDatas().stream().findAny();",
                "type": "DELETE",
                "lineNo": 161
              }
            ],
            "targetChanges": [
              {
                "line": "return topicRouteService.getAllMessageQueueView(ProxyContext.createForInner(this.getClass()), topic).getTopicRouteData().getBrokerDatas().stream().findAny();",
                "type": "ADD",
                "lineNo": 162
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.findAny()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData.getBrokerDatas()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getTopicRouteData()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getTopicRouteData()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData.getBrokerDatas()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.findAny()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.findAny()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData.getBrokerDatas()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getTopicRouteData()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.createForInner(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.createForInner(Class)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getTopicRouteData()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData.getBrokerDatas()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.findAny()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/metadata/LocalMetadataService.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/metadata/LocalMetadataService.java",
        "name": "org.apache.rocketmq.proxy.service.metadata.LocalMetadataService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public TopicMessageType getTopicMessageType(String topic) {",
                "type": "DELETE",
                "lineNo": 33
              }
            ],
            "targetChanges": [
              {
                "line": "public TopicMessageType getTopicMessageType(ProxyContext ctx, String topic) {",
                "type": "ADD",
                "lineNo": 34
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.metadata.LocalMetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.metadata.LocalMetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public SubscriptionGroupConfig getSubscriptionGroupConfig(String group) {",
                "type": "DELETE",
                "lineNo": 42
              }
            ],
            "targetChanges": [
              {
                "line": "public SubscriptionGroupConfig getSubscriptionGroupConfig(ProxyContext ctx, String group) {",
                "type": "ADD",
                "lineNo": 43
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.metadata.LocalMetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.metadata.LocalMetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/metadata/MetadataService.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/metadata/MetadataService.java",
        "name": "org.apache.rocketmq.proxy.service.metadata.MetadataService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "TopicMessageType getTopicMessageType(String topic);",
                "type": "DELETE",
                "lineNo": 25
              }
            ],
            "targetChanges": [
              {
                "line": "TopicMessageType getTopicMessageType(ProxyContext ctx, String topic);",
                "type": "ADD",
                "lineNo": 26
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "SubscriptionGroupConfig getSubscriptionGroupConfig(String group);",
                "type": "DELETE",
                "lineNo": 27
              }
            ],
            "targetChanges": [
              {
                "line": "SubscriptionGroupConfig getSubscriptionGroupConfig(ProxyContext ctx, String group);",
                "type": "ADD",
                "lineNo": 28
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/relay/AbstractProxyRelayService.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/relay/AbstractProxyRelayService.java",
        "name": "org.apache.rocketmq.proxy.service.relay.AbstractProxyRelayService",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "context,",
                "type": "ADD",
                "lineNo": 46
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext context"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/route/ClusterTopicRouteService.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/route/ClusterTopicRouteService.java",
        "name": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public MessageQueueView getCurrentMessageQueueView(String topicName) throws Exception {",
                "type": "DELETE",
                "lineNo": 34
              },
              {
                "line": "return getAllMessageQueueView(topicName);",
                "type": "DELETE",
                "lineNo": 35
              }
            ],
            "targetChanges": [
              {
                "line": "public MessageQueueView getCurrentMessageQueueView(ProxyContext ctx, String topicName) throws Exception {",
                "type": "ADD",
                "lineNo": 35
              },
              {
                "line": "return getAllMessageQueueView(ctx, topicName);",
                "type": "ADD",
                "lineNo": 36
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getCurrentMessageQueueView(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topicName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topicName"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getCurrentMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topicName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topicName"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public ProxyTopicRouteData getTopicRouteForProxy(List<Address> requestHostAndPortList,",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "public ProxyTopicRouteData getTopicRouteForProxy(ProxyContext ctx, List<Address> requestHostAndPortList,",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getTopicRouteForProxy(List,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List requestHostAndPortList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.Address"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getTopicRouteForProxy(ProxyContext,List,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List requestHostAndPortList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.Address"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "TopicRouteData topicRouteData = getAllMessageQueueView(topicName).getTopicRouteData();",
                "type": "DELETE",
                "lineNo": 41
              }
            ],
            "targetChanges": [
              {
                "line": "TopicRouteData topicRouteData = getAllMessageQueueView(ctx, topicName).getTopicRouteData();",
                "type": "ADD",
                "lineNo": 42
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData topicRouteData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getTopicRouteData()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topicName"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getTopicRouteData()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData topicRouteData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getTopicRouteData()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topicName"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getTopicRouteData()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public String getBrokerAddr(String brokerName) throws Exception {",
                "type": "DELETE",
                "lineNo": 60
              },
              {
                "line": "List<BrokerData> brokerDataList = getAllMessageQueueView(brokerName).getTopicRouteData().getBrokerDatas();",
                "type": "DELETE",
                "lineNo": 61
              }
            ],
            "targetChanges": [
              {
                "line": "public String getBrokerAddr(ProxyContext ctx, String brokerName) throws Exception {",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "List<BrokerData> brokerDataList = getAllMessageQueueView(ctx, brokerName).getTopicRouteData().getBrokerDatas();",
                "type": "ADD",
                "lineNo": 62
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List brokerDataList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.route.BrokerData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData.getBrokerDatas()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getTopicRouteData()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getTopicRouteData()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData.getBrokerDatas()"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List brokerDataList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.route.BrokerData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData.getBrokerDatas()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getTopicRouteData()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getTopicRouteData()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData.getBrokerDatas()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public AddressableMessageQueue buildAddressableMessageQueue(MessageQueue messageQueue) throws Exception {",
                "type": "DELETE",
                "lineNo": 69
              },
              {
                "line": "String brokerAddress = getBrokerAddr(messageQueue.getBrokerName());",
                "type": "DELETE",
                "lineNo": 70
              }
            ],
            "targetChanges": [
              {
                "line": "public AddressableMessageQueue buildAddressableMessageQueue(ProxyContext ctx, MessageQueue messageQueue) throws Exception {",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "String brokerAddress = getBrokerAddr(ctx, messageQueue.getBrokerName());",
                "type": "ADD",
                "lineNo": 71
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String brokerAddress"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.common.message.MessageQueue.getBrokerName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue.getBrokerName()"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String brokerAddress"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.common.message.MessageQueue.getBrokerName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue.getBrokerName()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/route/LocalTopicRouteService.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/route/LocalTopicRouteService.java",
        "name": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public MessageQueueView getCurrentMessageQueueView(String topic) throws Exception {",
                "type": "DELETE",
                "lineNo": 54
              }
            ],
            "targetChanges": [
              {
                "line": "public MessageQueueView getCurrentMessageQueueView(ProxyContext ctx, String topic) throws Exception {",
                "type": "ADD",
                "lineNo": 55
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getCurrentMessageQueueView(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getCurrentMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public ProxyTopicRouteData getTopicRouteForProxy(List<Address> requestHostAndPortList,",
                "type": "DELETE",
                "lineNo": 60
              }
            ],
            "targetChanges": [
              {
                "line": "public ProxyTopicRouteData getTopicRouteForProxy(ProxyContext ctx, List<Address> requestHostAndPortList,",
                "type": "ADD",
                "lineNo": 61
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getTopicRouteForProxy(List,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List requestHostAndPortList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.Address"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getTopicRouteForProxy(ProxyContext,List,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List requestHostAndPortList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.Address"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "MessageQueueView messageQueueView = getAllMessageQueueView(topicName);",
                "type": "DELETE",
                "lineNo": 62
              }
            ],
            "targetChanges": [
              {
                "line": "MessageQueueView messageQueueView = getAllMessageQueueView(ctx, topicName);",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView messageQueueView"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topicName"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView messageQueueView"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topicName"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public String getBrokerAddr(String brokerName) throws Exception {",
                "type": "DELETE",
                "lineNo": 86
              }
            ],
            "targetChanges": [
              {
                "line": "public String getBrokerAddr(ProxyContext ctx, String brokerName) throws Exception {",
                "type": "ADD",
                "lineNo": 87
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public AddressableMessageQueue buildAddressableMessageQueue(MessageQueue messageQueue) throws Exception {",
                "type": "DELETE",
                "lineNo": 91
              },
              {
                "line": "String brokerAddress = getBrokerAddr(messageQueue.getBrokerName());",
                "type": "DELETE",
                "lineNo": 92
              }
            ],
            "targetChanges": [
              {
                "line": "public AddressableMessageQueue buildAddressableMessageQueue(ProxyContext ctx, MessageQueue messageQueue) throws Exception {",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "String brokerAddress = getBrokerAddr(ctx, messageQueue.getBrokerName());",
                "type": "ADD",
                "lineNo": 93
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String brokerAddress"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.common.message.MessageQueue.getBrokerName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue.getBrokerName()"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String brokerAddress"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.common.message.MessageQueue.getBrokerName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue.getBrokerName()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/route/TopicRouteService.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/route/TopicRouteService.java",
        "name": "org.apache.rocketmq.proxy.service.route.TopicRouteService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public MessageQueueView getAllMessageQueueView(String topicName) throws Exception {",
                "type": "DELETE",
                "lineNo": 112
              }
            ],
            "targetChanges": [
              {
                "line": "public MessageQueueView getAllMessageQueueView(ProxyContext ctx, String topicName) throws Exception {",
                "type": "ADD",
                "lineNo": 113
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topicName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topicName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public abstract MessageQueueView getCurrentMessageQueueView(String topicName) throws Exception;",
                "type": "DELETE",
                "lineNo": 116
              }
            ],
            "targetChanges": [
              {
                "line": "public abstract MessageQueueView getCurrentMessageQueueView(ProxyContext ctx, String topicName) throws Exception;",
                "type": "ADD",
                "lineNo": 117
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topicName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topicName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public abstract ProxyTopicRouteData getTopicRouteForProxy(List<Address> requestHostAndPortList,",
                "type": "DELETE",
                "lineNo": 118
              }
            ],
            "targetChanges": [
              {
                "line": "public abstract ProxyTopicRouteData getTopicRouteForProxy(ProxyContext ctx, List<Address> requestHostAndPortList,",
                "type": "ADD",
                "lineNo": 119
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getTopicRouteForProxy(List,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List requestHostAndPortList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.Address"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getTopicRouteForProxy(ProxyContext,List,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List requestHostAndPortList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.Address"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public abstract String getBrokerAddr(String brokerName) throws Exception;",
                "type": "DELETE",
                "lineNo": 121
              }
            ],
            "targetChanges": [
              {
                "line": "public abstract String getBrokerAddr(ProxyContext ctx, String brokerName) throws Exception;",
                "type": "ADD",
                "lineNo": 122
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public abstract AddressableMessageQueue buildAddressableMessageQueue(MessageQueue messageQueue) throws Exception;",
                "type": "DELETE",
                "lineNo": 123
              }
            ],
            "targetChanges": [
              {
                "line": "public abstract AddressableMessageQueue buildAddressableMessageQueue(ProxyContext ctx, MessageQueue messageQueue) throws Exception;",
                "type": "ADD",
                "lineNo": 124
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.common.message.MessageQueue messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/sysmessage/AbstractSystemMessageSyncer.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/sysmessage/AbstractSystemMessageSyncer.java",
        "name": "org.apache.rocketmq.proxy.service.sysmessage.AbstractSystemMessageSyncer",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "AddressableMessageQueue messageQueue = this.topicRouteService.getAllMessageQueueView(targetTopic)",
                "type": "DELETE",
                "lineNo": 98
              }
            ],
            "targetChanges": [
              {
                "line": "AddressableMessageQueue messageQueue = this.topicRouteService.getAllMessageQueueView(ProxyContext.createForInner(this.getClass()), targetTopic)",
                "type": "ADD",
                "lineNo": 99
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueSelector.selectOne(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getWriteSelector()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String targetTopic"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueSelector.selectOne(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.getWriteSelector()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.createForInner(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.createForInner(Class)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String targetTopic"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/transaction/AbstractTransactionService.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/transaction/AbstractTransactionService.java",
        "name": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public TransactionData addTransactionDataByBrokerAddr(String brokerAddr, String producerGroup, long tranStateTableOffset, long commitLogOffset, String transactionId,",
                "type": "DELETE",
                "lineNo": 32
              }
            ],
            "targetChanges": [
              {
                "line": "public TransactionData addTransactionDataByBrokerAddr(ProxyContext ctx, String brokerAddr, String producerGroup, long tranStateTableOffset, long commitLogOffset, String transactionId,",
                "type": "ADD",
                "lineNo": 32
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.addTransactionDataByBrokerAddr(String,String,long,long,String,Message)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionData"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerAddr"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "long tranStateTableOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "long commitLogOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String transactionId"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.addTransactionDataByBrokerAddr(ProxyContext,String,String,long,long,String,Message)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionData"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerAddr"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "long tranStateTableOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "long commitLogOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String transactionId"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return this.addTransactionDataByBrokerName(this.getBrokerNameByAddr(brokerAddr), producerGroup, tranStateTableOffset, commitLogOffset, transactionId, message);",
                "type": "DELETE",
                "lineNo": 34
              }
            ],
            "targetChanges": [
              {
                "line": "return this.addTransactionDataByBrokerName(ctx, this.getBrokerNameByAddr(brokerAddr), producerGroup, tranStateTableOffset, commitLogOffset, transactionId, message);",
                "type": "ADD",
                "lineNo": 34
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.addTransactionDataByBrokerName(String,String,long,long,String,Message)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.addTransactionDataByBrokerName(String,String,long,long,String,Message)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.getBrokerNameByAddr(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.getBrokerNameByAddr(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String brokerAddr"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtVariableRead",
                "value": "long tranStateTableOffset"
              },
              {
                "type": "CtVariableRead",
                "value": "long commitLogOffset"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String transactionId"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.Message message"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.addTransactionDataByBrokerName(ProxyContext,String,String,long,long,String,Message)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.addTransactionDataByBrokerName(ProxyContext,String,String,long,long,String,Message)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.getBrokerNameByAddr(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.getBrokerNameByAddr(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String brokerAddr"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtVariableRead",
                "value": "long tranStateTableOffset"
              },
              {
                "type": "CtVariableRead",
                "value": "long commitLogOffset"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String transactionId"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.common.message.Message message"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public TransactionData addTransactionDataByBrokerName(String brokerName, String producerGroup, long tranStateTableOffset, long commitLogOffset, String transactionId,",
                "type": "DELETE",
                "lineNo": 38
              }
            ],
            "targetChanges": [
              {
                "line": "public TransactionData addTransactionDataByBrokerName(ProxyContext ctx, String brokerName, String producerGroup, long tranStateTableOffset, long commitLogOffset, String transactionId,",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.addTransactionDataByBrokerName(String,String,long,long,String,Message)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionData"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "long tranStateTableOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "long commitLogOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String transactionId"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.addTransactionDataByBrokerName(ProxyContext,String,String,long,long,String,Message)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionData"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "long tranStateTableOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "long commitLogOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String transactionId"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public EndTransactionRequestData genEndTransactionRequestHeader(String producerGroup, Integer commitOrRollback,",
                "type": "DELETE",
                "lineNo": 58
              }
            ],
            "targetChanges": [
              {
                "line": "public EndTransactionRequestData genEndTransactionRequestHeader(ProxyContext ctx, String producerGroup, Integer commitOrRollback,",
                "type": "ADD",
                "lineNo": 58
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.genEndTransactionRequestHeader(String,Integer,boolean,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.EndTransactionRequestData"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Integer commitOrRollback"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionService.genEndTransactionRequestHeader(ProxyContext,String,Integer,boolean,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.EndTransactionRequestData"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Integer commitOrRollback"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/transaction/ClusterTransactionService.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/transaction/ClusterTransactionService.java",
        "name": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public void addTransactionSubscription(String group, List<String> topicList) {",
                "type": "DELETE",
                "lineNo": 70
              }
            ],
            "targetChanges": [
              {
                "line": "public void addTransactionSubscription(ProxyContext ctx, String group, List<String> topicList) {",
                "type": "ADD",
                "lineNo": 71
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "addTransactionSubscription(group, topic);",
                "type": "DELETE",
                "lineNo": 72
              }
            ],
            "targetChanges": [
              {
                "line": "addTransactionSubscription(ctx, group, topic);",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void addTransactionSubscription(String group, String topic) {",
                "type": "DELETE",
                "lineNo": 77
              }
            ],
            "targetChanges": [
              {
                "line": "public void addTransactionSubscription(ProxyContext ctx, String group, String topic) {",
                "type": "ADD",
                "lineNo": 78
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "clusterDataSet.addAll(getClusterDataFromTopic(topic));",
                "type": "DELETE",
                "lineNo": 83
              }
            ],
            "targetChanges": [
              {
                "line": "clusterDataSet.addAll(getClusterDataFromTopic(ctx, topic));",
                "type": "ADD",
                "lineNo": 84
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Set.addAll(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set clusterDataSet"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Set.addAll(Collection)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.getClusterDataFromTopic(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.getClusterDataFromTopic(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Set.addAll(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set clusterDataSet"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Set.addAll(Collection)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.getClusterDataFromTopic(ProxyContext,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.getClusterDataFromTopic(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void replaceTransactionSubscription(String group, List<String> topicList) {",
                "type": "DELETE",
                "lineNo": 92
              }
            ],
            "targetChanges": [
              {
                "line": "public void replaceTransactionSubscription(ProxyContext ctx, String group, List<String> topicList) {",
                "type": "ADD",
                "lineNo": 93
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.replaceTransactionSubscription(String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.replaceTransactionSubscription(ProxyContext,String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "clusterDataSet.addAll(getClusterDataFromTopic(topic));",
                "type": "DELETE",
                "lineNo": 95
              }
            ],
            "targetChanges": [
              {
                "line": "clusterDataSet.addAll(getClusterDataFromTopic(ctx, topic));",
                "type": "ADD",
                "lineNo": 96
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Set.addAll(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set clusterDataSet"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Set.addAll(Collection)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.getClusterDataFromTopic(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.getClusterDataFromTopic(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Set.addAll(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set clusterDataSet"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Set.addAll(Collection)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.getClusterDataFromTopic(ProxyContext,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.getClusterDataFromTopic(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private Set<ClusterData> getClusterDataFromTopic(String topic) {",
                "type": "DELETE",
                "lineNo": 100
              }
            ],
            "targetChanges": [
              {
                "line": "private Set<ClusterData> getClusterDataFromTopic(ProxyContext ctx, String topic) {",
                "type": "ADD",
                "lineNo": 101
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.getClusterDataFromTopic(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService$ClusterData"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.getClusterDataFromTopic(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService$ClusterData"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "MessageQueueView messageQueue = this.topicRouteService.getAllMessageQueueView(topic);",
                "type": "DELETE",
                "lineNo": 102
              }
            ],
            "targetChanges": [
              {
                "line": "MessageQueueView messageQueue = this.topicRouteService.getAllMessageQueueView(ctx, topic);",
                "type": "ADD",
                "lineNo": 103
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String topic"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void unSubscribeAllTransactionTopic(String group) {",
                "type": "DELETE",
                "lineNo": 120
              }
            ],
            "targetChanges": [
              {
                "line": "public void unSubscribeAllTransactionTopic(ProxyContext ctx, String group) {",
                "type": "ADD",
                "lineNo": 121
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.unSubscribeAllTransactionTopic(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.unSubscribeAllTransactionTopic(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "MessageQueueView messageQueue = this.topicRouteService.getAllMessageQueueView(clusterName);",
                "type": "DELETE",
                "lineNo": 198
              }
            ],
            "targetChanges": [
              {
                "line": "MessageQueueView messageQueue = this.topicRouteService.getAllMessageQueueView(ProxyContext.createForInner(this.getClass()), clusterName);",
                "type": "ADD",
                "lineNo": 199
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String clusterName"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView messageQueue"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.createForInner(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.createForInner(Class)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String clusterName"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/transaction/LocalTransactionService.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/transaction/LocalTransactionService.java",
        "name": "org.apache.rocketmq.proxy.service.transaction.LocalTransactionService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public void addTransactionSubscription(String group, List<String> topicList) {",
                "type": "DELETE",
                "lineNo": 34
              }
            ],
            "targetChanges": [
              {
                "line": "public void addTransactionSubscription(ProxyContext ctx, String group, List<String> topicList) {",
                "type": "ADD",
                "lineNo": 35
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.LocalTransactionService.addTransactionSubscription(String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.LocalTransactionService.addTransactionSubscription(ProxyContext,String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void addTransactionSubscription(String group, String topic) {",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "public void addTransactionSubscription(ProxyContext ctx, String group, String topic) {",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.LocalTransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.LocalTransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void replaceTransactionSubscription(String group, List<String> topicList) {",
                "type": "DELETE",
                "lineNo": 44
              }
            ],
            "targetChanges": [
              {
                "line": "public void replaceTransactionSubscription(ProxyContext ctx, String group, List<String> topicList) {",
                "type": "ADD",
                "lineNo": 45
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.LocalTransactionService.replaceTransactionSubscription(String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.LocalTransactionService.replaceTransactionSubscription(ProxyContext,String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void unSubscribeAllTransactionTopic(String group) {",
                "type": "DELETE",
                "lineNo": 49
              }
            ],
            "targetChanges": [
              {
                "line": "public void unSubscribeAllTransactionTopic(ProxyContext ctx, String group) {",
                "type": "ADD",
                "lineNo": 50
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.LocalTransactionService.unSubscribeAllTransactionTopic(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.LocalTransactionService.unSubscribeAllTransactionTopic(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/transaction/TransactionService.java",
        "aPath": "proxy/src/main/java/org/apache/rocketmq/proxy/service/transaction/TransactionService.java",
        "name": "org.apache.rocketmq.proxy.service.transaction.TransactionService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "void addTransactionSubscription(String group, List<String> topicList);",
                "type": "DELETE",
                "lineNo": 25
              }
            ],
            "targetChanges": [
              {
                "line": "void addTransactionSubscription(ProxyContext ctx, String group, List<String> topicList);",
                "type": "ADD",
                "lineNo": 25
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.addTransactionSubscription(String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.addTransactionSubscription(ProxyContext,String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "void addTransactionSubscription(String group, String topic);",
                "type": "DELETE",
                "lineNo": 27
              }
            ],
            "targetChanges": [
              {
                "line": "void addTransactionSubscription(ProxyContext ctx, String group, String topic);",
                "type": "ADD",
                "lineNo": 27
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "void replaceTransactionSubscription(String group, List<String> topicList);",
                "type": "DELETE",
                "lineNo": 29
              }
            ],
            "targetChanges": [
              {
                "line": "void replaceTransactionSubscription(ProxyContext ctx, String group, List<String> topicList);",
                "type": "ADD",
                "lineNo": 29
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.replaceTransactionSubscription(String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.replaceTransactionSubscription(ProxyContext,String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "void unSubscribeAllTransactionTopic(String group);",
                "type": "DELETE",
                "lineNo": 31
              }
            ],
            "targetChanges": [
              {
                "line": "void unSubscribeAllTransactionTopic(ProxyContext ctx, String group);",
                "type": "ADD",
                "lineNo": 31
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.unSubscribeAllTransactionTopic(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.unSubscribeAllTransactionTopic(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "TransactionData addTransactionDataByBrokerAddr(String brokerAddr, String producerGroup, long tranStateTableOffset, long commitLogOffset, String transactionId,",
                "type": "DELETE",
                "lineNo": 33
              }
            ],
            "targetChanges": [
              {
                "line": "TransactionData addTransactionDataByBrokerAddr(ProxyContext ctx, String brokerAddr, String producerGroup, long tranStateTableOffset, long commitLogOffset, String transactionId,",
                "type": "ADD",
                "lineNo": 33
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.addTransactionDataByBrokerAddr(String,String,long,long,String,Message)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionData"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerAddr"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "long tranStateTableOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "long commitLogOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String transactionId"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.addTransactionDataByBrokerAddr(ProxyContext,String,String,long,long,String,Message)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionData"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerAddr"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "long tranStateTableOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "long commitLogOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String transactionId"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "TransactionData addTransactionDataByBrokerName(String brokerName, String producerGroup, long tranStateTableOffset, long commitLogOffset, String transactionId,",
                "type": "DELETE",
                "lineNo": 36
              }
            ],
            "targetChanges": [
              {
                "line": "TransactionData addTransactionDataByBrokerName(ProxyContext ctx, String brokerName, String producerGroup, long tranStateTableOffset, long commitLogOffset, String transactionId,",
                "type": "ADD",
                "lineNo": 36
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.addTransactionDataByBrokerName(String,String,long,long,String,Message)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionData"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "long tranStateTableOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "long commitLogOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String transactionId"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.addTransactionDataByBrokerName(ProxyContext,String,String,long,long,String,Message)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionData"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String brokerName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "long tranStateTableOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "long commitLogOffset"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String transactionId"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "EndTransactionRequestData genEndTransactionRequestHeader(String producerGroup, Integer commitOrRollback,",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "EndTransactionRequestData genEndTransactionRequestHeader(ProxyContext ctx, String producerGroup, Integer commitOrRollback,",
                "type": "ADD",
                "lineNo": 39
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.genEndTransactionRequestHeader(String,Integer,boolean,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.EndTransactionRequestData"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Integer commitOrRollback"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.genEndTransactionRequestHeader(ProxyContext,String,Integer,boolean,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.EndTransactionRequestData"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String producerGroup"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Integer commitOrRollback"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/grpc/v2/client/ClientActivityTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/grpc/v2/client/ClientActivityTest.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.client.ClientActivityTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(this.metadataService.getTopicMessageType(anyString())).thenReturn(TopicMessageType.TRANSACTION);",
                "type": "DELETE",
                "lineNo": 137
              }
            ],
            "targetChanges": [
              {
                "line": "when(this.metadataService.getTopicMessageType(any(), anyString())).thenReturn(TopicMessageType.TRANSACTION);",
                "type": "ADD",
                "lineNo": 137
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType TRANSACTION"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType TRANSACTION"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType TRANSACTION"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType TRANSACTION"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "when(this.metadataService.getTopicMessageType(anyString())).thenReturn(TopicMessageType.NORMAL);",
                "type": "DELETE",
                "lineNo": 225
              }
            ],
            "targetChanges": [
              {
                "line": "when(this.metadataService.getTopicMessageType(any(), anyString())).thenReturn(TopicMessageType.NORMAL);",
                "type": "ADD",
                "lineNo": 225
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/grpc/v2/consumer/ChangeInvisibleDurationActivityTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/grpc/v2/consumer/ChangeInvisibleDurationActivityTest.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.consumer.ChangeInvisibleDurationActivityTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(receiptHandleProcessor.removeReceiptHandle(any(), anyString(), anyString(), anyString()))",
                "type": "DELETE",
                "lineNo": 95
              }
            ],
            "targetChanges": [
              {
                "line": "when(receiptHandleProcessor.removeReceiptHandle(any(), any(), anyString(), anyString(), anyString()))",
                "type": "ADD",
                "lineNo": 95
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.common.MessageReceiptHandle)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.common.MessageReceiptHandle)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.common.ProxyContext,org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.common.ProxyContext,org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/grpc/v2/producer/ForwardMessageToDLQActivityTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/grpc/v2/producer/ForwardMessageToDLQActivityTest.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.producer.ForwardMessageToDLQActivityTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(receiptHandleProcessor.removeReceiptHandle(any(), anyString(), anyString(), anyString()))",
                "type": "DELETE",
                "lineNo": 78
              }
            ],
            "targetChanges": [
              {
                "line": "when(receiptHandleProcessor.removeReceiptHandle(any(), any(), anyString(), anyString(), anyString()))",
                "type": "ADD",
                "lineNo": 78
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.common.MessageReceiptHandle)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.common.MessageReceiptHandle)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.common.ProxyContext,org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "removeReceiptHandle(org.apache.rocketmq.proxy.common.ProxyContext,org.apache.rocketmq.proxy.processor.Channel,java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/grpc/v2/route/RouteActivityTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/grpc/v2/route/RouteActivityTest.java",
        "name": "org.apache.rocketmq.proxy.grpc.v2.route.RouteActivityTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(metadataService.getTopicMessageType(anyString())).thenReturn(TopicMessageType.NORMAL);",
                "type": "DELETE",
                "lineNo": 104
              }
            ],
            "targetChanges": [
              {
                "line": "when(metadataService.getTopicMessageType(any(), anyString())).thenReturn(TopicMessageType.NORMAL);",
                "type": "ADD",
                "lineNo": 104
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/processor/ConsumerProcessorTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/processor/ConsumerProcessorTest.java",
        "name": "org.apache.rocketmq.proxy.processor.ConsumerProcessorTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(this.topicRouteService.getCurrentMessageQueueView(anyString()))",
                "type": "DELETE",
                "lineNo": 94
              }
            ],
            "targetChanges": [
              {
                "line": "when(this.topicRouteService.getCurrentMessageQueueView(any(), anyString()))",
                "type": "ADD",
                "lineNo": 95
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn()"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(String)"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn()"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getCurrentMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "when(this.topicRouteService.buildAddressableMessageQueue(any())).thenAnswer(i -> new AddressableMessageQueue((MessageQueue) i.getArguments()[0], \"127.0.0.1\"));",
                "type": "DELETE",
                "lineNo": 194
              }
            ],
            "targetChanges": [
              {
                "line": "when(this.topicRouteService.buildAddressableMessageQueue(any(), any())).thenAnswer(i -> new AddressableMessageQueue((MessageQueue) i.getArguments()[1], \"127.0.0.1\"));",
                "type": "ADD",
                "lineNo": 195
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenAnswer()"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenAnswer()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> i"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtArrayRead",
                "value": "getArguments()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "getArguments()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> i"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> i"
              },
              {
                "type": "CtExecutableReference",
                "value": "getArguments()"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenAnswer()"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenAnswer()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> i"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtArrayRead",
                "value": "getArguments()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "getArguments()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> i"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> i"
              },
              {
                "type": "CtExecutableReference",
                "value": "getArguments()"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Set<MessageQueue> result = this.consumerProcessor.lockBatchMQ(null, mqSet, CONSUMER_GROUP, CLIENT_ID, 1000)",
                "type": "DELETE",
                "lineNo": 199
              }
            ],
            "targetChanges": [
              {
                "line": "Set<MessageQueue> result = this.consumerProcessor.lockBatchMQ(ProxyContext.create(), mqSet, CONSUMER_GROUP, CLIENT_ID, 1000)",
                "type": "ADD",
                "lineNo": 200
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Set result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.CompletableFuture.get()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.lockBatchMQ(ProxyContext,Set,String,String,long)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor consumerProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.lockBatchMQ(ProxyContext,Set,String,String,long)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set mqSet"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CONSUMER_GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CLIENT_ID"
              },
              {
                "type": "CtLiteral",
                "value": "int '1000'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Set result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.CompletableFuture.get()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.lockBatchMQ(ProxyContext,Set,String,String,long)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor consumerProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.lockBatchMQ(ProxyContext,Set,String,String,long)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set mqSet"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CONSUMER_GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CLIENT_ID"
              },
              {
                "type": "CtLiteral",
                "value": "int '1000'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "when(this.topicRouteService.buildAddressableMessageQueue(any())).thenAnswer(i -> new AddressableMessageQueue((MessageQueue) i.getArguments()[0], \"127.0.0.1\"));",
                "type": "DELETE",
                "lineNo": 213
              }
            ],
            "targetChanges": [
              {
                "line": "when(this.topicRouteService.buildAddressableMessageQueue(any(), any())).thenAnswer(i -> new AddressableMessageQueue((MessageQueue) i.getArguments()[1], \"127.0.0.1\"));",
                "type": "ADD",
                "lineNo": 214
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenAnswer()"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenAnswer()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> i"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtArrayRead",
                "value": "getArguments()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "getArguments()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> i"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> i"
              },
              {
                "type": "CtExecutableReference",
                "value": "getArguments()"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenAnswer()"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenAnswer()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> i"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtArrayRead",
                "value": "getArguments()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "getArguments()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> i"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> i"
              },
              {
                "type": "CtExecutableReference",
                "value": "getArguments()"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Set<MessageQueue> result = this.consumerProcessor.lockBatchMQ(null, mqSet, CONSUMER_GROUP, CLIENT_ID, 1000)",
                "type": "DELETE",
                "lineNo": 218
              }
            ],
            "targetChanges": [
              {
                "line": "Set<MessageQueue> result = this.consumerProcessor.lockBatchMQ(ProxyContext.create(), mqSet, CONSUMER_GROUP, CLIENT_ID, 1000)",
                "type": "ADD",
                "lineNo": 219
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Set result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.CompletableFuture.get()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.lockBatchMQ(ProxyContext,Set,String,String,long)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor consumerProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.lockBatchMQ(ProxyContext,Set,String,String,long)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set mqSet"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CONSUMER_GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CLIENT_ID"
              },
              {
                "type": "CtLiteral",
                "value": "int '1000'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Set result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.CompletableFuture.get()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.lockBatchMQ(ProxyContext,Set,String,String,long)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor consumerProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.lockBatchMQ(ProxyContext,Set,String,String,long)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set mqSet"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CONSUMER_GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CLIENT_ID"
              },
              {
                "type": "CtLiteral",
                "value": "int '1000'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "when(this.topicRouteService.buildAddressableMessageQueue(any())).thenAnswer(i -> new AddressableMessageQueue((MessageQueue) i.getArguments()[0], \"127.0.0.1\"));",
                "type": "DELETE",
                "lineNo": 232
              }
            ],
            "targetChanges": [
              {
                "line": "when(this.topicRouteService.buildAddressableMessageQueue(any(), any())).thenAnswer(i -> new AddressableMessageQueue((MessageQueue) i.getArguments()[1], \"127.0.0.1\"));",
                "type": "ADD",
                "lineNo": 233
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenAnswer()"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(MessageQueue)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenAnswer()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> i"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtArrayRead",
                "value": "getArguments()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "getArguments()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> i"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> i"
              },
              {
                "type": "CtExecutableReference",
                "value": "getArguments()"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenAnswer()"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.buildAddressableMessageQueue(ProxyContext,MessageQueue)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenAnswer()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> i"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.AddressableMessageQueue"
              },
              {
                "type": "CtArrayRead",
                "value": "getArguments()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "getArguments()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> i"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> i"
              },
              {
                "type": "CtExecutableReference",
                "value": "getArguments()"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Set<MessageQueue> result = this.consumerProcessor.lockBatchMQ(null, mqSet, CONSUMER_GROUP, CLIENT_ID, 1000)",
                "type": "DELETE",
                "lineNo": 239
              }
            ],
            "targetChanges": [
              {
                "line": "Set<MessageQueue> result = this.consumerProcessor.lockBatchMQ(ProxyContext.create(), mqSet, CONSUMER_GROUP, CLIENT_ID, 1000)",
                "type": "ADD",
                "lineNo": 240
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Set result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.CompletableFuture.get()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.lockBatchMQ(ProxyContext,Set,String,String,long)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor consumerProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.lockBatchMQ(ProxyContext,Set,String,String,long)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set mqSet"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CONSUMER_GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CLIENT_ID"
              },
              {
                "type": "CtLiteral",
                "value": "int '1000'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Set result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.common.message.MessageQueue"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.CompletableFuture.get()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.lockBatchMQ(ProxyContext,Set,String,String,long)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor consumerProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ConsumerProcessor.lockBatchMQ(ProxyContext,Set,String,String,long)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set mqSet"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CONSUMER_GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CLIENT_ID"
              },
              {
                "type": "CtLiteral",
                "value": "int '1000'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/processor/ProducerProcessorTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/processor/ProducerProcessorTest.java",
        "name": "org.apache.rocketmq.proxy.processor.ProducerProcessorTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(metadataService.getTopicMessageType(eq(TOPIC))).thenReturn(TopicMessageType.NORMAL);",
                "type": "DELETE",
                "lineNo": 73
              }
            ],
            "targetChanges": [
              {
                "line": "when(metadataService.getTopicMessageType(any(), eq(TOPIC))).thenReturn(TopicMessageType.NORMAL);",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "any(),",
                "type": "ADD",
                "lineNo": 99
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "any(),",
                "type": "ADD",
                "lineNo": 154
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/processor/ReceiptHandleProcessorTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/processor/ReceiptHandleProcessorTest.java",
        "name": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessorTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "DELETE",
                "lineNo": 110
              },
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.eq(GROUP))).thenReturn(new SubscriptionGroupConfig());",
                "type": "DELETE",
                "lineNo": 111
              }
            ],
            "targetChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(PROXY_CONTEXT, channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "ADD",
                "lineNo": 110
              },
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.any(), Mockito.eq(GROUP))).thenReturn(new SubscriptionGroupConfig());",
                "type": "ADD",
                "lineNo": 111
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig.SubscriptionGroupConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext PROXY_CONTEXT"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig.SubscriptionGroupConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "DELETE",
                "lineNo": 123
              }
            ],
            "targetChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(PROXY_CONTEXT, channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "ADD",
                "lineNo": 123
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext PROXY_CONTEXT"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.eq(GROUP))).thenReturn(groupConfig);",
                "type": "DELETE",
                "lineNo": 125
              }
            ],
            "targetChanges": [
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.any(), Mockito.eq(GROUP))).thenReturn(groupConfig);",
                "type": "ADD",
                "lineNo": 125
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig groupConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig groupConfig"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "DELETE",
                "lineNo": 170
              }
            ],
            "targetChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(PROXY_CONTEXT, channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "ADD",
                "lineNo": 170
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext PROXY_CONTEXT"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "DELETE",
                "lineNo": 200
              }
            ],
            "targetChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(PROXY_CONTEXT, channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "ADD",
                "lineNo": 200
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext PROXY_CONTEXT"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "DELETE",
                "lineNo": 224
              }
            ],
            "targetChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(PROXY_CONTEXT, channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "ADD",
                "lineNo": 224
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext PROXY_CONTEXT"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(channel, GROUP, MSG_ID, newReceiptHandle, messageReceiptHandle);",
                "type": "DELETE",
                "lineNo": 302
              }
            ],
            "targetChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(PROXY_CONTEXT, channel, GROUP, MSG_ID, newReceiptHandle, messageReceiptHandle);",
                "type": "ADD",
                "lineNo": 302
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String newReceiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext PROXY_CONTEXT"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String newReceiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.eq(GROUP))).thenReturn(groupConfig);",
                "type": "DELETE",
                "lineNo": 305
              }
            ],
            "targetChanges": [
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.any(), Mockito.eq(GROUP))).thenReturn(groupConfig);",
                "type": "ADD",
                "lineNo": 305
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig groupConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig groupConfig"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(channel, GROUP, MSG_ID, newReceiptHandle, messageReceiptHandle);",
                "type": "DELETE",
                "lineNo": 336
              }
            ],
            "targetChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(PROXY_CONTEXT, channel, GROUP, MSG_ID, newReceiptHandle, messageReceiptHandle);",
                "type": "ADD",
                "lineNo": 336
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String newReceiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext PROXY_CONTEXT"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String newReceiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.eq(GROUP))).thenReturn(null);",
                "type": "DELETE",
                "lineNo": 338
              }
            ],
            "targetChanges": [
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.any(), Mockito.eq(GROUP))).thenReturn(null);",
                "type": "ADD",
                "lineNo": 338
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(channel, GROUP, MSG_ID, newReceiptHandle, messageReceiptHandle);",
                "type": "DELETE",
                "lineNo": 372
              }
            ],
            "targetChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(PROXY_CONTEXT, channel, GROUP, MSG_ID, newReceiptHandle, messageReceiptHandle);",
                "type": "ADD",
                "lineNo": 372
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String newReceiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext PROXY_CONTEXT"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String newReceiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.eq(GROUP))).thenReturn(groupConfig);",
                "type": "DELETE",
                "lineNo": 374
              }
            ],
            "targetChanges": [
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.any(), Mockito.eq(GROUP))).thenReturn(groupConfig);",
                "type": "ADD",
                "lineNo": 374
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig groupConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig groupConfig"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "DELETE",
                "lineNo": 385
              },
              {
                "line": "receiptHandleProcessor.removeReceiptHandle(channel, GROUP, MSG_ID, receiptHandle);",
                "type": "DELETE",
                "lineNo": 386
              }
            ],
            "targetChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(PROXY_CONTEXT, channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "ADD",
                "lineNo": 385
              },
              {
                "line": "receiptHandleProcessor.removeReceiptHandle(PROXY_CONTEXT, channel, GROUP, MSG_ID, receiptHandle);",
                "type": "ADD",
                "lineNo": 386
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.removeReceiptHandle(Channel,String,String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.removeReceiptHandle(Channel,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext PROXY_CONTEXT"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.removeReceiptHandle(ProxyContext,Channel,String,String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.removeReceiptHandle(ProxyContext,Channel,String,String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext PROXY_CONTEXT"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.eq(GROUP))).thenReturn(groupConfig);",
                "type": "DELETE",
                "lineNo": 388
              }
            ],
            "targetChanges": [
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.any(), Mockito.eq(GROUP))).thenReturn(groupConfig);",
                "type": "ADD",
                "lineNo": 388
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig groupConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig groupConfig"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "DELETE",
                "lineNo": 398
              }
            ],
            "targetChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(PROXY_CONTEXT, channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "ADD",
                "lineNo": 398
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext PROXY_CONTEXT"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.eq(GROUP))).thenReturn(groupConfig);",
                "type": "DELETE",
                "lineNo": 401
              }
            ],
            "targetChanges": [
              {
                "line": "Mockito.when(metadataService.getSubscriptionGroupConfig(Mockito.any(), Mockito.eq(GROUP))).thenReturn(groupConfig);",
                "type": "ADD",
                "lineNo": 401
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig groupConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig groupConfig"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "DELETE",
                "lineNo": 413
              }
            ],
            "targetChanges": [
              {
                "line": "receiptHandleProcessor.addReceiptHandle(PROXY_CONTEXT, channel, GROUP, MSG_ID, receiptHandle, messageReceiptHandle);",
                "type": "ADD",
                "lineNo": 413
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor receiptHandleProcessor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.processor.ReceiptHandleProcessor.addReceiptHandle(ProxyContext,Channel,String,String,String,MessageReceiptHandle)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext PROXY_CONTEXT"
              },
              {
                "type": "CtVariableRead",
                "value": "io.netty.channel.Channel channel"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MSG_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String receiptHandle"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.MessageReceiptHandle messageReceiptHandle"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/processor/TransactionProcessorTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/processor/TransactionProcessorTest.java",
        "name": "org.apache.rocketmq.proxy.processor.TransactionProcessorTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(transactionService.genEndTransactionRequestHeader(anyString(), commitOrRollbackCaptor.capture(), anyBoolean(), anyString(), anyString()))",
                "type": "DELETE",
                "lineNo": 57
              }
            ],
            "targetChanges": [
              {
                "line": "when(transactionService.genEndTransactionRequestHeader(any(), anyString(), commitOrRollbackCaptor.capture(), anyBoolean(), anyString(), anyString()))",
                "type": "ADD",
                "lineNo": 57
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.transaction.EndTransactionRequestData)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.genEndTransactionRequestHeader(String,Integer,boolean,String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService transactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.genEndTransactionRequestHeader(String,Integer,boolean,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "capture()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.mockito.ArgumentCaptor commitOrRollbackCaptor"
              },
              {
                "type": "CtExecutableReference",
                "value": "capture()"
              },
              {
                "type": "CtInvocation",
                "value": "anyBoolean()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyBoolean()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.transaction.EndTransactionRequestData)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.genEndTransactionRequestHeader(ProxyContext,String,Integer,boolean,String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService transactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.TransactionService.genEndTransactionRequestHeader(ProxyContext,String,Integer,boolean,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "capture()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.mockito.ArgumentCaptor commitOrRollbackCaptor"
              },
              {
                "type": "CtExecutableReference",
                "value": "capture()"
              },
              {
                "type": "CtInvocation",
                "value": "anyBoolean()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyBoolean()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/remoting/activity/SendMessageActivityTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/remoting/activity/SendMessageActivityTest.java",
        "name": "org.apache.rocketmq.proxy.remoting.activity.SendMessageActivityTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(metadataServiceMock.getTopicMessageType(eq(topic))).thenReturn(TopicMessageType.NORMAL);",
                "type": "DELETE",
                "lineNo": 79
              }
            ],
            "targetChanges": [
              {
                "line": "when(metadataServiceMock.getTopicMessageType(any(), eq(topic))).thenReturn(TopicMessageType.NORMAL);",
                "type": "ADD",
                "lineNo": 79
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataServiceMock"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService metadataServiceMock"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.MetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/message/ClusterMessageServiceTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/message/ClusterMessageServiceTest.java",
        "name": "org.apache.rocketmq.proxy.service.message.ClusterMessageServiceTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(topicRouteService.getBrokerAddr(anyString())).thenThrow(new MQClientException(ResponseCode.TOPIC_NOT_EXIST, \"\"));",
                "type": "DELETE",
                "lineNo": 53
              }
            ],
            "targetChanges": [
              {
                "line": "when(topicRouteService.getBrokerAddr(any(), anyString())).thenThrow(new MQClientException(ResponseCode.TOPIC_NOT_EXIST, \"\"));",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenThrow(org.apache.rocketmq.client.exception.MQClientException)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(String)"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenThrow(org.apache.rocketmq.client.exception.MQClientException)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.client.exception.MQClientException.MQClientException(int,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.client.exception.MQClientException"
              },
              {
                "type": "CtFieldRead",
                "value": "int TOPIC_NOT_EXIST"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int TOPIC_NOT_EXIST"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenThrow(org.apache.rocketmq.client.exception.MQClientException)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getBrokerAddr(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenThrow(org.apache.rocketmq.client.exception.MQClientException)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.client.exception.MQClientException.MQClientException(int,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.client.exception.MQClientException"
              },
              {
                "type": "CtFieldRead",
                "value": "int TOPIC_NOT_EXIST"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.remoting.protocol.ResponseCode"
              },
              {
                "type": "CtFieldReference",
                "value": "int TOPIC_NOT_EXIST"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/metadata/ClusterMetadataServiceTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/metadata/ClusterMetadataServiceTest.java",
        "name": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataServiceTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertEquals(TopicMessageType.UNSPECIFIED, this.clusterMetadataService.getTopicMessageType(ERR_TOPIC));",
                "type": "DELETE",
                "lineNo": 57
              }
            ],
            "targetChanges": [
              {
                "line": "ProxyContext ctx = ProxyContext.create();",
                "type": "ADD",
                "lineNo": 58
              },
              {
                "line": "assertEquals(TopicMessageType.UNSPECIFIED, this.clusterMetadataService.getTopicMessageType(ctx, ERR_TOPIC));",
                "type": "ADD",
                "lineNo": 59
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(org.apache.rocketmq.common.attribute.TopicMessageType,org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(org.apache.rocketmq.common.attribute.TopicMessageType,org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType UNSPECIFIED"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType UNSPECIFIED"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService clusterMetadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String ERR_TOPIC"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(org.apache.rocketmq.common.attribute.TopicMessageType,org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(org.apache.rocketmq.common.attribute.TopicMessageType,org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType UNSPECIFIED"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType UNSPECIFIED"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService clusterMetadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String ERR_TOPIC"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertEquals(TopicMessageType.UNSPECIFIED, this.clusterMetadataService.getTopicMessageType(ERR_TOPIC));",
                "type": "DELETE",
                "lineNo": 59
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(TopicMessageType.UNSPECIFIED, this.clusterMetadataService.getTopicMessageType(ctx, ERR_TOPIC));",
                "type": "ADD",
                "lineNo": 61
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(org.apache.rocketmq.common.attribute.TopicMessageType,org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(org.apache.rocketmq.common.attribute.TopicMessageType,org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType UNSPECIFIED"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType UNSPECIFIED"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService clusterMetadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String ERR_TOPIC"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(org.apache.rocketmq.common.attribute.TopicMessageType,org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(org.apache.rocketmq.common.attribute.TopicMessageType,org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType UNSPECIFIED"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType UNSPECIFIED"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService clusterMetadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String ERR_TOPIC"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertEquals(TopicMessageType.NORMAL, this.clusterMetadataService.getTopicMessageType(TOPIC));",
                "type": "DELETE",
                "lineNo": 61
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(TopicMessageType.NORMAL, this.clusterMetadataService.getTopicMessageType(ctx, TOPIC));",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(org.apache.rocketmq.common.attribute.TopicMessageType,org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(org.apache.rocketmq.common.attribute.TopicMessageType,org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService clusterMetadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(org.apache.rocketmq.common.attribute.TopicMessageType,org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(org.apache.rocketmq.common.attribute.TopicMessageType,org.apache.rocketmq.common.attribute.TopicMessageType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.rocketmq.common.attribute.TopicMessageType NORMAL"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService clusterMetadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getTopicMessageType(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertNotNull(this.clusterMetadataService.getSubscriptionGroupConfig(GROUP));",
                "type": "DELETE",
                "lineNo": 67
              }
            ],
            "targetChanges": [
              {
                "line": "ProxyContext ctx = ProxyContext.create();",
                "type": "ADD",
                "lineNo": 69
              },
              {
                "line": "assertNotNull(this.clusterMetadataService.getSubscriptionGroupConfig(ctx, GROUP));",
                "type": "ADD",
                "lineNo": 70
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService clusterMetadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getSubscriptionGroupConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService clusterMetadataService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.metadata.ClusterMetadataService.getSubscriptionGroupConfig(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/route/ClusterTopicRouteServiceTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/route/ClusterTopicRouteServiceTest.java",
        "name": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteServiceTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "MQClientException exception = catchThrowableOfType(() -> this.topicRouteService.getCurrentMessageQueueView(ERR_TOPIC), MQClientException.class);",
                "type": "DELETE",
                "lineNo": 64
              }
            ],
            "targetChanges": [
              {
                "line": "ProxyContext ctx = ProxyContext.create();",
                "type": "ADD",
                "lineNo": 65
              },
              {
                "line": "MQClientException exception = catchThrowableOfType(() -> this.topicRouteService.getCurrentMessageQueueView(ctx, ERR_TOPIC), MQClientException.class);",
                "type": "ADD",
                "lineNo": 66
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.client.exception.MQClientException exception"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.client.exception.MQClientException"
              },
              {
                "type": "CtInvocation",
                "value": "catchThrowableOfType(java.lang.Object,java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "catchThrowableOfType(java.lang.Object,java.lang.Class)"
              },
              {
                "type": "CtInvocation",
                "value": "getCurrentMessageQueueView()"
              },
              {
                "type": "CtFieldRead",
                "value": "<unknown> topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "getCurrentMessageQueueView()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String ERR_TOPIC"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String ERR_TOPIC"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.client.exception.MQClientException exception"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.client.exception.MQClientException"
              },
              {
                "type": "CtInvocation",
                "value": "catchThrowableOfType(java.lang.Object,java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "catchThrowableOfType(java.lang.Object,java.lang.Class)"
              },
              {
                "type": "CtInvocation",
                "value": "getCurrentMessageQueueView()"
              },
              {
                "type": "CtFieldRead",
                "value": "<unknown> topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "getCurrentMessageQueueView()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String ERR_TOPIC"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String ERR_TOPIC"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertNotNull(this.topicRouteService.getCurrentMessageQueueView(TOPIC));",
                "type": "DELETE",
                "lineNo": 68
              }
            ],
            "targetChanges": [
              {
                "line": "assertNotNull(this.topicRouteService.getCurrentMessageQueueView(ctx, TOPIC));",
                "type": "ADD",
                "lineNo": 70
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getCurrentMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getCurrentMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getCurrentMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getCurrentMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "ProxyContext ctx = ProxyContext.create();",
                "type": "ADD",
                "lineNo": 76
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ProxyTopicRouteData proxyTopicRouteData = this.topicRouteService.getTopicRouteForProxy(addressList, TOPIC);",
                "type": "DELETE",
                "lineNo": 75
              }
            ],
            "targetChanges": [
              {
                "line": "ProxyTopicRouteData proxyTopicRouteData = this.topicRouteService.getTopicRouteForProxy(ctx, addressList, TOPIC);",
                "type": "ADD",
                "lineNo": 78
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData proxyTopicRouteData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getTopicRouteForProxy(List,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getTopicRouteForProxy(List,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List addressList"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData proxyTopicRouteData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getTopicRouteForProxy(ProxyContext,List,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.ClusterTopicRouteService.getTopicRouteForProxy(ProxyContext,List,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List addressList"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/route/LocalTopicRouteServiceTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/route/LocalTopicRouteServiceTest.java",
        "name": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteServiceTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "ProxyContext ctx = ProxyContext.create();",
                "type": "ADD",
                "lineNo": 80
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "MessageQueueView messageQueueView = this.topicRouteService.getCurrentMessageQueueView(TOPIC);",
                "type": "DELETE",
                "lineNo": 80
              }
            ],
            "targetChanges": [
              {
                "line": "MessageQueueView messageQueueView = this.topicRouteService.getCurrentMessageQueueView(ctx, TOPIC);",
                "type": "ADD",
                "lineNo": 82
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView messageQueueView"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getCurrentMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getCurrentMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView messageQueueView"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getCurrentMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getCurrentMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ProxyTopicRouteData proxyTopicRouteData = this.topicRouteService.getTopicRouteForProxy(new ArrayList<>(), TOPIC);",
                "type": "DELETE",
                "lineNo": 93
              }
            ],
            "targetChanges": [
              {
                "line": "ProxyContext ctx = ProxyContext.create();",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "ProxyTopicRouteData proxyTopicRouteData = this.topicRouteService.getTopicRouteForProxy(ctx, new ArrayList<>(), TOPIC);",
                "type": "ADD",
                "lineNo": 96
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData proxyTopicRouteData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getTopicRouteForProxy(List,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getTopicRouteForProxy(List,String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData proxyTopicRouteData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.ProxyTopicRouteData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getTopicRouteForProxy(ProxyContext,List,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.LocalTopicRouteService.getTopicRouteForProxy(ProxyContext,List,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/sysmessage/HeartbeatSyncerTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/sysmessage/HeartbeatSyncerTest.java",
        "name": "org.apache.rocketmq.proxy.service.sysmessage.HeartbeatSyncerTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(this.topicRouteService.getAllMessageQueueView(anyString())).thenReturn(messageQueueView);",
                "type": "DELETE",
                "lineNo": 136
              }
            ],
            "targetChanges": [
              {
                "line": "when(this.topicRouteService.getAllMessageQueueView(any(), anyString())).thenReturn(messageQueueView);",
                "type": "ADD",
                "lineNo": 136
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView messageQueueView"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView messageQueueView"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/transaction/AbstractTransactionServiceTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/transaction/AbstractTransactionServiceTest.java",
        "name": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionServiceTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "private final ProxyContext ctx = ProxyContext.createForInner(this.getClass());",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.createForInner(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.createForInner(Class)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.getClass()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void addTransactionSubscription(String group, List<String> topicList) {",
                "type": "DELETE",
                "lineNo": 49
              }
            ],
            "targetChanges": [
              {
                "line": "public void addTransactionSubscription(ProxyContext ctx, String group, List<String> topicList) {",
                "type": "ADD",
                "lineNo": 50
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionServiceTest$MockAbstractTransactionServiceTest.addTransactionSubscription(String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionServiceTest$MockAbstractTransactionServiceTest.addTransactionSubscription(ProxyContext,String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void addTransactionSubscription(String group, String topic) {",
                "type": "DELETE",
                "lineNo": 54
              }
            ],
            "targetChanges": [
              {
                "line": "public void addTransactionSubscription(ProxyContext ctx, String group, String topic) {",
                "type": "ADD",
                "lineNo": 55
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionServiceTest$MockAbstractTransactionServiceTest.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionServiceTest$MockAbstractTransactionServiceTest.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String topic"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void replaceTransactionSubscription(String group, List<String> topicList) {",
                "type": "DELETE",
                "lineNo": 59
              }
            ],
            "targetChanges": [
              {
                "line": "public void replaceTransactionSubscription(ProxyContext ctx, String group, List<String> topicList) {",
                "type": "ADD",
                "lineNo": 60
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionServiceTest$MockAbstractTransactionServiceTest.replaceTransactionSubscription(String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionServiceTest$MockAbstractTransactionServiceTest.replaceTransactionSubscription(ProxyContext,String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List topicList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void unSubscribeAllTransactionTopic(String group) {",
                "type": "DELETE",
                "lineNo": 64
              }
            ],
            "targetChanges": [
              {
                "line": "public void unSubscribeAllTransactionTopic(ProxyContext ctx, String group) {",
                "type": "ADD",
                "lineNo": 65
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionServiceTest$MockAbstractTransactionServiceTest.unSubscribeAllTransactionTopic(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.rocketmq.proxy.service.transaction.AbstractTransactionServiceTest$MockAbstractTransactionServiceTest.unSubscribeAllTransactionTopic(ProxyContext,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "ctx,",
                "type": "ADD",
                "lineNo": 85
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "ctx,",
                "type": "ADD",
                "lineNo": 96
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "ctx,",
                "type": "ADD",
                "lineNo": 110
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "ctx,",
                "type": "ADD",
                "lineNo": 126
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "ctx,",
                "type": "ADD",
                "lineNo": 136
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/transaction/ClusterTransactionServiceTest.java",
        "aPath": "proxy/src/test/java/org/apache/rocketmq/proxy/service/transaction/ClusterTransactionServiceTest.java",
        "name": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionServiceTest",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "private ProxyContext ctx = ProxyContext.create();",
                "type": "ADD",
                "lineNo": 58
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext.create()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "when(this.topicRouteService.getAllMessageQueueView(anyString()))",
                "type": "DELETE",
                "lineNo": 66
              }
            ],
            "targetChanges": [
              {
                "line": "when(this.topicRouteService.getAllMessageQueueView(any(), anyString()))",
                "type": "ADD",
                "lineNo": 68
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.clusterTransactionService.addTransactionSubscription(GROUP, TOPIC);",
                "type": "DELETE",
                "lineNo": 74
              }
            ],
            "targetChanges": [
              {
                "line": "this.clusterTransactionService.addTransactionSubscription(ctx, GROUP, TOPIC);",
                "type": "ADD",
                "lineNo": 76
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.clusterTransactionService.addTransactionSubscription(GROUP, Lists.newArrayList(TOPIC + 1, TOPIC + 2));",
                "type": "DELETE",
                "lineNo": 82
              }
            ],
            "targetChanges": [
              {
                "line": "this.clusterTransactionService.addTransactionSubscription(ctx, GROUP, Lists.newArrayList(TOPIC + 1, TOPIC + 2));",
                "type": "ADD",
                "lineNo": 84
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,List)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,List)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtInvocation",
                "value": "newArrayList(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.assertj.core.util.Lists"
              },
              {
                "type": "CtExecutableReference",
                "value": "newArrayList(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtLiteral",
                "value": "int '2'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,List)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,List)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtInvocation",
                "value": "newArrayList(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.assertj.core.util.Lists"
              },
              {
                "type": "CtExecutableReference",
                "value": "newArrayList(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtLiteral",
                "value": "int '2'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.clusterTransactionService.addTransactionSubscription(GROUP, TOPIC);",
                "type": "DELETE",
                "lineNo": 90
              }
            ],
            "targetChanges": [
              {
                "line": "this.clusterTransactionService.addTransactionSubscription(ctx, GROUP, TOPIC);",
                "type": "ADD",
                "lineNo": 92
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.clusterTransactionService.replaceTransactionSubscription(GROUP, Lists.newArrayList(TOPIC + 1));",
                "type": "DELETE",
                "lineNo": 96
              }
            ],
            "targetChanges": [
              {
                "line": "this.clusterTransactionService.replaceTransactionSubscription(ctx, GROUP, Lists.newArrayList(TOPIC + 1));",
                "type": "ADD",
                "lineNo": 98
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.replaceTransactionSubscription(String,List)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.replaceTransactionSubscription(String,List)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtInvocation",
                "value": "newArrayList(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.assertj.core.util.Lists"
              },
              {
                "type": "CtExecutableReference",
                "value": "newArrayList(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.replaceTransactionSubscription(ProxyContext,String,List)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.replaceTransactionSubscription(ProxyContext,String,List)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtInvocation",
                "value": "newArrayList(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.assertj.core.util.Lists"
              },
              {
                "type": "CtExecutableReference",
                "value": "newArrayList(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.clusterTransactionService.addTransactionSubscription(GROUP, TOPIC);",
                "type": "DELETE",
                "lineNo": 103
              },
              {
                "line": "this.clusterTransactionService.unSubscribeAllTransactionTopic(GROUP);",
                "type": "DELETE",
                "lineNo": 104
              }
            ],
            "targetChanges": [
              {
                "line": "this.clusterTransactionService.addTransactionSubscription(ctx, GROUP, TOPIC);",
                "type": "ADD",
                "lineNo": 105
              },
              {
                "line": "this.clusterTransactionService.unSubscribeAllTransactionTopic(ctx, GROUP);",
                "type": "ADD",
                "lineNo": 106
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.unSubscribeAllTransactionTopic(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.unSubscribeAllTransactionTopic(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.unSubscribeAllTransactionTopic(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.unSubscribeAllTransactionTopic(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "when(this.topicRouteService.getAllMessageQueueView(eq(TOPIC))).thenReturn(new MessageQueueView(TOPIC, topicRouteData));",
                "type": "DELETE",
                "lineNo": 128
              }
            ],
            "targetChanges": [
              {
                "line": "when(this.topicRouteService.getAllMessageQueueView(any(), eq(TOPIC))).thenReturn(new MessageQueueView(TOPIC, topicRouteData));",
                "type": "ADD",
                "lineNo": 130
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.MessageQueueView(String,TopicRouteData)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData topicRouteData"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.MessageQueueView(String,TopicRouteData)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData topicRouteData"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "when(this.topicRouteService.getAllMessageQueueView(eq(CLUSTER_NAME))).thenReturn(new MessageQueueView(CLUSTER_NAME, clusterTopicRouteData));",
                "type": "DELETE",
                "lineNo": 142
              }
            ],
            "targetChanges": [
              {
                "line": "when(this.topicRouteService.getAllMessageQueueView(any(), eq(CLUSTER_NAME))).thenReturn(new MessageQueueView(CLUSTER_NAME, clusterTopicRouteData));",
                "type": "ADD",
                "lineNo": 144
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CLUSTER_NAME"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.MessageQueueView(String,TopicRouteData)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CLUSTER_NAME"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData clusterTopicRouteData"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CLUSTER_NAME"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.MessageQueueView(String,TopicRouteData)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CLUSTER_NAME"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData clusterTopicRouteData"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "when(this.topicRouteService.getAllMessageQueueView(eq(clusterName2))).thenReturn(new MessageQueueView(clusterName2, clusterTopicRouteData2));",
                "type": "DELETE",
                "lineNo": 156
              }
            ],
            "targetChanges": [
              {
                "line": "when(this.topicRouteService.getAllMessageQueueView(any(), eq(clusterName2))).thenReturn(new MessageQueueView(clusterName2, clusterTopicRouteData2));",
                "type": "ADD",
                "lineNo": 158
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(String)"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String clusterName2"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.MessageQueueView(String,TopicRouteData)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String clusterName2"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData clusterTopicRouteData2"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService topicRouteService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.route.TopicRouteService.getAllMessageQueueView(ProxyContext,String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "eq(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String clusterName2"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.rocketmq.proxy.service.route.MessageQueueView)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView.MessageQueueView(String,TopicRouteData)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.rocketmq.proxy.service.route.MessageQueueView"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String clusterName2"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.rocketmq.remoting.protocol.route.TopicRouteData clusterTopicRouteData2"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.clusterTransactionService.addTransactionSubscription(GROUP + i, TOPIC);",
                "type": "DELETE",
                "lineNo": 164
              }
            ],
            "targetChanges": [
              {
                "line": "this.clusterTransactionService.addTransactionSubscription(ctx, GROUP + i, TOPIC);",
                "type": "ADD",
                "lineNo": 166
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService clusterTransactionService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.rocketmq.proxy.service.transaction.ClusterTransactionService.addTransactionSubscription(ProxyContext,String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.rocketmq.proxy.common.ProxyContext ctx"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TOPIC"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  }
]