[
  {
    "bCommit": "8f001e0fe",
    "aCommit": "751c2ce73",
    "changes": [
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/config/DataSyncConfiguration.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/config/DataSyncConfiguration.java",
        "name": "org.dromara.soul.admin.config.DataSyncConfiguration",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 118
              },
              {
                "line": "* Nacos data init zookeeper data init.",
                "type": "ADD",
                "lineNo": 119
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 120
              },
              {
                "line": "* @param configService the config service",
                "type": "ADD",
                "lineNo": 121
              },
              {
                "line": "* @param syncDataService the sync data service",
                "type": "ADD",
                "lineNo": 122
              },
              {
                "line": "* @return the nacos data init",
                "type": "ADD",
                "lineNo": 123
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 124
              },
              {
                "line": "@Bean",
                "type": "ADD",
                "lineNo": 125
              },
              {
                "line": "@ConditionalOnMissingBean(NacosDataInit.class)",
                "type": "ADD",
                "lineNo": 126
              },
              {
                "line": "public NacosDataInit nacosDataInit(final ConfigService configService, final SyncDataService syncDataService) {",
                "type": "ADD",
                "lineNo": 127
              },
              {
                "line": "return new NacosDataInit(configService, syncDataService);",
                "type": "ADD",
                "lineNo": 128
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 129
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.admin.config.DataSyncConfiguration$NacosListener.nacosDataInit(ConfigService,SyncDataService)"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataInit"
              },
              {
                "type": "CtParameter",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.config.ConfigService"
              },
              {
                "type": "CtParameter",
                "value": "org.dromara.soul.admin.service.SyncDataService syncDataService"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.service.SyncDataService"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataInit.NacosDataInit(ConfigService,SyncDataService)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataInit"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.service.SyncDataService syncDataService"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/listener/nacos/NacosDataChangedListener.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/listener/nacos/NacosDataChangedListener.java",
        "name": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private static final String GROUP = \"DEFAULT_GROUP\";",
                "type": "DELETE",
                "lineNo": 66
              },
              {
                "line": "private static final String PLUGIN_DATA_ID = \"soul.plugin.json\";",
                "type": "DELETE",
                "lineNo": 68
              },
              {
                "line": "private static final String SELECTOR_DATA_ID = \"soul.selector.json\";",
                "type": "DELETE",
                "lineNo": 70
              },
              {
                "line": "private static final String RULE_DATA_ID = \"soul.rule.json\";",
                "type": "DELETE",
                "lineNo": 72
              },
              {
                "line": "private static final String AUTH_DATA_ID = \"soul.auth.json\";",
                "type": "DELETE",
                "lineNo": 74
              },
              {
                "line": "private static final String META_DATA_ID = \"soul.meta.json\";",
                "type": "DELETE",
                "lineNo": 76
              },
              {
                "line": "private static final String EMPTY_CONFIG_DEFAULT_VALUE = \"{}\";",
                "type": "DELETE",
                "lineNo": 78
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'DEFAULT_GROUP'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String PLUGIN_DATA_ID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'soul.plugin.json'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String SELECTOR_DATA_ID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'soul.selector.json'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String RULE_DATA_ID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'soul.rule.json'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String AUTH_DATA_ID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'soul.auth.json'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String META_DATA_ID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'soul.meta.json'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String EMPTY_CONFIG_DEFAULT_VALUE"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{}'"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "String config = configService.getConfig(dataId, GROUP, 6000);",
                "type": "DELETE",
                "lineNo": 88
              },
              {
                "line": "return StringUtils.hasLength(config) ? config : EMPTY_CONFIG_DEFAULT_VALUE;",
                "type": "DELETE",
                "lineNo": 89
              }
            ],
            "targetChanges": [
              {
                "line": "String config = configService.getConfig(dataId, NacosPathConstants.GROUP, NacosPathConstants.DEFAULT_TIME_OUT);",
                "type": "ADD",
                "lineNo": 75
              },
              {
                "line": "return StringUtils.hasLength(config) ? config : NacosPathConstants.EMPTY_CONFIG_DEFAULT_VALUE;",
                "type": "ADD",
                "lineNo": 76
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String config"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getConfig(java.lang.String,java.lang.String,int)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtExecutableReference",
                "value": "getConfig(java.lang.String,java.lang.String,int)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String dataId"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtLiteral",
                "value": "int '6000'"
              },
              {
                "type": "CtInvocation",
                "value": "hasLength(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.util.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "hasLength(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String config"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String config"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String EMPTY_CONFIG_DEFAULT_VALUE"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String config"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getConfig(java.lang.String,java.lang.String,long)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtExecutableReference",
                "value": "getConfig(java.lang.String,java.lang.String,long)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String dataId"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtFieldRead",
                "value": "long DEFAULT_TIME_OUT"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "long DEFAULT_TIME_OUT"
              },
              {
                "type": "CtInvocation",
                "value": "hasLength(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.util.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "hasLength(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String config"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String config"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String EMPTY_CONFIG_DEFAULT_VALUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String EMPTY_CONFIG_DEFAULT_VALUE"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "configService.publishConfig(dataId, GROUP, GsonUtils.getInstance().toJson(data));",
                "type": "DELETE",
                "lineNo": 94
              }
            ],
            "targetChanges": [
              {
                "line": "configService.publishConfig(dataId, NacosPathConstants.GROUP, GsonUtils.getInstance().toJson(data));",
                "type": "ADD",
                "lineNo": 81
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "publishConfig(java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtExecutableReference",
                "value": "publishConfig(java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String dataId"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object data"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "publishConfig(java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtExecutableReference",
                "value": "publishConfig(java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String dataId"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object data"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "updateAuthMap(getConfig(AUTH_DATA_ID));",
                "type": "DELETE",
                "lineNo": 100
              }
            ],
            "targetChanges": [
              {
                "line": "updateAuthMap(getConfig(NacosPathConstants.AUTH_DATA_ID));",
                "type": "ADD",
                "lineNo": 87
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateAuthMap(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateAuthMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AUTH_DATA_ID"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateAuthMap(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateAuthMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AUTH_DATA_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String AUTH_DATA_ID"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "publishConfig(AUTH_DATA_ID, AUTH_MAP);",
                "type": "DELETE",
                "lineNo": 118
              }
            ],
            "targetChanges": [
              {
                "line": "publishConfig(NacosPathConstants.AUTH_DATA_ID, AUTH_MAP);",
                "type": "ADD",
                "lineNo": 105
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AUTH_DATA_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap AUTH_MAP"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AUTH_DATA_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String AUTH_DATA_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap AUTH_MAP"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "updatePluginMap(getConfig(PLUGIN_DATA_ID));",
                "type": "DELETE",
                "lineNo": 123
              }
            ],
            "targetChanges": [
              {
                "line": "updatePluginMap(getConfig(NacosPathConstants.PLUGIN_DATA_ID));",
                "type": "ADD",
                "lineNo": 110
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updatePluginMap(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updatePluginMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PLUGIN_DATA_ID"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updatePluginMap(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updatePluginMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PLUGIN_DATA_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String PLUGIN_DATA_ID"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "publishConfig(PLUGIN_DATA_ID, PLUGIN_MAP);",
                "type": "DELETE",
                "lineNo": 141
              }
            ],
            "targetChanges": [
              {
                "line": "publishConfig(NacosPathConstants.PLUGIN_DATA_ID, PLUGIN_MAP);",
                "type": "ADD",
                "lineNo": 128
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PLUGIN_DATA_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap PLUGIN_MAP"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PLUGIN_DATA_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String PLUGIN_DATA_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap PLUGIN_MAP"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "updateSelectorMap(getConfig(SELECTOR_DATA_ID));",
                "type": "DELETE",
                "lineNo": 146
              }
            ],
            "targetChanges": [
              {
                "line": "updateSelectorMap(getConfig(NacosPathConstants.SELECTOR_DATA_ID));",
                "type": "ADD",
                "lineNo": 133
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateSelectorMap(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateSelectorMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String SELECTOR_DATA_ID"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateSelectorMap(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateSelectorMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String SELECTOR_DATA_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String SELECTOR_DATA_ID"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Set<String> set = new HashSet<>(SELECTOR_MAP.keySet());",
                "type": "DELETE",
                "lineNo": 161
              }
            ],
            "targetChanges": [
              {
                "line": "SELECTOR_MAP.keySet().removeAll(SELECTOR_MAP.keySet());",
                "type": "ADD",
                "lineNo": 148
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Set set"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.HashSet.HashSet(Collection)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.HashSet"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap SELECTOR_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.keySet()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Set.removeAll(Collection)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap SELECTOR_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Set.removeAll(Collection)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap SELECTOR_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.keySet()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "set.remove(selector.getPluginName());",
                "type": "DELETE",
                "lineNo": 163
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Set.remove(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set set"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Set.remove(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "getPluginName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.SelectorData selector"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPluginName()"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "ls.add(selector);",
                "type": "ADD",
                "lineNo": 155
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List ls"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.SelectorData selector"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "SELECTOR_MAP.keySet().removeAll(set);",
                "type": "DELETE",
                "lineNo": 171
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Set.removeAll(Collection)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap SELECTOR_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Set.removeAll(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set set"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "publishConfig(SELECTOR_DATA_ID, SELECTOR_MAP);",
                "type": "DELETE",
                "lineNo": 186
              }
            ],
            "targetChanges": [
              {
                "line": "publishConfig(NacosPathConstants.SELECTOR_DATA_ID, SELECTOR_MAP);",
                "type": "ADD",
                "lineNo": 172
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String SELECTOR_DATA_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap SELECTOR_MAP"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String SELECTOR_DATA_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String SELECTOR_DATA_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap SELECTOR_MAP"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "updateMetaDataMap(getConfig(META_DATA_ID));",
                "type": "DELETE",
                "lineNo": 191
              }
            ],
            "targetChanges": [
              {
                "line": "updateMetaDataMap(getConfig(NacosPathConstants.META_DATA_ID));",
                "type": "ADD",
                "lineNo": 177
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateMetaDataMap(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateMetaDataMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String META_DATA_ID"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateMetaDataMap(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateMetaDataMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String META_DATA_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String META_DATA_ID"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "publishConfig(META_DATA_ID, META_DATA);",
                "type": "DELETE",
                "lineNo": 217
              }
            ],
            "targetChanges": [
              {
                "line": "publishConfig(NacosPathConstants.META_DATA_ID, META_DATA);",
                "type": "ADD",
                "lineNo": 203
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String META_DATA_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap META_DATA"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String META_DATA_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String META_DATA_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap META_DATA"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "updateRuleMap(getConfig(RULE_DATA_ID));",
                "type": "DELETE",
                "lineNo": 222
              }
            ],
            "targetChanges": [
              {
                "line": "updateRuleMap(getConfig(NacosPathConstants.RULE_DATA_ID));",
                "type": "ADD",
                "lineNo": 208
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateRuleMap(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateRuleMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String RULE_DATA_ID"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateRuleMap(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.updateRuleMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.getConfig(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String RULE_DATA_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String RULE_DATA_ID"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Set<String> set = new HashSet<>(RULE_MAP.keySet());",
                "type": "DELETE",
                "lineNo": 237
              }
            ],
            "targetChanges": [
              {
                "line": "RULE_MAP.keySet().removeAll(RULE_MAP.keySet());",
                "type": "ADD",
                "lineNo": 223
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Set set"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Set"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.HashSet.HashSet(Collection)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.HashSet"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap RULE_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.keySet()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Set.removeAll(Collection)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap RULE_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Set.removeAll(Collection)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap RULE_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.keySet()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "set.remove(rule.getSelectorId());",
                "type": "DELETE",
                "lineNo": 239
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Set.remove(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set set"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Set.remove(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "getSelectorId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.RuleData rule"
              },
              {
                "type": "CtExecutableReference",
                "value": "getSelectorId()"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "ls.add(rule);",
                "type": "ADD",
                "lineNo": 230
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List ls"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.RuleData rule"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "RULE_MAP.keySet().removeAll(set);",
                "type": "DELETE",
                "lineNo": 247
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Set.removeAll(Collection)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap RULE_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Set.removeAll(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Set set"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "publishConfig(RULE_DATA_ID, RULE_MAP);",
                "type": "DELETE",
                "lineNo": 262
              }
            ],
            "targetChanges": [
              {
                "line": "publishConfig(NacosPathConstants.RULE_DATA_ID, RULE_MAP);",
                "type": "ADD",
                "lineNo": 247
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String RULE_DATA_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap RULE_MAP"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListener.publishConfig(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String RULE_DATA_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.NacosPathConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String RULE_DATA_ID"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap RULE_MAP"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/test/java/org/dromara/soul/admin/listener/nacos/NacosDataChangedListenerTest.java",
        "aPath": "soul-admin/src/test/java/org/dromara/soul/admin/listener/nacos/NacosDataChangedListenerTest.java",
        "name": "org.dromara.soul.admin.listener.nacos.NacosDataChangedListenerTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": ".toJson(ImmutableMap.of(selectorDataPluginName1, ImmutableList.of())));",
                "type": "DELETE",
                "lineNo": 166
              }
            ],
            "targetChanges": [
              {
                "line": ".toJson(ImmutableMap.of(selectorDataPluginName1, ImmutableList.of(selectorData1))));",
                "type": "ADD",
                "lineNo": 166
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.collect.ImmutableMap.of(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.common.collect.ImmutableMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.collect.ImmutableMap.of(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorDataPluginName1"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.collect.ImmutableList.of()"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.common.collect.ImmutableList"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.collect.ImmutableList.of()"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.collect.ImmutableMap.of(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.common.collect.ImmutableMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.collect.ImmutableMap.of(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorDataPluginName1"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.collect.ImmutableList.of(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.common.collect.ImmutableList"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.collect.ImmutableList.of(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.SelectorData selectorData1"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "GsonUtils.getInstance().toJson(ImmutableMap.of(selectorId1, ImmutableList.of())));",
                "type": "DELETE",
                "lineNo": 225
              }
            ],
            "targetChanges": [
              {
                "line": "GsonUtils.getInstance().toJson(ImmutableMap.of(selectorId1, ImmutableList.of(ruleData1))));",
                "type": "ADD",
                "lineNo": 225
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.collect.ImmutableMap.of(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.common.collect.ImmutableMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.collect.ImmutableMap.of(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId1"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.collect.ImmutableList.of()"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.common.collect.ImmutableList"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.collect.ImmutableList.of()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.collect.ImmutableMap.of(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.common.collect.ImmutableMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.collect.ImmutableMap.of(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId1"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.collect.ImmutableList.of(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.common.collect.ImmutableList"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.collect.ImmutableList.of(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.RuleData ruleData1"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "e8e70d041",
    "aCommit": "f382faf69",
    "changes": [
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/constant/Constants.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/constant/Constants.java",
        "name": "org.apache.shenyu.common.constant.Constants",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* Sentinel degrade rule default min request.",
                "type": "ADD",
                "lineNo": 459
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 460
              },
              {
                "line": "int SENTINEL_MIN_REQUEST_AMOUNT = 5;",
                "type": "ADD",
                "lineNo": 461
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 463
              },
              {
                "line": "* Sentinel degrade rule default slow ratio threshold.",
                "type": "ADD",
                "lineNo": 464
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 465
              },
              {
                "line": "double SENTINEL_SLOW_RATIO_THRESHOLD = 1.0d;",
                "type": "ADD",
                "lineNo": 466
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 468
              },
              {
                "line": "* Sentinel degrade rule default stat intervals.",
                "type": "ADD",
                "lineNo": 469
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 470
              },
              {
                "line": "int SENTINEL_STAT_INTERVALS = 1;",
                "type": "ADD",
                "lineNo": 471
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 473
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "int SENTINEL_MIN_REQUEST_AMOUNT"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtLiteral",
                "value": "int '5'"
              },
              {
                "type": "CtField",
                "value": "double SENTINEL_SLOW_RATIO_THRESHOLD"
              },
              {
                "type": "CtTypeReference",
                "value": "double"
              },
              {
                "type": "CtLiteral",
                "value": "double '1.0'"
              },
              {
                "type": "CtField",
                "value": "int SENTINEL_STAT_INTERVALS"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/SentinelHandle.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/SentinelHandle.java",
        "name": "org.apache.shenyu.common.dto.convert.SentinelHandle",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* Degrade rule min request amount.",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 75
              },
              {
                "line": "private Integer degradeRuleMinRequestAmount = Constants.SENTINEL_MIN_REQUEST_AMOUNT;",
                "type": "ADD",
                "lineNo": 76
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": "* Degrade rule slow ratio threshold.",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "private Double degradeRuleSlowRatioThreshold = Constants.SENTINEL_SLOW_RATIO_THRESHOLD;",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "* Degrade rule stat intervalMs.",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "private int degradeRuleStatIntervals = Constants.SENTINEL_STAT_INTERVALS;",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 88
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.Integer degradeRuleMinRequestAmount"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtFieldRead",
                "value": "int SENTINEL_MIN_REQUEST_AMOUNT"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "int SENTINEL_MIN_REQUEST_AMOUNT"
              },
              {
                "type": "CtField",
                "value": "java.lang.Double degradeRuleSlowRatioThreshold"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Double"
              },
              {
                "type": "CtFieldRead",
                "value": "double SENTINEL_SLOW_RATIO_THRESHOLD"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "double SENTINEL_SLOW_RATIO_THRESHOLD"
              },
              {
                "type": "CtField",
                "value": "int degradeRuleStatIntervals"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtFieldRead",
                "value": "int SENTINEL_STAT_INTERVALS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "int SENTINEL_STAT_INTERVALS"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-sentinel/src/main/java/org/apache/shenyu/plugin/sentinel/handler/SentinelRuleHandle.java",
        "aPath": "shenyu-plugin/shenyu-plugin-sentinel/src/main/java/org/apache/shenyu/plugin/sentinel/handler/SentinelRuleHandle.java",
        "name": "org.apache.shenyu.plugin.sentinel.handler.SentinelRuleHandle",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "rule.setStatIntervalMs(sentinelHandle.getDegradeRuleStatIntervals() * 1000);",
                "type": "ADD",
                "lineNo": 67
              },
              {
                "line": "rule.setMinRequestAmount(sentinelHandle.getDegradeRuleMinRequestAmount());",
                "type": "ADD",
                "lineNo": 68
              },
              {
                "line": "rule.setSlowRatioThreshold(sentinelHandle.getDegradeRuleSlowRatioThreshold());",
                "type": "ADD",
                "lineNo": 69
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setStatIntervalMs()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.csp.sentinel.slots.block.degrade.DegradeRule rule"
              },
              {
                "type": "CtExecutableReference",
                "value": "setStatIntervalMs()"
              },
              {
                "type": "CtInvocation",
                "value": "getDegradeRuleStatIntervals()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "getDegradeRuleStatIntervals()"
              },
              {
                "type": "CtLiteral",
                "value": "int '1000'"
              },
              {
                "type": "CtInvocation",
                "value": "setMinRequestAmount()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.csp.sentinel.slots.block.degrade.DegradeRule rule"
              },
              {
                "type": "CtExecutableReference",
                "value": "setMinRequestAmount()"
              },
              {
                "type": "CtInvocation",
                "value": "getDegradeRuleMinRequestAmount()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "getDegradeRuleMinRequestAmount()"
              },
              {
                "type": "CtInvocation",
                "value": "setSlowRatioThreshold()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.csp.sentinel.slots.block.degrade.DegradeRule rule"
              },
              {
                "type": "CtExecutableReference",
                "value": "setSlowRatioThreshold()"
              },
              {
                "type": "CtInvocation",
                "value": "getDegradeRuleSlowRatioThreshold()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "getDegradeRuleSlowRatioThreshold()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-sentinel/src/test/java/org/apache/shenyu/plugin/sentinel/SentinelPluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-sentinel/src/test/java/org/apache/shenyu/plugin/sentinel/SentinelPluginTest.java",
        "name": "org.apache.shenyu.plugin.sentinel.SentinelPluginTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "sentinelHandle.setDegradeRuleMinRequestAmount(5);",
                "type": "ADD",
                "lineNo": 108
              },
              {
                "line": "sentinelHandle.setDegradeRuleStatIntervals(10);",
                "type": "ADD",
                "lineNo": 109
              },
              {
                "line": "sentinelHandle.setDegradeRuleSlowRatioThreshold(0.5d);",
                "type": "ADD",
                "lineNo": 110
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleMinRequestAmount(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleMinRequestAmount(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '5'"
              },
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleStatIntervals(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleStatIntervals(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '10'"
              },
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleSlowRatioThreshold(double)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleSlowRatioThreshold(double)"
              },
              {
                "type": "CtLiteral",
                "value": "double '0.5'"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "sentinelHandle.setDegradeRuleMinRequestAmount(5);",
                "type": "ADD",
                "lineNo": 139
              },
              {
                "line": "sentinelHandle.setDegradeRuleStatIntervals(10);",
                "type": "ADD",
                "lineNo": 140
              },
              {
                "line": "sentinelHandle.setDegradeRuleSlowRatioThreshold(0.5d);",
                "type": "ADD",
                "lineNo": 141
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleMinRequestAmount(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleMinRequestAmount(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '5'"
              },
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleStatIntervals(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleStatIntervals(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '10'"
              },
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleSlowRatioThreshold(double)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleSlowRatioThreshold(double)"
              },
              {
                "type": "CtLiteral",
                "value": "double '0.5'"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "sentinelHandle.setDegradeRuleMinRequestAmount(5);",
                "type": "ADD",
                "lineNo": 173
              },
              {
                "line": "sentinelHandle.setDegradeRuleStatIntervals(10);",
                "type": "ADD",
                "lineNo": 174
              },
              {
                "line": "sentinelHandle.setDegradeRuleSlowRatioThreshold(0.5d);",
                "type": "ADD",
                "lineNo": 175
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleMinRequestAmount(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleMinRequestAmount(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '5'"
              },
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleStatIntervals(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleStatIntervals(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '10'"
              },
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleSlowRatioThreshold(double)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleSlowRatioThreshold(double)"
              },
              {
                "type": "CtLiteral",
                "value": "double '0.5'"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "sentinelHandle.setDegradeRuleMinRequestAmount(5);",
                "type": "ADD",
                "lineNo": 206
              },
              {
                "line": "sentinelHandle.setDegradeRuleStatIntervals(10);",
                "type": "ADD",
                "lineNo": 207
              },
              {
                "line": "sentinelHandle.setDegradeRuleSlowRatioThreshold(0.5d);",
                "type": "ADD",
                "lineNo": 208
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleMinRequestAmount(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleMinRequestAmount(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '5'"
              },
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleStatIntervals(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleStatIntervals(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '10'"
              },
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleSlowRatioThreshold(double)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleSlowRatioThreshold(double)"
              },
              {
                "type": "CtLiteral",
                "value": "double '0.5'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-sentinel/src/test/java/org/apache/shenyu/plugin/sentinel/handler/SentinelRuleHandleTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-sentinel/src/test/java/org/apache/shenyu/plugin/sentinel/handler/SentinelRuleHandleTest.java",
        "name": "org.apache.shenyu.plugin.sentinel.handler.SentinelRuleHandleTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "sentinelHandle.setDegradeRuleMinRequestAmount(5);",
                "type": "ADD",
                "lineNo": 65
              },
              {
                "line": "sentinelHandle.setDegradeRuleStatIntervals(10);",
                "type": "ADD",
                "lineNo": 66
              },
              {
                "line": "sentinelHandle.setDegradeRuleSlowRatioThreshold(0.5d);",
                "type": "ADD",
                "lineNo": 67
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleMinRequestAmount(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleMinRequestAmount(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '5'"
              },
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleStatIntervals(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleStatIntervals(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '10'"
              },
              {
                "type": "CtInvocation",
                "value": "setDegradeRuleSlowRatioThreshold(double)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.SentinelHandle sentinelHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "setDegradeRuleSlowRatioThreshold(double)"
              },
              {
                "type": "CtLiteral",
                "value": "double '0.5'"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "59331e687",
    "aCommit": "a651e6925",
    "changes": [
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/utils/ShaUtils.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/utils/ShaUtils.java",
        "name": "org.apache.shenyu.admin.utils.ShaUtils",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "if (hex.length() == 1) {",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "strHexString.append('0');",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 52
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.String.length()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String hex"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.length()"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.StringBuffer.append(char)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.StringBuffer strHexString"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.StringBuffer.append(char)"
              },
              {
                "type": "CtLiteral",
                "value": "char '0'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/utils/ShaUtilsTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/utils/ShaUtilsTest.java",
        "name": "org.apache.shenyu.admin.utils.ShaUtilsTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertThat(ShaUtils.shaEncryption(\"123456\"), is(\"ba3253876aed6bc22d4a6ff53d846c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413\"));",
                "type": "DELETE",
                "lineNo": 33
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(ShaUtils.shaEncryption(\"123456\"), is(\"ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413\"));",
                "type": "ADD",
                "lineNo": 33
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.ShaUtils.shaEncryption(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.ShaUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.ShaUtils.shaEncryption(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '123456'"
              },
              {
                "type": "CtInvocation",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ba3253876aed6bc22d4a6ff53d846c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.ShaUtils.shaEncryption(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.ShaUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.ShaUtils.shaEncryption(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '123456'"
              },
              {
                "type": "CtInvocation",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ba3253876aed6bc22d4a6ff53d8406c6ad864195ed144ab5c87621b6c233b548baeae6956df346ec8c17f5ea10f35ee3cbc514797ed7ddd3145464e2a0bab413'"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "3225333c1",
    "aCommit": "a5a6831f0",
    "changes": [
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/page/PageResultUtils.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/page/PageResultUtils.java",
        "name": "org.dromara.soul.admin.page.PageResultUtils",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* @param <T>           the type parameter",
                "type": "DELETE",
                "lineNo": 34
              },
              {
                "line": "* @param pageParameter the page parameter",
                "type": "DELETE",
                "lineNo": 35
              },
              {
                "line": "* @param count         the count",
                "type": "DELETE",
                "lineNo": 36
              },
              {
                "line": "* @param supplier      the supplier",
                "type": "DELETE",
                "lineNo": 37
              }
            ],
            "targetChanges": [
              {
                "line": "* @param <T>              the type parameter",
                "type": "ADD",
                "lineNo": 34
              },
              {
                "line": "* @param pageParameter    the page parameter",
                "type": "ADD",
                "lineNo": 35
              },
              {
                "line": "* @param countSupplier    the count supplier",
                "type": "ADD",
                "lineNo": 36
              },
              {
                "line": "* @param listSupplier     the list supplier",
                "type": "ADD",
                "lineNo": 37
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public static <T> CommonPager<T> result(final PageParameter pageParameter, final Integer count, final Supplier<List<T>> supplier) {",
                "type": "DELETE",
                "lineNo": 40
              }
            ],
            "targetChanges": [
              {
                "line": "public static <T> CommonPager<T> result(final PageParameter pageParameter, final Supplier<Integer> countSupplier,",
                "type": "ADD",
                "lineNo": 40
              },
              {
                "line": "final Supplier<List<T>> listSupplier) {",
                "type": "ADD",
                "lineNo": 41
              },
              {
                "line": "Integer count = countSupplier.get();",
                "type": "ADD",
                "lineNo": 42
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.CommonPager"
              },
              {
                "type": "CtParameter",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtParameter",
                "value": "java.util.function.Supplier supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.CommonPager"
              },
              {
                "type": "CtParameter",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtParameter",
                "value": "java.util.function.Supplier countSupplier"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtParameter",
                "value": "java.util.function.Supplier listSupplier"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Supplier countSupplier"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return new CommonPager<>(new PageParameter(pageParameter.getCurrentPage(), pageParameter.getPageSize(), count), supplier.get());",
                "type": "DELETE",
                "lineNo": 42
              }
            ],
            "targetChanges": [
              {
                "line": "return new CommonPager<>(new PageParameter(pageParameter.getCurrentPage(), pageParameter.getPageSize(), count),",
                "type": "ADD",
                "lineNo": 44
              },
              {
                "line": "listSupplier.get());",
                "type": "ADD",
                "lineNo": 45
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.admin.page.CommonPager<>(org.dromara.soul.admin.page.PageParameter,java.util.List)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.CommonPager"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.admin.page.PageParameter.PageParameter(Integer,Integer)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getCurrentPage()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtExecutableReference",
                "value": "getCurrentPage()"
              },
              {
                "type": "CtInvocation",
                "value": "getPageSize()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageSize()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Supplier supplier"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.admin.page.CommonPager<>(org.dromara.soul.admin.page.PageParameter,java.util.List)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.CommonPager"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.admin.page.PageParameter.PageParameter(Integer,Integer)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getCurrentPage()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtExecutableReference",
                "value": "getCurrentPage()"
              },
              {
                "type": "CtInvocation",
                "value": "getPageSize()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageSize()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Supplier listSupplier"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return new CommonPager<>(new PageParameter(pageParameter.getCurrentPage(), pageParameter.getPageSize(), 0), Collections.emptyList());",
                "type": "DELETE",
                "lineNo": 44
              }
            ],
            "targetChanges": [
              {
                "line": "return new CommonPager<>(new PageParameter(pageParameter.getCurrentPage(), pageParameter.getPageSize(), 0),",
                "type": "ADD",
                "lineNo": 47
              },
              {
                "line": "Collections.emptyList());",
                "type": "ADD",
                "lineNo": 48
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.admin.page.CommonPager<>(org.dromara.soul.admin.page.PageParameter,java.lang.Object)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.CommonPager"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.admin.page.PageParameter.PageParameter(int,int,int)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getCurrentPage()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtExecutableReference",
                "value": "getCurrentPage()"
              },
              {
                "type": "CtInvocation",
                "value": "getPageSize()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageSize()"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collections.emptyList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collections.emptyList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.admin.page.CommonPager<>(org.dromara.soul.admin.page.PageParameter,java.lang.Object)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.CommonPager"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.admin.page.PageParameter.PageParameter(int,int,int)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getCurrentPage()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtExecutableReference",
                "value": "getCurrentPage()"
              },
              {
                "type": "CtInvocation",
                "value": "getPageSize()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageSize()"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collections.emptyList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collections.emptyList()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/AppAuthServiceImpl.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/AppAuthServiceImpl.java",
        "name": "org.dromara.soul.admin.service.impl.AppAuthServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "PageParameter pageParameter = appAuthQuery.getPageParameter();",
                "type": "DELETE",
                "lineNo": 337
              },
              {
                "line": "Integer count = appAuthMapper.countByQuery(appAuthQuery);",
                "type": "DELETE",
                "lineNo": 338
              },
              {
                "line": "return PageResultUtils.result(pageParameter, count, () -> appAuthMapper.selectByQuery(appAuthQuery).stream().map(AppAuthTransfer.INSTANCE::mapToVO).collect(Collectors.toList()));",
                "type": "DELETE",
                "lineNo": 339
              }
            ],
            "targetChanges": [
              {
                "line": "return PageResultUtils.result(appAuthQuery.getPageParameter(),",
                "type": "ADD",
                "lineNo": 336
              },
              {
                "line": "() -> appAuthMapper.countByQuery(appAuthQuery),",
                "type": "ADD",
                "lineNo": 337
              },
              {
                "line": "() -> appAuthMapper.selectByQuery(appAuthQuery)",
                "type": "ADD",
                "lineNo": 338
              },
              {
                "line": ".stream()",
                "type": "ADD",
                "lineNo": 339
              },
              {
                "line": ".map(AppAuthTransfer.INSTANCE::mapToVO)",
                "type": "ADD",
                "lineNo": 340
              },
              {
                "line": ".collect(Collectors.toList()));",
                "type": "ADD",
                "lineNo": 341
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.AppAuthQuery appAuthQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.AppAuthMapper.countByQuery(AppAuthQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.AppAuthMapper appAuthMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.AppAuthMapper.countByQuery(AppAuthQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.AppAuthQuery appAuthQuery"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.AppAuthMapper.selectByQuery(AppAuthQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.AppAuthMapper appAuthMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.AppAuthMapper.selectByQuery(AppAuthQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.AppAuthQuery appAuthQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.dromara.soul.admin.transfer.AppAuthTransfer.mapToVO(AppAuthDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.transfer.AppAuthTransfer.mapToVO(AppAuthDO)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.transfer.AppAuthTransfer INSTANCE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.transfer.AppAuthTransfer"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.transfer.AppAuthTransfer INSTANCE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.AppAuthQuery appAuthQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtInvocation",
                "value": "countByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.AppAuthMapper appAuthMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.AppAuthMapper appAuthMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "countByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.AppAuthQuery appAuthQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.AppAuthQuery appAuthQuery"
              },
              {
                "type": "CtInvocation",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtInvocation",
                "value": "selectByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.AppAuthMapper appAuthMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.AppAuthMapper appAuthMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.AppAuthQuery appAuthQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.AppAuthQuery appAuthQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "mapToVO()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> AppAuthTransfer.INSTANCE"
              },
              {
                "type": "CtExecutableReference",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/DashboardUserServiceImpl.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/DashboardUserServiceImpl.java",
        "name": "org.dromara.soul.admin.service.impl.DashboardUserServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "PageParameter parameter = dashboardUserQuery.getPageParameter();",
                "type": "DELETE",
                "lineNo": 161
              },
              {
                "line": "Integer count = dashboardUserMapper.countByQuery(dashboardUserQuery);",
                "type": "DELETE",
                "lineNo": 162
              },
              {
                "line": "return PageResultUtils.result(parameter, count, () -> dashboardUserMapper.selectByQuery(dashboardUserQuery).stream().map(DashboardUserVO::buildDashboardUserVO).collect(Collectors.toList()));",
                "type": "DELETE",
                "lineNo": 163
              }
            ],
            "targetChanges": [
              {
                "line": "return PageResultUtils.result(dashboardUserQuery.getPageParameter(),",
                "type": "ADD",
                "lineNo": 160
              },
              {
                "line": "() -> dashboardUserMapper.countByQuery(dashboardUserQuery),",
                "type": "ADD",
                "lineNo": 161
              },
              {
                "line": "() -> dashboardUserMapper.selectByQuery(dashboardUserQuery)",
                "type": "ADD",
                "lineNo": 162
              },
              {
                "line": ".stream()",
                "type": "ADD",
                "lineNo": 163
              },
              {
                "line": ".map(DashboardUserVO::buildDashboardUserVO)",
                "type": "ADD",
                "lineNo": 164
              },
              {
                "line": ".collect(Collectors.toList()));",
                "type": "ADD",
                "lineNo": 165
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.PageParameter parameter"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.DashboardUserQuery dashboardUserQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.DashboardUserMapper.countByQuery(DashboardUserQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.DashboardUserMapper dashboardUserMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.DashboardUserMapper.countByQuery(DashboardUserQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.DashboardUserQuery dashboardUserQuery"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter parameter"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.DashboardUserMapper.selectByQuery(DashboardUserQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.DashboardUserMapper dashboardUserMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.DashboardUserMapper.selectByQuery(DashboardUserQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.DashboardUserQuery dashboardUserQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.dromara.soul.admin.vo.DashboardUserVO.buildDashboardUserVO(DashboardUserDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.vo.DashboardUserVO.buildDashboardUserVO(DashboardUserDO)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.vo.DashboardUserVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.DashboardUserQuery dashboardUserQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtInvocation",
                "value": "countByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.DashboardUserMapper dashboardUserMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.DashboardUserMapper dashboardUserMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "countByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.DashboardUserQuery dashboardUserQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.DashboardUserQuery dashboardUserQuery"
              },
              {
                "type": "CtInvocation",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtInvocation",
                "value": "selectByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.DashboardUserMapper dashboardUserMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.DashboardUserMapper dashboardUserMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.DashboardUserQuery dashboardUserQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.DashboardUserQuery dashboardUserQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "buildDashboardUserVO()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.vo.DashboardUserVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/MetaDataServiceImpl.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/MetaDataServiceImpl.java",
        "name": "org.dromara.soul.admin.service.impl.MetaDataServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "PageParameter pageParameter = metaDataQuery.getPageParameter();",
                "type": "DELETE",
                "lineNo": 153
              },
              {
                "line": "Integer count = metaDataMapper.countByQuery(metaDataQuery);",
                "type": "DELETE",
                "lineNo": 154
              },
              {
                "line": "return PageResultUtils.result(pageParameter, count, () -> metaDataMapper.selectByQuery(metaDataQuery).stream().map(MetaDataTransfer.INSTANCE::mapToVO).collect(Collectors.toList()));",
                "type": "DELETE",
                "lineNo": 155
              }
            ],
            "targetChanges": [
              {
                "line": "return PageResultUtils.result(metaDataQuery.getPageParameter(),",
                "type": "ADD",
                "lineNo": 152
              },
              {
                "line": "() -> metaDataMapper.countByQuery(metaDataQuery),",
                "type": "ADD",
                "lineNo": 153
              },
              {
                "line": "() -> metaDataMapper.selectByQuery(metaDataQuery)",
                "type": "ADD",
                "lineNo": 154
              },
              {
                "line": ".stream()",
                "type": "ADD",
                "lineNo": 155
              },
              {
                "line": ".map(MetaDataTransfer.INSTANCE::mapToVO)",
                "type": "ADD",
                "lineNo": 156
              },
              {
                "line": ".collect(Collectors.toList()));",
                "type": "ADD",
                "lineNo": 157
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.MetaDataQuery metaDataQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.MetaDataMapper.countByQuery(MetaDataQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.MetaDataMapper metaDataMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.MetaDataMapper.countByQuery(MetaDataQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.MetaDataQuery metaDataQuery"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.MetaDataMapper.selectByQuery(MetaDataQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.MetaDataMapper metaDataMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.MetaDataMapper.selectByQuery(MetaDataQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.MetaDataQuery metaDataQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.dromara.soul.admin.transfer.MetaDataTransfer.mapToVO(MetaDataDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.transfer.MetaDataTransfer.mapToVO(MetaDataDO)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.transfer.MetaDataTransfer INSTANCE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.transfer.MetaDataTransfer"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.transfer.MetaDataTransfer INSTANCE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.MetaDataQuery metaDataQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtInvocation",
                "value": "countByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.MetaDataMapper metaDataMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.MetaDataMapper metaDataMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "countByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.MetaDataQuery metaDataQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.MetaDataQuery metaDataQuery"
              },
              {
                "type": "CtInvocation",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtInvocation",
                "value": "selectByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.MetaDataMapper metaDataMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.MetaDataMapper metaDataMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.MetaDataQuery metaDataQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.MetaDataQuery metaDataQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "mapToVO()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> MetaDataTransfer.INSTANCE"
              },
              {
                "type": "CtExecutableReference",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/PluginHandleServiceImpl.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/PluginHandleServiceImpl.java",
        "name": "org.dromara.soul.admin.service.impl.PluginHandleServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "PageParameter pageParameter = pluginHandleQuery.getPageParameter();",
                "type": "DELETE",
                "lineNo": 63
              },
              {
                "line": "Integer count = pluginHandleMapper.countByQuery(pluginHandleQuery);",
                "type": "DELETE",
                "lineNo": 64
              },
              {
                "line": "return PageResultUtils.result(pageParameter, count, () -> pluginHandleMapper.selectByQuery(pluginHandleQuery)",
                "type": "DELETE",
                "lineNo": 65
              },
              {
                "line": ".stream().map(this::buildPluginHandleVO).collect(Collectors.toList()));",
                "type": "DELETE",
                "lineNo": 66
              }
            ],
            "targetChanges": [
              {
                "line": "return PageResultUtils.result(pluginHandleQuery.getPageParameter(),",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "() -> pluginHandleMapper.countByQuery(pluginHandleQuery),",
                "type": "ADD",
                "lineNo": 63
              },
              {
                "line": "() -> pluginHandleMapper.selectByQuery(pluginHandleQuery)",
                "type": "ADD",
                "lineNo": 64
              },
              {
                "line": ".stream()",
                "type": "ADD",
                "lineNo": 65
              },
              {
                "line": ".map(this::buildPluginHandleVO)",
                "type": "ADD",
                "lineNo": 66
              },
              {
                "line": ".collect(Collectors.toList()));",
                "type": "ADD",
                "lineNo": 67
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.PluginHandleQuery pluginHandleQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.PluginHandleMapper.countByQuery(PluginHandleQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.PluginHandleMapper pluginHandleMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.PluginHandleMapper.countByQuery(PluginHandleQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.PluginHandleQuery pluginHandleQuery"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.PluginHandleMapper.selectByQuery(PluginHandleQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.PluginHandleMapper pluginHandleMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.PluginHandleMapper.selectByQuery(PluginHandleQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.PluginHandleQuery pluginHandleQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.dromara.soul.admin.service.impl.PluginHandleServiceImpl.buildPluginHandleVO(PluginHandleDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.service.impl.PluginHandleServiceImpl.buildPluginHandleVO(PluginHandleDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.PluginHandleQuery pluginHandleQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtInvocation",
                "value": "countByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.PluginHandleMapper pluginHandleMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.PluginHandleMapper pluginHandleMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "countByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.PluginHandleQuery pluginHandleQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.PluginHandleQuery pluginHandleQuery"
              },
              {
                "type": "CtInvocation",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtInvocation",
                "value": "selectByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.PluginHandleMapper pluginHandleMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.PluginHandleMapper pluginHandleMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.PluginHandleQuery pluginHandleQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.PluginHandleQuery pluginHandleQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "buildPluginHandleVO()"
              },
              {
                "type": "CtExecutableReference",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/PluginServiceImpl.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/PluginServiceImpl.java",
        "name": "org.dromara.soul.admin.service.impl.PluginServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "PageParameter pageParameter = pluginQuery.getPageParameter();",
                "type": "DELETE",
                "lineNo": 209
              },
              {
                "line": "Integer count = pluginMapper.countByQuery(pluginQuery);",
                "type": "DELETE",
                "lineNo": 210
              },
              {
                "line": "return PageResultUtils.result(pageParameter, count, () -> pluginMapper.selectByQuery(pluginQuery).stream().map(PluginVO::buildPluginVO).collect(Collectors.toList()));",
                "type": "DELETE",
                "lineNo": 211
              }
            ],
            "targetChanges": [
              {
                "line": "return PageResultUtils.result(pluginQuery.getPageParameter(),",
                "type": "ADD",
                "lineNo": 208
              },
              {
                "line": "() -> pluginMapper.countByQuery(pluginQuery),",
                "type": "ADD",
                "lineNo": 209
              },
              {
                "line": "() -> pluginMapper.selectByQuery(pluginQuery).stream().map(PluginVO::buildPluginVO).collect(Collectors.toList()));",
                "type": "ADD",
                "lineNo": 210
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.PluginQuery pluginQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.PluginMapper.countByQuery(PluginQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.PluginMapper pluginMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.PluginMapper.countByQuery(PluginQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.PluginQuery pluginQuery"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.PluginMapper.selectByQuery(PluginQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.PluginMapper pluginMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.PluginMapper.selectByQuery(PluginQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.PluginQuery pluginQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.dromara.soul.admin.vo.PluginVO.buildPluginVO(PluginDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.vo.PluginVO.buildPluginVO(PluginDO)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.vo.PluginVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.PluginQuery pluginQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtInvocation",
                "value": "countByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.PluginMapper pluginMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.PluginMapper pluginMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "countByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.PluginQuery pluginQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.PluginQuery pluginQuery"
              },
              {
                "type": "CtInvocation",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtInvocation",
                "value": "selectByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.PluginMapper pluginMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.PluginMapper pluginMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.PluginQuery pluginQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.PluginQuery pluginQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "buildPluginVO()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.vo.PluginVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/ResourceServiceImpl.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/ResourceServiceImpl.java",
        "name": "org.dromara.soul.admin.service.impl.ResourceServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "PageParameter pageParameter = resourceQuery.getPageParameter();",
                "type": "DELETE",
                "lineNo": 97
              },
              {
                "line": "Integer count = resourceMapper.countByQuery(resourceQuery);",
                "type": "DELETE",
                "lineNo": 98
              },
              {
                "line": "return PageResultUtils.result(pageParameter, count, () -> resourceMapper.selectByQuery(resourceQuery).stream().map(ResourceVO::buildResourceVO).collect(Collectors.toList()));",
                "type": "DELETE",
                "lineNo": 99
              }
            ],
            "targetChanges": [
              {
                "line": "return PageResultUtils.result(resourceQuery.getPageParameter(),",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "() -> resourceMapper.countByQuery(resourceQuery),",
                "type": "ADD",
                "lineNo": 97
              },
              {
                "line": "() -> resourceMapper.selectByQuery(resourceQuery)",
                "type": "ADD",
                "lineNo": 98
              },
              {
                "line": ".stream()",
                "type": "ADD",
                "lineNo": 99
              },
              {
                "line": ".map(ResourceVO::buildResourceVO)",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": ".collect(Collectors.toList()));",
                "type": "ADD",
                "lineNo": 101
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.ResourceQuery resourceQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.ResourceMapper.countByQuery(ResourceQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.ResourceMapper resourceMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.ResourceMapper.countByQuery(ResourceQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.ResourceQuery resourceQuery"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.ResourceMapper.selectByQuery(ResourceQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.ResourceMapper resourceMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.ResourceMapper.selectByQuery(ResourceQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.ResourceQuery resourceQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.dromara.soul.admin.vo.ResourceVO.buildResourceVO(ResourceDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.vo.ResourceVO.buildResourceVO(ResourceDO)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.vo.ResourceVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.ResourceQuery resourceQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtInvocation",
                "value": "countByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.ResourceMapper resourceMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.ResourceMapper resourceMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "countByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.ResourceQuery resourceQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.ResourceQuery resourceQuery"
              },
              {
                "type": "CtInvocation",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtInvocation",
                "value": "selectByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.ResourceMapper resourceMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.ResourceMapper resourceMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.ResourceQuery resourceQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.ResourceQuery resourceQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "buildResourceVO()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.vo.ResourceVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ]
          },
          {
            "targetChanges": [],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/RoleServiceImpl.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/RoleServiceImpl.java",
        "name": "org.dromara.soul.admin.service.impl.RoleServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "PageParameter pageParameter = roleQuery.getPageParameter();",
                "type": "DELETE",
                "lineNo": 135
              },
              {
                "line": "Integer count = roleMapper.countByQuery(roleQuery);",
                "type": "DELETE",
                "lineNo": 136
              },
              {
                "line": "return PageResultUtils.result(pageParameter, count, () -> roleMapper.selectByQuery(roleQuery).stream().map(RoleVO::buildRoleVO).collect(Collectors.toList()));",
                "type": "DELETE",
                "lineNo": 137
              }
            ],
            "targetChanges": [
              {
                "line": "return PageResultUtils.result(roleQuery.getPageParameter(),",
                "type": "ADD",
                "lineNo": 134
              },
              {
                "line": "() -> roleMapper.countByQuery(roleQuery),",
                "type": "ADD",
                "lineNo": 135
              },
              {
                "line": "() -> roleMapper.selectByQuery(roleQuery).stream().map(RoleVO::buildRoleVO).collect(Collectors.toList()));",
                "type": "ADD",
                "lineNo": 136
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.RoleQuery roleQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.RoleMapper.countByQuery(RoleQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.RoleMapper roleMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.RoleMapper.countByQuery(RoleQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.RoleQuery roleQuery"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.RoleMapper.selectByQuery(RoleQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.RoleMapper roleMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.RoleMapper.selectByQuery(RoleQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.RoleQuery roleQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.dromara.soul.admin.vo.RoleVO.buildRoleVO(RoleDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.vo.RoleVO.buildRoleVO(RoleDO)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.vo.RoleVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.RoleQuery roleQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtInvocation",
                "value": "countByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.RoleMapper roleMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.RoleMapper roleMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "countByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.RoleQuery roleQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.RoleQuery roleQuery"
              },
              {
                "type": "CtInvocation",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtInvocation",
                "value": "selectByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.RoleMapper roleMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.RoleMapper roleMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.RoleQuery roleQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.RoleQuery roleQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "buildRoleVO()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.vo.RoleVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/RuleServiceImpl.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/RuleServiceImpl.java",
        "name": "org.dromara.soul.admin.service.impl.RuleServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "PageParameter pageParameter = ruleQuery.getPageParameter();",
                "type": "DELETE",
                "lineNo": 179
              },
              {
                "line": "Integer count = ruleMapper.countByQuery(ruleQuery);",
                "type": "DELETE",
                "lineNo": 180
              },
              {
                "line": "return PageResultUtils.result(pageParameter, count, () -> ruleMapper.selectByQuery(ruleQuery).stream().map(RuleVO::buildRuleVO).collect(Collectors.toList()));",
                "type": "DELETE",
                "lineNo": 181
              }
            ],
            "targetChanges": [
              {
                "line": "return PageResultUtils.result(ruleQuery.getPageParameter(),",
                "type": "ADD",
                "lineNo": 178
              },
              {
                "line": "() -> ruleMapper.countByQuery(ruleQuery),",
                "type": "ADD",
                "lineNo": 179
              },
              {
                "line": "() -> ruleMapper.selectByQuery(ruleQuery).stream().map(RuleVO::buildRuleVO).collect(Collectors.toList()));",
                "type": "ADD",
                "lineNo": 180
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.RuleQuery ruleQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.RuleMapper.countByQuery(RuleQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.RuleMapper ruleMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.RuleMapper.countByQuery(RuleQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.RuleQuery ruleQuery"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.RuleMapper.selectByQuery(RuleQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.RuleMapper ruleMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.RuleMapper.selectByQuery(RuleQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.RuleQuery ruleQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.dromara.soul.admin.vo.RuleVO.buildRuleVO(RuleDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.vo.RuleVO.buildRuleVO(RuleDO)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.vo.RuleVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.RuleQuery ruleQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtInvocation",
                "value": "countByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.RuleMapper ruleMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.RuleMapper ruleMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "countByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.RuleQuery ruleQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.RuleQuery ruleQuery"
              },
              {
                "type": "CtInvocation",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtInvocation",
                "value": "selectByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.RuleMapper ruleMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.RuleMapper ruleMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.RuleQuery ruleQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.RuleQuery ruleQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "buildRuleVO()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.vo.RuleVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/SelectorServiceImpl.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/SelectorServiceImpl.java",
        "name": "org.dromara.soul.admin.service.impl.SelectorServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "PageParameter pageParameter = selectorQuery.getPageParameter();",
                "type": "DELETE",
                "lineNo": 228
              },
              {
                "line": "Integer count = selectorMapper.countByQuery(selectorQuery);",
                "type": "DELETE",
                "lineNo": 229
              },
              {
                "line": "return PageResultUtils.result(pageParameter, count, () -> selectorMapper.selectByQuery(selectorQuery).stream().map(SelectorVO::buildSelectorVO).collect(Collectors.toList()));",
                "type": "DELETE",
                "lineNo": 230
              }
            ],
            "targetChanges": [
              {
                "line": "return PageResultUtils.result(selectorQuery.getPageParameter(),",
                "type": "ADD",
                "lineNo": 227
              },
              {
                "line": "() -> selectorMapper.countByQuery(selectorQuery),",
                "type": "ADD",
                "lineNo": 228
              },
              {
                "line": "() -> selectorMapper.selectByQuery(selectorQuery)",
                "type": "ADD",
                "lineNo": 229
              },
              {
                "line": ".stream()",
                "type": "ADD",
                "lineNo": 230
              },
              {
                "line": ".map(SelectorVO::buildSelectorVO)",
                "type": "ADD",
                "lineNo": 231
              },
              {
                "line": ".collect(Collectors.toList()));",
                "type": "ADD",
                "lineNo": 232
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.SelectorQuery selectorQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.SelectorMapper.countByQuery(SelectorQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.SelectorMapper.countByQuery(SelectorQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.SelectorQuery selectorQuery"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.SelectorMapper.selectByQuery(SelectorQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.SelectorMapper.selectByQuery(SelectorQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.SelectorQuery selectorQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.dromara.soul.admin.vo.SelectorVO.buildSelectorVO(SelectorDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.vo.SelectorVO.buildSelectorVO(SelectorDO)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.vo.SelectorVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.SelectorQuery selectorQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtInvocation",
                "value": "countByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "countByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.SelectorQuery selectorQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.SelectorQuery selectorQuery"
              },
              {
                "type": "CtInvocation",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtInvocation",
                "value": "selectByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.SelectorQuery selectorQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.SelectorQuery selectorQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "buildSelectorVO()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.vo.SelectorVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "List<ConditionData> conditionDataList = selectorConditionMapper",
                "type": "DELETE",
                "lineNo": 261
              },
              {
                "line": ".selectByQuery(new SelectorConditionQuery(selectorDO.getId()))",
                "type": "DELETE",
                "lineNo": 262
              },
              {
                "line": ".stream()",
                "type": "DELETE",
                "lineNo": 263
              },
              {
                "line": ".filter(Objects::nonNull)",
                "type": "DELETE",
                "lineNo": 264
              },
              {
                "line": ".map(ConditionTransfer.INSTANCE::mapToSelectorDO)",
                "type": "DELETE",
                "lineNo": 265
              },
              {
                "line": ".collect(Collectors.toList());",
                "type": "DELETE",
                "lineNo": 266
              }
            ],
            "targetChanges": [
              {
                "line": "List<ConditionData> conditionDataList = ConditionTransfer.INSTANCE.mapToSelectorDOS(",
                "type": "ADD",
                "lineNo": 263
              },
              {
                "line": "selectorConditionMapper.selectByQuery(new SelectorConditionQuery(selectorDO.getId())));",
                "type": "ADD",
                "lineNo": 264
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List conditionDataList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.ConditionData"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.SelectorConditionMapper.selectByQuery(SelectorConditionQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.SelectorConditionMapper selectorConditionMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.SelectorConditionMapper.selectByQuery(SelectorConditionQuery)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.admin.query.SelectorConditionQuery.SelectorConditionQuery()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.query.SelectorConditionQuery"
              },
              {
                "type": "CtInvocation",
                "value": "getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "getId()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer.mapToSelectorDO(SelectorConditionDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer.mapToSelectorDO(SelectorConditionDO)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer INSTANCE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer INSTANCE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List conditionDataList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.ConditionData"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer.mapToSelectorDOS(List)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer INSTANCE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer INSTANCE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer.mapToSelectorDOS(List)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.SelectorConditionMapper.selectByQuery(SelectorConditionQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.SelectorConditionMapper selectorConditionMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.SelectorConditionMapper.selectByQuery(SelectorConditionQuery)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.admin.query.SelectorConditionQuery.SelectorConditionQuery()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.query.SelectorConditionQuery"
              },
              {
                "type": "CtInvocation",
                "value": "getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "getId()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/SoulDictServiceImpl.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/SoulDictServiceImpl.java",
        "name": "org.dromara.soul.admin.service.impl.SoulDictServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "PageParameter pageParameter = soulDictQuery.getPageParameter();",
                "type": "DELETE",
                "lineNo": 55
              },
              {
                "line": "Integer count = soulDictMapper.countByQuery(soulDictQuery);",
                "type": "DELETE",
                "lineNo": 56
              },
              {
                "line": "return PageResultUtils.result(pageParameter, count, () ->",
                "type": "DELETE",
                "lineNo": 57
              },
              {
                "line": "soulDictMapper.selectByQuery(soulDictQuery)",
                "type": "DELETE",
                "lineNo": 58
              }
            ],
            "targetChanges": [
              {
                "line": "return PageResultUtils.result(soulDictQuery.getPageParameter(),",
                "type": "ADD",
                "lineNo": 54
              },
              {
                "line": "() -> soulDictMapper.countByQuery(soulDictQuery),",
                "type": "ADD",
                "lineNo": 55
              },
              {
                "line": "() -> soulDictMapper.selectByQuery(soulDictQuery)",
                "type": "ADD",
                "lineNo": 56
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.PageParameter"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.SoulDictQuery soulDictQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.SoulDictMapper.countByQuery(SoulDictQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.SoulDictMapper soulDictMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.SoulDictMapper.countByQuery(SoulDictQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.SoulDictQuery soulDictQuery"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer count"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.SoulDictMapper.selectByQuery(SoulDictQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.SoulDictMapper soulDictMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.SoulDictMapper.selectByQuery(SoulDictQuery)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.SoulDictQuery soulDictQuery"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtInvocation",
                "value": "getPageParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.SoulDictQuery soulDictQuery"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPageParameter()"
              },
              {
                "type": "CtInvocation",
                "value": "countByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.SoulDictMapper soulDictMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.SoulDictMapper soulDictMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "countByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.SoulDictQuery soulDictQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.SoulDictQuery soulDictQuery"
              },
              {
                "type": "CtInvocation",
                "value": "collect()"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtInvocation",
                "value": "selectByQuery()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.SoulDictMapper soulDictMapper"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.mapper.SoulDictMapper soulDictMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectByQuery()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.query.SoulDictQuery soulDictQuery"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.admin.query.SoulDictQuery soulDictQuery"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/UpstreamCheckService.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/service/impl/UpstreamCheckService.java",
        "name": "org.dromara.soul.admin.service.impl.UpstreamCheckService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "String handler = CollectionUtils.isEmpty(upstreams) ? \"\" : GsonUtils.getInstance().toJson(upstreams);",
                "type": "DELETE",
                "lineNo": 187
              },
              {
                "line": "List<ConditionData> conditionDataList = selectorConditionMapper",
                "type": "DELETE",
                "lineNo": 188
              },
              {
                "line": ".selectByQuery(new SelectorConditionQuery(selectorDO.getId()))",
                "type": "DELETE",
                "lineNo": 189
              },
              {
                "line": ".stream()",
                "type": "DELETE",
                "lineNo": 190
              },
              {
                "line": ".filter(Objects::nonNull)",
                "type": "DELETE",
                "lineNo": 191
              },
              {
                "line": ".map(ConditionTransfer.INSTANCE::mapToSelectorDO)",
                "type": "DELETE",
                "lineNo": 192
              },
              {
                "line": ".collect(Collectors.toList());",
                "type": "DELETE",
                "lineNo": 193
              }
            ],
            "targetChanges": [
              {
                "line": "List<ConditionData> conditionDataList = ConditionTransfer.INSTANCE.mapToSelectorDOS(",
                "type": "ADD",
                "lineNo": 186
              },
              {
                "line": "selectorConditionMapper.selectByQuery(new SelectorConditionQuery(selectorDO.getId())));",
                "type": "ADD",
                "lineNo": 187
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String handler"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.collections4.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.collections4.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.collections4.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List upstreams"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List upstreams"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List conditionDataList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.ConditionData"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.SelectorConditionMapper.selectByQuery(SelectorConditionQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.SelectorConditionMapper selectorConditionMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.SelectorConditionMapper.selectByQuery(SelectorConditionQuery)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.admin.query.SelectorConditionQuery.SelectorConditionQuery()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.query.SelectorConditionQuery"
              },
              {
                "type": "CtInvocation",
                "value": "getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "getId()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer.mapToSelectorDO(SelectorConditionDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer.mapToSelectorDO(SelectorConditionDO)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer INSTANCE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer INSTANCE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List conditionDataList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.ConditionData"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer.mapToSelectorDOS(List)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer INSTANCE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer INSTANCE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer.mapToSelectorDOS(List)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.mapper.SelectorConditionMapper.selectByQuery(SelectorConditionQuery)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.admin.mapper.SelectorConditionMapper selectorConditionMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.mapper.SelectorConditionMapper.selectByQuery(SelectorConditionQuery)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.admin.query.SelectorConditionQuery.SelectorConditionQuery()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.query.SelectorConditionQuery"
              },
              {
                "type": "CtInvocation",
                "value": "getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "getId()"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "String handler = CollectionUtils.isEmpty(upstreams) ? \"\" : GsonUtils.getInstance().toJson(upstreams);",
                "type": "ADD",
                "lineNo": 189
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String handler"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.collections4.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.collections4.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.collections4.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List upstreams"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List upstreams"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/main/java/org/dromara/soul/admin/transfer/ConditionTransfer.java",
        "aPath": "soul-admin/src/main/java/org/dromara/soul/admin/transfer/ConditionTransfer.java",
        "name": "org.dromara.soul.admin.transfer.ConditionTransfer",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* Map to selector data condition data list.",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 53
              },
              {
                "line": "* @param selectorConditionDOS the selector condition do list",
                "type": "ADD",
                "lineNo": 54
              },
              {
                "line": "* @return the condition data list",
                "type": "ADD",
                "lineNo": 55
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "List<ConditionData> mapToSelectorDOS(List<SelectorConditionDO> selectorConditionDOS);",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 59
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.admin.transfer.ConditionTransfer.mapToSelectorDOS(List)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.ConditionData"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List selectorConditionDOS"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.entity.SelectorConditionDO"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-admin/src/test/java/org/dromara/soul/admin/page/PageResultUtilsTest.java",
        "aPath": "soul-admin/src/test/java/org/dromara/soul/admin/page/PageResultUtilsTest.java",
        "name": "org.dromara.soul.admin.page.PageResultUtilsTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "final CommonPager<String> result = PageResultUtils.result(pageParameter, 0, ArrayList::new);",
                "type": "DELETE",
                "lineNo": 36
              }
            ],
            "targetChanges": [
              {
                "line": "final CommonPager<String> result = PageResultUtils.result(pageParameter, () -> 0, ArrayList::new);",
                "type": "ADD",
                "lineNo": 36
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.CommonPager result"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.CommonPager"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.ArrayList"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.CommonPager result"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.CommonPager"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.ArrayList"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "final CommonPager<String> result = PageResultUtils.result(pageParameter, 1, () -> Collections.singletonList(\"result1\"));",
                "type": "DELETE",
                "lineNo": 43
              }
            ],
            "targetChanges": [
              {
                "line": "final CommonPager<String> result = PageResultUtils.result(pageParameter, () -> 1,",
                "type": "ADD",
                "lineNo": 43
              },
              {
                "line": "() -> Collections.singletonList(\"result1\"));",
                "type": "ADD",
                "lineNo": 44
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.CommonPager result"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.CommonPager"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Integer,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collections.singletonList(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collections.singletonList(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'result1'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.admin.page.CommonPager result"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.admin.page.CommonPager"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.admin.page.PageResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.admin.page.PageResultUtils.result(PageParameter,Supplier,Supplier)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.admin.page.PageParameter pageParameter"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collections.singletonList(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collections.singletonList(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'result1'"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "60ddbe4c0",
    "aCommit": "ecb8b8554",
    "changes": [
      {
        "bPath": "shenyu-metrics/shenyu-metrics-facade/src/main/java/org/apache/shenyu/metrics/facade/MetricsTrackerFacade.java",
        "aPath": "shenyu-metrics/shenyu-metrics-facade/src/main/java/org/apache/shenyu/metrics/facade/MetricsTrackerFacade.java",
        "name": "org.apache.shenyu.metrics.facade.MetricsTrackerFacade",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public final class MetricsTrackerFacade {",
                "type": "DELETE",
                "lineNo": 31
              }
            ],
            "targetChanges": [
              {
                "line": "public final class MetricsTrackerFacade implements AutoCloseable {",
                "type": "ADD",
                "lineNo": 33
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.metrics.facade.MetricsTrackerFacade"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.metrics.facade.MetricsTrackerFacade"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.AutoCloseable"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "metricsBootService.start(metricsConfig);",
                "type": "DELETE",
                "lineNo": 59
              }
            ],
            "targetChanges": [
              {
                "line": "MetricsRegister metricsRegister = ExtensionLoader.getExtensionLoader(MetricsRegister.class).getJoin(metricsConfig.getMetricsName());",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "Preconditions.checkNotNull(metricsRegister,",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "\"Can not find metrics register with metrics name : %s in metrics configuration.\", metricsConfig.getMetricsName());",
                "type": "ADD",
                "lineNo": 63
              },
              {
                "line": "metricsBootService.start(metricsConfig, metricsRegister);",
                "type": "ADD",
                "lineNo": 64
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.spi.MetricsBootService.start(MetricsConfig)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsBootService metricsBootService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.spi.MetricsBootService.start(MetricsConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig metricsConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister metricsRegister"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.spi.ExtensionLoader.getJoin(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.spi.ExtensionLoader.getExtensionLoader(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.spi.ExtensionLoader"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.spi.ExtensionLoader.getExtensionLoader(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.spi.ExtensionLoader.getJoin(String)"
              },
              {
                "type": "CtInvocation",
                "value": "getMetricsName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig metricsConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMetricsName()"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.base.Preconditions.checkNotNull(Object,String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.common.base.Preconditions"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.base.Preconditions.checkNotNull(Object,String,Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister metricsRegister"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Can not find metrics register with metrics name : %s in metrics configuration.'"
              },
              {
                "type": "CtInvocation",
                "value": "getMetricsName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig metricsConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMetricsName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.spi.MetricsBootService.start(MetricsConfig,MetricsRegister)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsBootService metricsBootService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.spi.MetricsBootService.start(MetricsConfig,MetricsRegister)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig metricsConfig"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister metricsRegister"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "public void close() {",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "stop();",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 92
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.metrics.facade.MetricsTrackerFacade.close()"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.facade.MetricsTrackerFacade.stop()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.facade.MetricsTrackerFacade.stop()"
              }
            ]
          },
          {
            "targetChanges": [],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-metrics/shenyu-metrics-prometheus/src/main/java/org/apache/shenyu/metrics/prometheus/register/PrometheusMetricsRegister.java",
        "aPath": "shenyu-metrics/shenyu-metrics-prometheus/src/main/java/org/apache/shenyu/metrics/prometheus/register/PrometheusMetricsRegister.java",
        "name": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "@Join",
                "type": "ADD",
                "lineNo": 34
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "org.apache.shenyu.spi.Join"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 40
              },
              {
                "line": "* Get instance prometheus metrics register.",
                "type": "DELETE",
                "lineNo": 41
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 42
              },
              {
                "line": "* @return the prometheus metrics register",
                "type": "DELETE",
                "lineNo": 43
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 44
              },
              {
                "line": "public static PrometheusMetricsRegister getInstance() {",
                "type": "DELETE",
                "lineNo": 45
              },
              {
                "line": "return PrometheusMetricsRegisterHolder.INSTANCE;",
                "type": "DELETE",
                "lineNo": 46
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 47
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.getInstance()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister INSTANCE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister$PrometheusMetricsRegisterHolder"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister INSTANCE"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public void counterIncrement(final String name, final String[] labelValues) {",
                "type": "DELETE",
                "lineNo": 83
              },
              {
                "line": "Counter counter = COUNTER_MAP.get(name);",
                "type": "DELETE",
                "lineNo": 84
              },
              {
                "line": "if (null != labelValues) {",
                "type": "DELETE",
                "lineNo": 85
              },
              {
                "line": "counter.labels(labelValues).inc();",
                "type": "DELETE",
                "lineNo": 86
              },
              {
                "line": "} else {",
                "type": "DELETE",
                "lineNo": 87
              },
              {
                "line": "counter.inc();",
                "type": "DELETE",
                "lineNo": 88
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 89
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 90
              },
              {
                "line": "@Override",
                "type": "DELETE",
                "lineNo": 92
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.counterIncrement(String,String[])"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String name"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "String[] labelValues"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              },
              {
                "type": "CtLocalVariable",
                "value": "io.prometheus.client.Counter counter"
              },
              {
                "type": "CtTypeReference",
                "value": "io.prometheus.client.Counter"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map COUNTER_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelValues"
              },
              {
                "type": "CtInvocation",
                "value": "inc()"
              },
              {
                "type": "CtInvocation",
                "value": "labels(java.lang.String[])"
              },
              {
                "type": "CtVariableRead",
                "value": "io.prometheus.client.Counter counter"
              },
              {
                "type": "CtExecutableReference",
                "value": "labels(java.lang.String[])"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelValues"
              },
              {
                "type": "CtExecutableReference",
                "value": "inc()"
              },
              {
                "type": "CtInvocation",
                "value": "inc()"
              },
              {
                "type": "CtVariableRead",
                "value": "io.prometheus.client.Counter counter"
              },
              {
                "type": "CtExecutableReference",
                "value": "inc()"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "private static class PrometheusMetricsRegisterHolder {",
                "type": "DELETE",
                "lineNo": 132
              },
              {
                "line": "private static final PrometheusMetricsRegister INSTANCE = new PrometheusMetricsRegister();",
                "type": "DELETE",
                "lineNo": 134
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 135
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister$PrometheusMetricsRegisterHolder"
              },
              {
                "type": "CtField",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister INSTANCE"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.PrometheusMetricsRegister()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-metrics/shenyu-metrics-prometheus/src/main/java/org/apache/shenyu/metrics/prometheus/service/PrometheusBootService.java",
        "aPath": "shenyu-metrics/shenyu-metrics-prometheus/src/main/java/org/apache/shenyu/metrics/prometheus/service/PrometheusBootService.java",
        "name": "org.apache.shenyu.metrics.prometheus.service.PrometheusBootService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public void start(final MetricsConfig metricsConfig) {",
                "type": "DELETE",
                "lineNo": 52
              }
            ],
            "targetChanges": [
              {
                "line": "public void start(final MetricsConfig metricsConfig, final MetricsRegister metricsRegister) {",
                "type": "ADD",
                "lineNo": 52
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.metrics.prometheus.service.PrometheusBootService.start(MetricsConfig)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig metricsConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.metrics.prometheus.service.PrometheusBootService.start(MetricsConfig,MetricsRegister)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig metricsConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister metricsRegister"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "MetricsReporter.register(PrometheusMetricsRegister.getInstance());",
                "type": "DELETE",
                "lineNo": 54
              }
            ],
            "targetChanges": [
              {
                "line": "MetricsReporter.register(metricsRegister);",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.register(MetricsRegister)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.register(MetricsRegister)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.getInstance()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.register(MetricsRegister)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.register(MetricsRegister)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister metricsRegister"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-metrics/shenyu-metrics-prometheus/src/test/java/org/apache/shenyu/metrics/prometheus/register/PrometheusMetricsRegisterTest.java",
        "aPath": "shenyu-metrics/shenyu-metrics-prometheus/src/test/java/org/apache/shenyu/metrics/prometheus/register/PrometheusMetricsRegisterTest.java",
        "name": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegisterTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private final PrometheusMetricsRegister prometheusMetricsRegister = PrometheusMetricsRegister.getInstance();",
                "type": "DELETE",
                "lineNo": 31
              }
            ],
            "targetChanges": [
              {
                "line": "private final PrometheusMetricsRegister prometheusMetricsRegister = new PrometheusMetricsRegister();",
                "type": "ADD",
                "lineNo": 32
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister prometheusMetricsRegister"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.getInstance()"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister prometheusMetricsRegister"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.PrometheusMetricsRegister()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "prometheusMetricsRegister.counterIncrement(requestTotal, labelNames);",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "prometheusMetricsRegister.counterIncrement(requestTotal, labelNames, 1);",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.counterIncrement(String,String[])"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister prometheusMetricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.counterIncrement(String,String[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String requestTotal"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelNames"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.counterIncrement(String,String[],long)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister prometheusMetricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.counterIncrement(String,String[],long)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String requestTotal"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelNames"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-metrics/shenyu-metrics-prometheus/src/test/java/org/apache/shenyu/metrics/prometheus/service/PrometheusBootServiceTest.java",
        "aPath": "shenyu-metrics/shenyu-metrics-prometheus/src/test/java/org/apache/shenyu/metrics/prometheus/service/PrometheusBootServiceTest.java",
        "name": "org.apache.shenyu.metrics.prometheus.service.PrometheusBootServiceTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "prometheusBootService.start(metricsConfig);",
                "type": "DELETE",
                "lineNo": 57
              }
            ],
            "targetChanges": [
              {
                "line": "prometheusBootService.start(metricsConfig, new PrometheusMetricsRegister());",
                "type": "ADD",
                "lineNo": 58
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.prometheus.service.PrometheusBootService.start(MetricsConfig)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.prometheus.service.PrometheusBootService prometheusBootService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.prometheus.service.PrometheusBootService.start(MetricsConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig metricsConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.prometheus.service.PrometheusBootService.start(MetricsConfig,MetricsRegister)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.prometheus.service.PrometheusBootService prometheusBootService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.prometheus.service.PrometheusBootService.start(MetricsConfig,MetricsRegister)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig metricsConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.PrometheusMetricsRegister()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-metrics/shenyu-metrics-spi/src/main/java/org/apache/shenyu/metrics/api/MetricsRegister.java",
        "aPath": "shenyu-metrics/shenyu-metrics-spi/src/main/java/org/apache/shenyu/metrics/spi/MetricsRegister.java",
        "name": "org.apache.shenyu.metrics.api.MetricsRegister",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "@SPI",
                "type": "ADD",
                "lineNo": 25
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "org.apache.shenyu.spi.SPI"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "* Counter increment.",
                "type": "DELETE",
                "lineNo": 53
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 54
              },
              {
                "line": "* @param name name",
                "type": "DELETE",
                "lineNo": 55
              },
              {
                "line": "* @param labelValues label values",
                "type": "DELETE",
                "lineNo": 56
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 57
              },
              {
                "line": "void counterIncrement(String name, String[] labelValues);",
                "type": "DELETE",
                "lineNo": 58
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 60
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.counterIncrement(String,String[])"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String name"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "String[] labelValues"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-metrics/shenyu-metrics-spi/src/main/java/org/apache/shenyu/metrics/reporter/MetricsReporter.java",
        "aPath": "shenyu-metrics/shenyu-metrics-spi/src/main/java/org/apache/shenyu/metrics/reporter/MetricsReporter.java",
        "name": "org.apache.shenyu.metrics.reporter.MetricsReporter",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (Objects.nonNull(metricsRegister)) {",
                "type": "DELETE",
                "lineNo": 73
              },
              {
                "line": "metricsRegister.registerCounter(name, labelNames, document);",
                "type": "DELETE",
                "lineNo": 74
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 75
              }
            ],
            "targetChanges": [
              {
                "line": "Optional.ofNullable(metricsRegister).ifPresent(register -> register.registerCounter(name, labelNames, document));",
                "type": "ADD",
                "lineNo": 74
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister metricsRegister"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.registerCounter(String,String[],String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.registerCounter(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelNames"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String document"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.registerCounter(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.registerCounter(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelNames"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String document"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "metricsRegister.registerCounter(name, null, document);",
                "type": "DELETE",
                "lineNo": 85
              }
            ],
            "targetChanges": [
              {
                "line": "registerCounter(name, null, document);",
                "type": "ADD",
                "lineNo": 84
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.registerCounter(String,String[],String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.registerCounter(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String document"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerCounter(String,String[],String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerCounter(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String document"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "metricsRegister.registerGauge(name, labelNames, document);",
                "type": "DELETE",
                "lineNo": 96
              }
            ],
            "targetChanges": [
              {
                "line": "Optional.ofNullable(metricsRegister).ifPresent(register -> register.registerGauge(name, labelNames, document));",
                "type": "ADD",
                "lineNo": 95
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.registerGauge(String,String[],String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.registerGauge(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelNames"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String document"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.registerGauge(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.registerGauge(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelNames"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String document"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "metricsRegister.registerGauge(name, null, document);",
                "type": "DELETE",
                "lineNo": 106
              }
            ],
            "targetChanges": [
              {
                "line": "registerGauge(name, null, document);",
                "type": "ADD",
                "lineNo": 105
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.registerGauge(String,String[],String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.registerGauge(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String document"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerGauge(String,String[],String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerGauge(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String document"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "metricsRegister.registerHistogram(name, labelNames, document);",
                "type": "DELETE",
                "lineNo": 117
              }
            ],
            "targetChanges": [
              {
                "line": "Optional.ofNullable(metricsRegister).ifPresent(register -> register.registerHistogram(name, labelNames, document));",
                "type": "ADD",
                "lineNo": 116
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.registerHistogram(String,String[],String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.registerHistogram(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelNames"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String document"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.registerHistogram(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.registerHistogram(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelNames"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String document"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "metricsRegister.registerHistogram(name, null, document);",
                "type": "DELETE",
                "lineNo": 127
              }
            ],
            "targetChanges": [
              {
                "line": "registerHistogram(name, null, document);",
                "type": "ADD",
                "lineNo": 126
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.registerHistogram(String,String[],String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.registerHistogram(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String document"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerHistogram(String,String[],String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerHistogram(String,String[],String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String document"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "metricsRegister.counterIncrement(name, labelValues);",
                "type": "DELETE",
                "lineNo": 137
              }
            ],
            "targetChanges": [
              {
                "line": "counterIncrement(name, labelValues, 1);",
                "type": "ADD",
                "lineNo": 136
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.counterIncrement(String,String[])"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.counterIncrement(String,String[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelValues"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String,String[],long)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String,String[],long)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelValues"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "counterIncrement(name, null);",
                "type": "DELETE",
                "lineNo": 146
              }
            ],
            "targetChanges": [
              {
                "line": "counterIncrement(name, null, 1);",
                "type": "ADD",
                "lineNo": 145
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String,String[])"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String,String[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String,String[],long)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String,String[],long)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "metricsRegister.counterIncrement(name, labelValues, count);",
                "type": "DELETE",
                "lineNo": 157
              }
            ],
            "targetChanges": [
              {
                "line": "Optional.ofNullable(metricsRegister).ifPresent(register -> register.counterIncrement(name, labelValues, count));",
                "type": "ADD",
                "lineNo": 156
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.counterIncrement(String,String[],long)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.counterIncrement(String,String[],long)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelValues"
              },
              {
                "type": "CtVariableRead",
                "value": "long count"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.counterIncrement(String,String[],long)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.counterIncrement(String,String[],long)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelValues"
              },
              {
                "type": "CtVariableRead",
                "value": "long count"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "metricsRegister.gaugeIncrement(name, labelValues);",
                "type": "DELETE",
                "lineNo": 167
              }
            ],
            "targetChanges": [
              {
                "line": "Optional.ofNullable(metricsRegister).ifPresent(register -> register.gaugeIncrement(name, labelValues));",
                "type": "ADD",
                "lineNo": 166
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.gaugeIncrement(String,String[])"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.gaugeIncrement(String,String[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelValues"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.gaugeIncrement(String,String[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.gaugeIncrement(String,String[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelValues"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "metricsRegister.gaugeDecrement(name, labelValues);",
                "type": "DELETE",
                "lineNo": 186
              }
            ],
            "targetChanges": [
              {
                "line": "Optional.ofNullable(metricsRegister).ifPresent(register -> register.gaugeDecrement(name, labelValues));",
                "type": "ADD",
                "lineNo": 185
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.gaugeDecrement(String,String[])"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.gaugeDecrement(String,String[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelValues"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.gaugeDecrement(String,String[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.gaugeDecrement(String,String[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelValues"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "metricsRegister.recordTime(name, labelValues, duration);",
                "type": "DELETE",
                "lineNo": 206
              }
            ],
            "targetChanges": [
              {
                "line": "Optional.ofNullable(metricsRegister).ifPresent(register -> register.recordTime(name, labelValues, duration));",
                "type": "ADD",
                "lineNo": 205
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.recordTime(String,String[],long)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.api.MetricsRegister.recordTime(String,String[],long)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelValues"
              },
              {
                "type": "CtVariableRead",
                "value": "long duration"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister metricsRegister"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.recordTime(String,String[],long)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister register"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister.recordTime(String,String[],long)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] labelValues"
              },
              {
                "type": "CtVariableRead",
                "value": "long duration"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-metrics/shenyu-metrics-spi/src/main/java/org/apache/shenyu/metrics/spi/MetricsBootService.java",
        "aPath": "shenyu-metrics/shenyu-metrics-spi/src/main/java/org/apache/shenyu/metrics/spi/MetricsBootService.java",
        "name": "org.apache.shenyu.metrics.spi.MetricsBootService",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* @param metricsRegister the metrics register",
                "type": "ADD",
                "lineNo": 33
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "void start(MetricsConfig metricsConfig);",
                "type": "DELETE",
                "lineNo": 34
              }
            ],
            "targetChanges": [
              {
                "line": "void start(MetricsConfig metricsConfig, MetricsRegister metricsRegister);",
                "type": "ADD",
                "lineNo": 35
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.metrics.spi.MetricsBootService.start(MetricsConfig)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig metricsConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.metrics.spi.MetricsBootService.start(MetricsConfig,MetricsRegister)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig metricsConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.config.MetricsConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister metricsRegister"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.spi.MetricsRegister"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-monitor/src/main/java/org/apache/shenyu/plugin/monitor/MonitorPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-monitor/src/main/java/org/apache/shenyu/plugin/monitor/MonitorPlugin.java",
        "name": "org.apache.shenyu.plugin.monitor.MonitorPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private static final String REQUEST_TOTAL = \"shenyu_request_total\";",
                "type": "DELETE",
                "lineNo": 42
              },
              {
                "line": "private static final String HTTP_REQUEST_TOTAL = \"shenyu_http_request_total\";",
                "type": "DELETE",
                "lineNo": 44
              },
              {
                "line": "private static final String EXECUTE_LATENCY_NAME = \"shenyu_execute_latency_millis\";",
                "type": "DELETE",
                "lineNo": 46
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "java.lang.String REQUEST_TOTAL"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu_request_total'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String HTTP_REQUEST_TOTAL"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu_http_request_total'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String EXECUTE_LATENCY_NAME"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu_execute_latency_millis'"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "MetricsReporter.register(new PrometheusMetricsRegister());",
                "type": "DELETE",
                "lineNo": 49
              },
              {
                "line": "MetricsReporter.registerCounter(REQUEST_TOTAL, \"shenyu request total count\");",
                "type": "DELETE",
                "lineNo": 50
              },
              {
                "line": "MetricsReporter.registerCounter(HTTP_REQUEST_TOTAL, new String[]{\"path\", \"type\"}, \"shenyu http request type total count\");",
                "type": "DELETE",
                "lineNo": 51
              },
              {
                "line": "MetricsReporter.registerHistogram(EXECUTE_LATENCY_NAME, \"the shenyu executor latency millis\");",
                "type": "DELETE",
                "lineNo": 52
              }
            ],
            "targetChanges": [
              {
                "line": "MetricsReporter.registerCounter(LabelNames.REQUEST_TOTAL, \"shenyu request total count\");",
                "type": "ADD",
                "lineNo": 43
              },
              {
                "line": "MetricsReporter.registerCounter(LabelNames.HTTP_REQUEST_TOTAL, new String[]{\"path\", \"type\"}, \"shenyu http request type total count\");",
                "type": "ADD",
                "lineNo": 44
              },
              {
                "line": "MetricsReporter.registerHistogram(LabelNames.EXECUTE_LATENCY_NAME, \"the shenyu executor latency millis\");",
                "type": "ADD",
                "lineNo": 45
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.register(MetricsRegister)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.register(MetricsRegister)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister.PrometheusMetricsRegister()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.metrics.prometheus.register.PrometheusMetricsRegister"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerCounter(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerCounter(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String REQUEST_TOTAL"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu request total count'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerCounter(String,String[],String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerCounter(String,String[],String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_REQUEST_TOTAL"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'path'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'type'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu http request type total count'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerHistogram(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerHistogram(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String EXECUTE_LATENCY_NAME"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'the shenyu executor latency millis'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerCounter(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerCounter(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String REQUEST_TOTAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.constant.LabelNames"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String REQUEST_TOTAL"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu request total count'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerCounter(String,String[],String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerCounter(String,String[],String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_REQUEST_TOTAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.constant.LabelNames"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String HTTP_REQUEST_TOTAL"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'path'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'type'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu http request type total count'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerHistogram(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.registerHistogram(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String EXECUTE_LATENCY_NAME"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.constant.LabelNames"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String EXECUTE_LATENCY_NAME"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'the shenyu executor latency millis'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "MetricsReporter.counterIncrement(REQUEST_TOTAL);",
                "type": "DELETE",
                "lineNo": 57
              },
              {
                "line": "MetricsReporter.counterIncrement(HTTP_REQUEST_TOTAL, new String[]{exchange.getRequest().getURI().getPath(), exchange.getRequest().getMethodValue()});",
                "type": "DELETE",
                "lineNo": 58
              }
            ],
            "targetChanges": [
              {
                "line": "MetricsReporter.counterIncrement(LabelNames.REQUEST_TOTAL);",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "MetricsReporter.counterIncrement(LabelNames.HTTP_REQUEST_TOTAL, new String[]{exchange.getRequest().getURI().getPath(), exchange.getRequest().getMethodValue()});",
                "type": "ADD",
                "lineNo": 51
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String REQUEST_TOTAL"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String,String[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String,String[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_REQUEST_TOTAL"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "getURI()"
              },
              {
                "type": "CtInvocation",
                "value": "getRequest()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRequest()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getURI()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "getMethodValue()"
              },
              {
                "type": "CtInvocation",
                "value": "getRequest()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRequest()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMethodValue()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String REQUEST_TOTAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.constant.LabelNames"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String REQUEST_TOTAL"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String,String[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.counterIncrement(String,String[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_REQUEST_TOTAL"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.constant.LabelNames"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String HTTP_REQUEST_TOTAL"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "getURI()"
              },
              {
                "type": "CtInvocation",
                "value": "getRequest()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRequest()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getURI()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "getMethodValue()"
              },
              {
                "type": "CtInvocation",
                "value": "getRequest()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRequest()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMethodValue()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "MetricsReporter.recordTime(EXECUTE_LATENCY_NAME, millisBetween);",
                "type": "DELETE",
                "lineNo": 89
              }
            ],
            "targetChanges": [
              {
                "line": "MetricsReporter.recordTime(LabelNames.EXECUTE_LATENCY_NAME, millisBetween);",
                "type": "ADD",
                "lineNo": 82
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.recordTime(String,long)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.recordTime(String,long)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String EXECUTE_LATENCY_NAME"
              },
              {
                "type": "CtVariableRead",
                "value": "long millisBetween"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.recordTime(String,long)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.metrics.reporter.MetricsReporter.recordTime(String,long)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String EXECUTE_LATENCY_NAME"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.metrics.constant.LabelNames"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String EXECUTE_LATENCY_NAME"
              },
              {
                "type": "CtVariableRead",
                "value": "long millisBetween"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-zookeeper/src/test/java/org/apache/shenyu/register/client/zookeeper/ZookeeperClientRegisterRepositoryTest.java",
        "aPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-zookeeper/src/test/java/org/apache/shenyu/register/client/zookeeper/ZookeeperClientRegisterRepositoryTest.java",
        "name": "org.apache.shenyu.register.client.zookeeper.ZookeeperClientRegisterRepositoryTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "zkServer = new TestingServer(2181, true);",
                "type": "DELETE",
                "lineNo": 60
              }
            ],
            "targetChanges": [
              {
                "line": "zkServer = new TestingServer(1181, true);",
                "type": "ADD",
                "lineNo": 60
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtFieldWrite",
                "value": "org.apache.curator.test.TestingServer zkServer"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.curator.test.TestingServer(int,boolean)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.curator.test.TestingServer"
              },
              {
                "type": "CtLiteral",
                "value": "int '2181'"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              }
            ],
            "targetElements": [
              {
                "type": "CtFieldWrite",
                "value": "org.apache.curator.test.TestingServer zkServer"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.curator.test.TestingServer(int,boolean)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.curator.test.TestingServer"
              },
              {
                "type": "CtLiteral",
                "value": "int '1181'"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "config.setServerLists(\"127.0.0.1:2181\");",
                "type": "DELETE",
                "lineNo": 178
              }
            ],
            "targetChanges": [
              {
                "line": "config.setServerLists(\"127.0.0.1:1181\");",
                "type": "ADD",
                "lineNo": 178
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "setServerLists(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "setServerLists(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1:2181'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setServerLists(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "setServerLists(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1:1181'"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "832f0bae9",
    "aCommit": "b017c784b",
    "changes": [
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/impl/UpstreamCheckService.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/impl/UpstreamCheckService.java",
        "name": "org.apache.shenyu.admin.service.impl.UpstreamCheckService",
        "hunks": [
          {
            "targetChanges": [],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "pluginDOList.stream().filter(Objects::nonNull).forEach(pluginDO -> {",
                "type": "DELETE",
                "lineNo": 306
              },
              {
                "line": "final List<SelectorDO> selectorDOList = selectorMapper.findByPluginId(pluginDO.getId());",
                "type": "DELETE",
                "lineNo": 307
              },
              {
                "line": "for (SelectorDO selectorDO : selectorDOList) {",
                "type": "DELETE",
                "lineNo": 308
              },
              {
                "line": "if (Objects.isNull(selectorDO) || StringUtils.isBlank(selectorDO.getHandle())) {",
                "type": "DELETE",
                "lineNo": 309
              },
              {
                "line": "continue;",
                "type": "DELETE",
                "lineNo": 310
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 311
              },
              {
                "line": "List<CommonUpstream> commonUpstreams = converterFactor.newInstance(pluginDO.getName()).convertUpstream(selectorDO.getHandle());",
                "type": "DELETE",
                "lineNo": 312
              },
              {
                "line": "if (CollectionUtils.isNotEmpty(commonUpstreams)) {",
                "type": "DELETE",
                "lineNo": 313
              },
              {
                "line": "UPSTREAM_MAP.put(selectorDO.getId(), commonUpstreams);",
                "type": "DELETE",
                "lineNo": 314
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 315
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 316
              },
              {
                "line": "});",
                "type": "DELETE",
                "lineNo": 317
              }
            ],
            "targetChanges": [
              {
                "line": "Map<String, String> pluginMap = pluginDOList.stream().filter(Objects::nonNull)",
                "type": "ADD",
                "lineNo": 309
              },
              {
                "line": ".collect(Collectors.toMap(PluginDO::getId, PluginDO::getName, (value1, value2) -> value1));",
                "type": "ADD",
                "lineNo": 310
              },
              {
                "line": "final List<SelectorDO> selectorDOList = selectorMapper.findByPluginIds(new ArrayList<>(pluginMap.keySet()));",
                "type": "ADD",
                "lineNo": 311
              },
              {
                "line": "Optional.ofNullable(selectorDOList).orElseGet(ArrayList::new).stream()",
                "type": "ADD",
                "lineNo": 312
              },
              {
                "line": ".filter(selectorDO -> Objects.nonNull(selectorDO) && StringUtils.isNotEmpty(selectorDO.getHandle()))",
                "type": "ADD",
                "lineNo": 313
              },
              {
                "line": ".forEach(selectorDO -> {",
                "type": "ADD",
                "lineNo": 314
              },
              {
                "line": "String name = pluginMap.get(selectorDO.getPluginId());",
                "type": "ADD",
                "lineNo": 315
              },
              {
                "line": "List<CommonUpstream> commonUpstreams = converterFactor.newInstance(name).convertUpstream(selectorDO.getHandle());",
                "type": "ADD",
                "lineNo": 316
              },
              {
                "line": "if (CollectionUtils.isNotEmpty(commonUpstreams)) {",
                "type": "ADD",
                "lineNo": 317
              },
              {
                "line": "UPSTREAM_MAP.put(selectorDO.getId(), commonUpstreams);",
                "type": "ADD",
                "lineNo": 318
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 319
              },
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 320
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.forEach(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List pluginDOList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.forEach(Consumer)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.admin.model.entity.PluginDO pluginDO"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List selectorDOList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.findByPluginId(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.findByPluginId(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.entity.BaseDO.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.PluginDO pluginDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.BaseDO.getId()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List selectorDOList"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.getHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.getHandle()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List commonUpstreams"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.converter.SelectorHandleConverter.convertUpstream(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.converter.SelectorHandleConverterFactor.newInstance(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.converter.SelectorHandleConverterFactor converterFactor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.converter.SelectorHandleConverterFactor.newInstance(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.entity.PluginDO.getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.PluginDO pluginDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.PluginDO.getName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.converter.SelectorHandleConverter.convertUpstream(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.getHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.getHandle()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.collections4.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List commonUpstreams"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.put(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map UPSTREAM_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.put(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.entity.BaseDO.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.BaseDO.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List commonUpstreams"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Map pluginMap"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List pluginDOList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toMap(Function,Function,BinaryOperator)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toMap(Function,Function,BinaryOperator)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.admin.model.entity.BaseDO.getId()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.BaseDO.getId()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.model.entity.PluginDO"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.admin.model.entity.PluginDO.getName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.PluginDO.getName()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.model.entity.PluginDO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String value1"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String value2"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String value1"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List selectorDOList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.findByPluginIds(List)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.findByPluginIds(List)"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList(Collection)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map pluginMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.keySet()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.forEach(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.orElseGet(Supplier)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List selectorDOList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.orElseGet(Supplier)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.getHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.getHandle()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.forEach(Consumer)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String name"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map pluginMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.getPluginId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.getPluginId()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List commonUpstreams"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.converter.SelectorHandleConverter.convertUpstream(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.converter.SelectorHandleConverterFactor.newInstance(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.converter.SelectorHandleConverterFactor converterFactor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.converter.SelectorHandleConverterFactor.newInstance(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.converter.SelectorHandleConverter.convertUpstream(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.getHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.getHandle()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.collections4.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List commonUpstreams"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.put(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map UPSTREAM_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.put(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.entity.BaseDO.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.BaseDO.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List commonUpstreams"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/service/UpstreamCheckServiceTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/service/UpstreamCheckServiceTest.java",
        "name": "org.apache.shenyu.admin.service.UpstreamCheckServiceTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(selectorMapper.findByPluginId(anyString())).thenReturn(Lists.newArrayList(selectorDOWithUrlError, selectorDOWithUrlReachable));",
                "type": "DELETE",
                "lineNo": 230
              }
            ],
            "targetChanges": [
              {
                "line": "when(selectorMapper.findByPluginIds(anyList())).thenReturn(Lists.newArrayList(selectorDOWithUrlError, selectorDOWithUrlReachable));",
                "type": "ADD",
                "lineNo": 230
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.util.ArrayList)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.findByPluginId(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.findByPluginId(String)"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.util.ArrayList)"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.collect.Lists.newArrayList(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.common.collect.Lists"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.collect.Lists.newArrayList(Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDOWithUrlError"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDOWithUrlReachable"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.util.ArrayList)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.findByPluginIds(List)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.findByPluginIds(List)"
              },
              {
                "type": "CtInvocation",
                "value": "anyList()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyList()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.util.ArrayList)"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.collect.Lists.newArrayList(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.common.collect.Lists"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.collect.Lists.newArrayList(Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDOWithUrlError"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDOWithUrlReachable"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "4cae85c2e",
    "aCommit": "733bfae7d",
    "changes": [
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/properties/SecretProperties.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/properties/SecretProperties.java",
        "name": "org.apache.shenyu.admin.config.properties.SecretProperties",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "private String iv;",
                "type": "ADD",
                "lineNo": 36
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/controller/DashboardUserController.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/controller/DashboardUserController.java",
        "name": "org.apache.shenyu.admin.controller.DashboardUserController",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "String iv = secretProperties.getIv();",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getIv()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.properties.SecretProperties secretProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getIv()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "commonPager.getDataList().forEach(item -> item.setPassword(AesUtils.aesDecryption(item.getPassword(), key)));",
                "type": "DELETE",
                "lineNo": 75
              }
            ],
            "targetChanges": [
              {
                "line": "commonPager.getDataList()",
                "type": "ADD",
                "lineNo": 76
              },
              {
                "line": ".forEach(item -> item.setPassword(AesUtils.aesDecryption(item.getPassword(), key, iv)));",
                "type": "ADD",
                "lineNo": 77
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "forEach()"
              },
              {
                "type": "CtInvocation",
                "value": "getDataList()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.page.CommonPager commonPager"
              },
              {
                "type": "CtExecutableReference",
                "value": "getDataList()"
              },
              {
                "type": "CtExecutableReference",
                "value": "forEach()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> item"
              },
              {
                "type": "CtInvocation",
                "value": "setPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> item"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> item"
              },
              {
                "type": "CtExecutableReference",
                "value": "setPassword()"
              },
              {
                "type": "CtInvocation",
                "value": "aesDecryption()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "aesDecryption()"
              },
              {
                "type": "CtInvocation",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> item"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> item"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String key"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "forEach()"
              },
              {
                "type": "CtInvocation",
                "value": "getDataList()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.page.CommonPager commonPager"
              },
              {
                "type": "CtExecutableReference",
                "value": "getDataList()"
              },
              {
                "type": "CtExecutableReference",
                "value": "forEach()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> item"
              },
              {
                "type": "CtInvocation",
                "value": "setPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> item"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> item"
              },
              {
                "type": "CtExecutableReference",
                "value": "setPassword()"
              },
              {
                "type": "CtInvocation",
                "value": "aesDecryption()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "aesDecryption()"
              },
              {
                "type": "CtInvocation",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> item"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> item"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String iv"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "String iv = secretProperties.getIv();",
                "type": "ADD",
                "lineNo": 93
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getIv()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.properties.SecretProperties secretProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getIv()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "item.setPassword(AesUtils.aesDecryption(item.getPassword(), key));",
                "type": "DELETE",
                "lineNo": 93
              }
            ],
            "targetChanges": [
              {
                "line": "item.setPassword(AesUtils.aesDecryption(item.getPassword(), key, iv));",
                "type": "ADD",
                "lineNo": 96
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "setPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.vo.DashboardUserEditVO item"
              },
              {
                "type": "CtExecutableReference",
                "value": "setPassword()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.vo.DashboardUserEditVO item"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.vo.DashboardUserEditVO item"
              },
              {
                "type": "CtExecutableReference",
                "value": "setPassword()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.vo.DashboardUserEditVO item"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "String iv = secretProperties.getKey();",
                "type": "ADD",
                "lineNo": 110
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getKey()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.properties.SecretProperties secretProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getKey()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "item.setPassword(AesUtils.aesEncryption(item.getPassword(), key));",
                "type": "DELETE",
                "lineNo": 108
              }
            ],
            "targetChanges": [
              {
                "line": "item.setPassword(AesUtils.aesEncryption(item.getPassword(), key, iv));",
                "type": "ADD",
                "lineNo": 112
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "setPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.DashboardUserDTO item"
              },
              {
                "type": "CtExecutableReference",
                "value": "setPassword()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.DashboardUserDTO item"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.DashboardUserDTO item"
              },
              {
                "type": "CtExecutableReference",
                "value": "setPassword()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.DashboardUserDTO item"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "String iv = secretProperties.getIv();",
                "type": "ADD",
                "lineNo": 128
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getIv()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.properties.SecretProperties secretProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getIv()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "dashboardUserDTO.setPassword(AesUtils.aesEncryption(dashboardUserDTO.getPassword(), key));",
                "type": "DELETE",
                "lineNo": 125
              }
            ],
            "targetChanges": [
              {
                "line": "dashboardUserDTO.setPassword(AesUtils.aesEncryption(dashboardUserDTO.getPassword(), key, iv));",
                "type": "ADD",
                "lineNo": 130
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "setPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.DashboardUserDTO dashboardUserDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "setPassword()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.DashboardUserDTO dashboardUserDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.DashboardUserDTO dashboardUserDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "setPassword()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.DashboardUserDTO dashboardUserDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/impl/DashboardUserServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/impl/DashboardUserServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.impl.DashboardUserServiceImpl",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "String iv = secretProperties.getIv();",
                "type": "ADD",
                "lineNo": 201
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getIv()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.properties.SecretProperties secretProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getIv()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".password(AesUtils.aesEncryption(password, key))",
                "type": "DELETE",
                "lineNo": 211
              }
            ],
            "targetChanges": [
              {
                "line": ".password(AesUtils.aesEncryption(password, key, iv))",
                "type": "ADD",
                "lineNo": 212
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "password(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String password"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "password(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String password"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "String iv = secretProperties.getIv();",
                "type": "ADD",
                "lineNo": 233
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getIv()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.properties.SecretProperties secretProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getIv()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".password(AesUtils.aesEncryption(dashboardUserVO.getPassword(), key))",
                "type": "DELETE",
                "lineNo": 237
              }
            ],
            "targetChanges": [
              {
                "line": ".password(AesUtils.aesEncryption(dashboardUserVO.getPassword(), key, iv))",
                "type": "ADD",
                "lineNo": 239
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "password()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.vo.DashboardUserVO dashboardUserVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "password()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.vo.DashboardUserVO dashboardUserVO"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "dashboardUserVO = findByQuery(userName, AesUtils.aesEncryption(password, key));",
                "type": "DELETE",
                "lineNo": 242
              }
            ],
            "targetChanges": [
              {
                "line": "dashboardUserVO = findByQuery(userName, AesUtils.aesEncryption(password, key, iv));",
                "type": "ADD",
                "lineNo": 244
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.admin.model.vo.DashboardUserVO dashboardUserVO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.impl.DashboardUserServiceImpl.findByQuery(String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.impl.DashboardUserServiceImpl.findByQuery(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String userName"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String password"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.admin.model.vo.DashboardUserVO dashboardUserVO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.impl.DashboardUserServiceImpl.findByQuery(String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.impl.DashboardUserServiceImpl.findByQuery(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String userName"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String password"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/utils/AesUtils.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/utils/AesUtils.java",
        "name": "org.apache.shenyu.admin.utils.AesUtils",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* @return  the string",
                "type": "DELETE",
                "lineNo": 32
              }
            ],
            "targetChanges": [
              {
                "line": "* @param iv     iv",
                "type": "ADD",
                "lineNo": 32
              },
              {
                "line": "* @return the string",
                "type": "ADD",
                "lineNo": 33
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public static String aesEncryption(final String src, final String aesKey) {",
                "type": "DELETE",
                "lineNo": 34
              }
            ],
            "targetChanges": [
              {
                "line": "public static String aesEncryption(final String src, final String aesKey, final String iv) {",
                "type": "ADD",
                "lineNo": 35
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String src"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String src"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return CipherUtils.encryptHex(src, aesKey);",
                "type": "DELETE",
                "lineNo": 36
              }
            ],
            "targetChanges": [
              {
                "line": "return CipherUtils.encryptHex(src, aesKey, iv);",
                "type": "ADD",
                "lineNo": 37
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.encryptHex(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.encryptHex(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String src"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String aesKey"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.encryptHex(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.encryptHex(String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String src"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "* b",
                "type": "DELETE",
                "lineNo": 43
              }
            ],
            "targetChanges": [
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 44
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "* @param iv     iv",
                "type": "ADD",
                "lineNo": 47
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public static String aesDecryption(final String src, final String aesKey) {",
                "type": "DELETE",
                "lineNo": 48
              }
            ],
            "targetChanges": [
              {
                "line": "public static String aesDecryption(final String src, final String aesKey, final String iv) {",
                "type": "ADD",
                "lineNo": 50
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String src"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String src"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return CipherUtils.decryptStr(src, aesKey);",
                "type": "DELETE",
                "lineNo": 50
              }
            ],
            "targetChanges": [
              {
                "line": "return CipherUtils.decryptStr(src, aesKey, iv);",
                "type": "ADD",
                "lineNo": 52
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String src"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String aesKey"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String src"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/utils/CipherUtils.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/utils/CipherUtils.java",
        "name": "org.apache.shenyu.admin.utils.CipherUtils",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 38
              },
              {
                "line": "*  Check if the packet is a multiple of 16.",
                "type": "DELETE",
                "lineNo": 39
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 40
              },
              {
                "line": "* @param srcBytes the bytes",
                "type": "DELETE",
                "lineNo": 41
              },
              {
                "line": "* @param blockSize block size",
                "type": "DELETE",
                "lineNo": 42
              },
              {
                "line": "* @return the bytes",
                "type": "DELETE",
                "lineNo": 43
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 44
              },
              {
                "line": "private static byte[] addZeroPadding(final byte[] srcBytes, final int blockSize) {",
                "type": "DELETE",
                "lineNo": 45
              },
              {
                "line": "byte[] plainText;",
                "type": "DELETE",
                "lineNo": 46
              },
              {
                "line": "int length = srcBytes.length;",
                "type": "DELETE",
                "lineNo": 47
              },
              {
                "line": "if (length % blockSize != 0) {",
                "type": "DELETE",
                "lineNo": 48
              },
              {
                "line": "length = length + (blockSize - (length % blockSize));",
                "type": "DELETE",
                "lineNo": 49
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 50
              },
              {
                "line": "plainText = new byte[length];",
                "type": "DELETE",
                "lineNo": 51
              },
              {
                "line": "System.arraycopy(srcBytes, 0, plainText, 0, srcBytes.length);",
                "type": "DELETE",
                "lineNo": 52
              },
              {
                "line": "for (int i = srcBytes.length; i < length; i++) {",
                "type": "DELETE",
                "lineNo": 53
              },
              {
                "line": "plainText[i] = '\\0';",
                "type": "DELETE",
                "lineNo": 54
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 55
              },
              {
                "line": "return plainText;",
                "type": "DELETE",
                "lineNo": 56
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 57
              }
            ],
            "targetChanges": [
              {
                "line": "public static final String AES_CBC_PKCS_5_PADDING = \"AES/CBC/PKCS5Padding\";",
                "type": "ADD",
                "lineNo": 39
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.addZeroPadding(byte[],int)"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtParameter",
                "value": "byte[] srcBytes"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtParameter",
                "value": "int blockSize"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtLocalVariable",
                "value": "byte[] plainText"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtLocalVariable",
                "value": "int length"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtFieldRead",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] srcBytes"
              },
              {
                "type": "CtParameterReference",
                "value": "byte[] srcBytes"
              },
              {
                "type": "CtVariableRead",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "int blockSize"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtVariableWrite",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "int blockSize"
              },
              {
                "type": "CtVariableRead",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "int blockSize"
              },
              {
                "type": "CtVariableWrite",
                "value": "byte[] plainText"
              },
              {
                "type": "CtNewArray",
                "value": "byte[]"
              },
              {
                "type": "CtTypeReference",
                "value": "byte"
              },
              {
                "type": "CtVariableRead",
                "value": "int length"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.System.arraycopy(Object,int,Object,int,int)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.System"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.System.arraycopy(Object,int,Object,int,int)"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] srcBytes"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] plainText"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtFieldRead",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] srcBytes"
              },
              {
                "type": "CtParameterReference",
                "value": "byte[] srcBytes"
              },
              {
                "type": "CtLocalVariable",
                "value": "int i"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtFieldRead",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] srcBytes"
              },
              {
                "type": "CtParameterReference",
                "value": "byte[] srcBytes"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtVariableRead",
                "value": "int length"
              },
              {
                "type": "CtVariableWrite",
                "value": "int i"
              },
              {
                "type": "CtArrayWrite",
                "value": "byte[] plainText"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] plainText"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtLiteral",
                "value": "char '\u0000'"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] plainText"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String AES_CBC_PKCS_5_PADDING"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'AES/CBC/PKCS5Padding'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "*  delete zero padding.",
                "type": "DELETE",
                "lineNo": 60
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 61
              },
              {
                "line": "* @param src the deleteZeroPadding source",
                "type": "DELETE",
                "lineNo": 62
              },
              {
                "line": "* @return the bytes",
                "type": "DELETE",
                "lineNo": 63
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 64
              },
              {
                "line": "private static byte[] deleteZeroPadding(final byte[] src) {",
                "type": "DELETE",
                "lineNo": 65
              },
              {
                "line": "int length = 0;",
                "type": "DELETE",
                "lineNo": 66
              },
              {
                "line": "byte[] plainText = null;",
                "type": "DELETE",
                "lineNo": 67
              },
              {
                "line": "if (src.length > 0) {",
                "type": "DELETE",
                "lineNo": 68
              },
              {
                "line": "for (int i = src.length - 1; i > 0; i--) {",
                "type": "DELETE",
                "lineNo": 69
              },
              {
                "line": "if (src[i] != '\\0') {",
                "type": "DELETE",
                "lineNo": 70
              },
              {
                "line": "length = i;",
                "type": "DELETE",
                "lineNo": 71
              },
              {
                "line": "break;",
                "type": "DELETE",
                "lineNo": 72
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 73
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 74
              },
              {
                "line": "plainText = new byte[length + 1];",
                "type": "DELETE",
                "lineNo": 75
              },
              {
                "line": "System.arraycopy(src, 0, plainText, 0, length + 1);",
                "type": "DELETE",
                "lineNo": 76
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 77
              },
              {
                "line": "return plainText;",
                "type": "DELETE",
                "lineNo": 78
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 79
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 81
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.deleteZeroPadding(byte[])"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtParameter",
                "value": "byte[] src"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtLocalVariable",
                "value": "int length"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtLocalVariable",
                "value": "byte[] plainText"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtFieldRead",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] src"
              },
              {
                "type": "CtParameterReference",
                "value": "byte[] src"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtLocalVariable",
                "value": "int i"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtFieldRead",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] src"
              },
              {
                "type": "CtParameterReference",
                "value": "byte[] src"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtVariableWrite",
                "value": "int i"
              },
              {
                "type": "CtArrayRead",
                "value": "byte[] src"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] src"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtLiteral",
                "value": "char '\u0000'"
              },
              {
                "type": "CtVariableWrite",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtVariableWrite",
                "value": "byte[] plainText"
              },
              {
                "type": "CtNewArray",
                "value": "byte[]"
              },
              {
                "type": "CtTypeReference",
                "value": "byte"
              },
              {
                "type": "CtVariableRead",
                "value": "int length"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.System.arraycopy(Object,int,Object,int,int)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.System"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.System.arraycopy(Object,int,Object,int,int)"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] src"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] plainText"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtVariableRead",
                "value": "int length"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] plainText"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* @param mode encryption/decryption",
                "type": "DELETE",
                "lineNo": 85
              },
              {
                "line": "* @param aesKey key",
                "type": "DELETE",
                "lineNo": 86
              }
            ],
            "targetChanges": [
              {
                "line": "* @param mode    encryption/decryption",
                "type": "ADD",
                "lineNo": 45
              },
              {
                "line": "* @param aesKey  key",
                "type": "ADD",
                "lineNo": 46
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "private static byte[] cipherTool(final byte[] content, final int mode, final String aesKey) {",
                "type": "DELETE",
                "lineNo": 89
              }
            ],
            "targetChanges": [
              {
                "line": "private static byte[] cipherTool(final byte[] content, final int mode, final String aesKey,",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "final String iv) {",
                "type": "ADD",
                "lineNo": 50
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.cipherTool(byte[],int,String)"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtParameter",
                "value": "byte[] content"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtParameter",
                "value": "int mode"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.cipherTool(byte[],int,String,String)"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtParameter",
                "value": "byte[] content"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtParameter",
                "value": "int mode"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "SecretKeySpec keySpec = new SecretKeySpec(aesKey.getBytes(StandardCharsets.UTF_8), \"AES\");",
                "type": "DELETE",
                "lineNo": 92
              },
              {
                "line": "Cipher cipher = Cipher.getInstance(\"AES/ECB/NoPadding\");",
                "type": "DELETE",
                "lineNo": 93
              },
              {
                "line": "cipher.init(mode, keySpec);",
                "type": "DELETE",
                "lineNo": 94
              },
              {
                "line": "if (mode == Cipher.ENCRYPT_MODE) {",
                "type": "DELETE",
                "lineNo": 95
              },
              {
                "line": "plainText = addZeroPadding(content, cipher.getBlockSize());",
                "type": "DELETE",
                "lineNo": 96
              },
              {
                "line": "} else {",
                "type": "DELETE",
                "lineNo": 97
              },
              {
                "line": "plainText = content;",
                "type": "DELETE",
                "lineNo": 98
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 99
              }
            ],
            "targetChanges": [
              {
                "line": "SecretKeySpec keySpec = new SecretKeySpec(aesKey.getBytes(StandardCharsets.UTF_8),",
                "type": "ADD",
                "lineNo": 53
              },
              {
                "line": "\"AES\");",
                "type": "ADD",
                "lineNo": 54
              },
              {
                "line": "final Cipher cipher = Cipher.getInstance(AES_CBC_PKCS_5_PADDING);",
                "type": "ADD",
                "lineNo": 55
              },
              {
                "line": "IvParameterSpec ivSpec = new IvParameterSpec(iv.getBytes(StandardCharsets.UTF_8));",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "cipher.init(mode, keySpec, ivSpec);",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "plainText = content;",
                "type": "ADD",
                "lineNo": 58
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "javax.crypto.spec.SecretKeySpec keySpec"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.spec.SecretKeySpec"
              },
              {
                "type": "CtConstructorCall",
                "value": "javax.crypto.spec.SecretKeySpec.SecretKeySpec(byte[],String)"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.spec.SecretKeySpec"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.getBytes(Charset)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.getBytes(Charset)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.nio.charset.StandardCharsets"
              },
              {
                "type": "CtFieldReference",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'AES'"
              },
              {
                "type": "CtLocalVariable",
                "value": "javax.crypto.Cipher cipher"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.Cipher"
              },
              {
                "type": "CtInvocation",
                "value": "javax.crypto.Cipher.getInstance(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "javax.crypto.Cipher"
              },
              {
                "type": "CtExecutableReference",
                "value": "javax.crypto.Cipher.getInstance(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'AES/ECB/NoPadding'"
              },
              {
                "type": "CtInvocation",
                "value": "javax.crypto.Cipher.init(int,Key)"
              },
              {
                "type": "CtVariableRead",
                "value": "javax.crypto.Cipher cipher"
              },
              {
                "type": "CtExecutableReference",
                "value": "javax.crypto.Cipher.init(int,Key)"
              },
              {
                "type": "CtVariableRead",
                "value": "int mode"
              },
              {
                "type": "CtVariableRead",
                "value": "javax.crypto.spec.SecretKeySpec keySpec"
              },
              {
                "type": "CtVariableRead",
                "value": "int mode"
              },
              {
                "type": "CtFieldRead",
                "value": "int ENCRYPT_MODE"
              },
              {
                "type": "CtTypeAccess",
                "value": "javax.crypto.Cipher"
              },
              {
                "type": "CtFieldReference",
                "value": "int ENCRYPT_MODE"
              },
              {
                "type": "CtVariableWrite",
                "value": "byte[] plainText"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.addZeroPadding(byte[],int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.addZeroPadding(byte[],int)"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] content"
              },
              {
                "type": "CtInvocation",
                "value": "javax.crypto.Cipher.getBlockSize()"
              },
              {
                "type": "CtVariableRead",
                "value": "javax.crypto.Cipher cipher"
              },
              {
                "type": "CtExecutableReference",
                "value": "javax.crypto.Cipher.getBlockSize()"
              },
              {
                "type": "CtVariableWrite",
                "value": "byte[] plainText"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] content"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "javax.crypto.spec.SecretKeySpec keySpec"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.spec.SecretKeySpec"
              },
              {
                "type": "CtConstructorCall",
                "value": "javax.crypto.spec.SecretKeySpec.SecretKeySpec(byte[],String)"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.spec.SecretKeySpec"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.getBytes(Charset)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.getBytes(Charset)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.nio.charset.StandardCharsets"
              },
              {
                "type": "CtFieldReference",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'AES'"
              },
              {
                "type": "CtLocalVariable",
                "value": "javax.crypto.Cipher cipher"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.Cipher"
              },
              {
                "type": "CtInvocation",
                "value": "javax.crypto.Cipher.getInstance(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "javax.crypto.Cipher"
              },
              {
                "type": "CtExecutableReference",
                "value": "javax.crypto.Cipher.getInstance(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_CBC_PKCS_5_PADDING"
              },
              {
                "type": "CtLocalVariable",
                "value": "javax.crypto.spec.IvParameterSpec ivSpec"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.spec.IvParameterSpec"
              },
              {
                "type": "CtConstructorCall",
                "value": "javax.crypto.spec.IvParameterSpec.IvParameterSpec(byte[])"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.spec.IvParameterSpec"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.getBytes(Charset)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.getBytes(Charset)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.nio.charset.StandardCharsets"
              },
              {
                "type": "CtFieldReference",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtInvocation",
                "value": "javax.crypto.Cipher.init(int,Key,AlgorithmParameterSpec)"
              },
              {
                "type": "CtVariableRead",
                "value": "javax.crypto.Cipher cipher"
              },
              {
                "type": "CtExecutableReference",
                "value": "javax.crypto.Cipher.init(int,Key,AlgorithmParameterSpec)"
              },
              {
                "type": "CtVariableRead",
                "value": "int mode"
              },
              {
                "type": "CtVariableRead",
                "value": "javax.crypto.spec.SecretKeySpec keySpec"
              },
              {
                "type": "CtVariableRead",
                "value": "javax.crypto.spec.IvParameterSpec ivSpec"
              },
              {
                "type": "CtVariableWrite",
                "value": "byte[] plainText"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] content"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "} catch (NoSuchAlgorithmException | InvalidKeyException | NoSuchPaddingException | BadPaddingException | IllegalBlockSizeException e) {",
                "type": "DELETE",
                "lineNo": 101
              }
            ],
            "targetChanges": [
              {
                "line": "} catch (NoSuchAlgorithmException | InvalidKeyException | NoSuchPaddingException | BadPaddingException",
                "type": "ADD",
                "lineNo": 60
              },
              {
                "line": "| IllegalBlockSizeException | InvalidAlgorithmParameterException e) {",
                "type": "ADD",
                "lineNo": 61
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtCatchVariable",
                "value": "java.security.NoSuchAlgorithmException | java.security.InvalidKeyException | javax.crypto.NoSuchPaddingException | javax.crypto.BadPaddingException | javax.crypto.IllegalBlockSizeException e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.security.NoSuchAlgorithmException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.security.InvalidKeyException"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.NoSuchPaddingException"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.BadPaddingException"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.IllegalBlockSizeException"
              }
            ],
            "targetElements": [
              {
                "type": "CtCatchVariable",
                "value": "java.security.NoSuchAlgorithmException | java.security.InvalidKeyException | javax.crypto.NoSuchPaddingException | javax.crypto.BadPaddingException | javax.crypto.IllegalBlockSizeException | java.security.InvalidAlgorithmParameterException e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.security.NoSuchAlgorithmException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.security.InvalidKeyException"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.NoSuchPaddingException"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.BadPaddingException"
              },
              {
                "type": "CtTypeReference",
                "value": "javax.crypto.IllegalBlockSizeException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.security.InvalidAlgorithmParameterException"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "* @param src  source",
                "type": "DELETE",
                "lineNo": 109
              }
            ],
            "targetChanges": [
              {
                "line": "* @param src    source",
                "type": "ADD",
                "lineNo": 69
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "* @param iv     iv",
                "type": "ADD",
                "lineNo": 71
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public static String encryptHex(final String src, final String aesKey) {",
                "type": "DELETE",
                "lineNo": 113
              }
            ],
            "targetChanges": [
              {
                "line": "public static String encryptHex(final String src, final String aesKey, final String iv) {",
                "type": "ADD",
                "lineNo": 74
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.encryptHex(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String src"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.encryptHex(String,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String src"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "byte[] result = cipherTool(byteContent, Cipher.ENCRYPT_MODE, aesKey);",
                "type": "DELETE",
                "lineNo": 117
              }
            ],
            "targetChanges": [
              {
                "line": "byte[] result = cipherTool(byteContent, Cipher.ENCRYPT_MODE, aesKey, iv);",
                "type": "ADD",
                "lineNo": 78
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "byte[] result"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.cipherTool(byte[],int,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.cipherTool(byte[],int,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] byteContent"
              },
              {
                "type": "CtFieldRead",
                "value": "int ENCRYPT_MODE"
              },
              {
                "type": "CtTypeAccess",
                "value": "javax.crypto.Cipher"
              },
              {
                "type": "CtFieldReference",
                "value": "int ENCRYPT_MODE"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String aesKey"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "byte[] result"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.cipherTool(byte[],int,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.cipherTool(byte[],int,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] byteContent"
              },
              {
                "type": "CtFieldRead",
                "value": "int ENCRYPT_MODE"
              },
              {
                "type": "CtTypeAccess",
                "value": "javax.crypto.Cipher"
              },
              {
                "type": "CtFieldReference",
                "value": "int ENCRYPT_MODE"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "* @param src source",
                "type": "DELETE",
                "lineNo": 128
              }
            ],
            "targetChanges": [
              {
                "line": "* @param src    source",
                "type": "ADD",
                "lineNo": 89
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "* @param iv     iv",
                "type": "ADD",
                "lineNo": 91
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public static String decryptStr(final String src, final String aesKey) {",
                "type": "DELETE",
                "lineNo": 132
              }
            ],
            "targetChanges": [
              {
                "line": "public static String decryptStr(final String src, final String aesKey, final String iv) {",
                "type": "ADD",
                "lineNo": 94
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String src"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String src"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "byte[] result = cipherTool(byteContent, Cipher.DECRYPT_MODE, aesKey);",
                "type": "DELETE",
                "lineNo": 136
              },
              {
                "line": "return new String(deleteZeroPadding(result));",
                "type": "DELETE",
                "lineNo": 137
              }
            ],
            "targetChanges": [
              {
                "line": "byte[] result = cipherTool(byteContent, Cipher.DECRYPT_MODE, aesKey, iv);",
                "type": "ADD",
                "lineNo": 98
              },
              {
                "line": "return new String(result);",
                "type": "ADD",
                "lineNo": 99
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "byte[] result"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.cipherTool(byte[],int,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.cipherTool(byte[],int,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] byteContent"
              },
              {
                "type": "CtFieldRead",
                "value": "int DECRYPT_MODE"
              },
              {
                "type": "CtTypeAccess",
                "value": "javax.crypto.Cipher"
              },
              {
                "type": "CtFieldReference",
                "value": "int DECRYPT_MODE"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.lang.String.String(byte[])"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.deleteZeroPadding(byte[])"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.deleteZeroPadding(byte[])"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] result"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "byte[] result"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "byte[]"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.cipherTool(byte[],int,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.cipherTool(byte[],int,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] byteContent"
              },
              {
                "type": "CtFieldRead",
                "value": "int DECRYPT_MODE"
              },
              {
                "type": "CtTypeAccess",
                "value": "javax.crypto.Cipher"
              },
              {
                "type": "CtFieldReference",
                "value": "int DECRYPT_MODE"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String aesKey"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.lang.String.String(byte[])"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtVariableRead",
                "value": "byte[] result"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/controller/DashboardUserControllerTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/controller/DashboardUserControllerTest.java",
        "name": "org.apache.shenyu.admin.controller.DashboardUserControllerTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "\"jHcpKkiDbbQh7W7hh8yQSA==\",",
                "type": "DELETE",
                "lineNo": 73
              }
            ],
            "targetChanges": [
              {
                "line": "\"bbiB8zbUo3z3oA0VqEB/IA==\",",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'jHcpKkiDbbQh7W7hh8yQSA=='"
              }
            ],
            "targetElements": [
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'bbiB8zbUo3z3oA0VqEB/IA=='"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "secretProperties.setIv(\"6075877187097700\");",
                "type": "ADD",
                "lineNo": 86
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setIv(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.config.properties.SecretProperties secretProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "setIv(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '6075877187097700'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/mapper/DashboardUserMapperTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/mapper/DashboardUserMapperTest.java",
        "name": "org.apache.shenyu.admin.mapper.DashboardUserMapperTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "String iv = \"6075877187097700\";",
                "type": "ADD",
                "lineNo": 165
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '6075877187097700'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".password(AesUtils.aesEncryption(\"123456\", aseKey))",
                "type": "DELETE",
                "lineNo": 167
              }
            ],
            "targetChanges": [
              {
                "line": ".password(AesUtils.aesEncryption(\"123456\", aseKey, iv))",
                "type": "ADD",
                "lineNo": 171
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "password(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '123456'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String aseKey"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "password(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '123456'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String aseKey"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/service/DashboardUserServiceTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/service/DashboardUserServiceTest.java",
        "name": "org.apache.shenyu.admin.service.DashboardUserServiceTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "String key = \"key1234561234561\";",
                "type": "DELETE",
                "lineNo": 172
              }
            ],
            "targetChanges": [
              {
                "line": "String key = \"2095132720951327\";",
                "type": "ADD",
                "lineNo": 172
              },
              {
                "line": "String iv = \"6075877187097700\";",
                "type": "ADD",
                "lineNo": 173
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String key"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'key1234561234561'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String key"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2095132720951327'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '6075877187097700'"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "when(secretProperties.getIv()).thenReturn(iv, iv);",
                "type": "ADD",
                "lineNo": 175
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "getIv()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.properties.SecretProperties secretProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getIv()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String iv"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/utils/AesUtilsTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/utils/AesUtilsTest.java",
        "name": "org.apache.shenyu.admin.utils.AesUtilsTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "private static final String IV = \"6075877187097700\";",
                "type": "ADD",
                "lineNo": 33
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String IV"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '6075877187097700'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(AesUtils.aesEncryption(\"123456\", AES_KEY), is(\"jHcpKkiDbbQh7W7hh8yQSA==\"));",
                "type": "DELETE",
                "lineNo": 35
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(AesUtils.aesEncryption(\"123456\", AES_KEY, IV), is(\"bbiB8zbUo3z3oA0VqEB/IA==\"));",
                "type": "ADD",
                "lineNo": 37
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '123456'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtInvocation",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'jHcpKkiDbbQh7W7hh8yQSA=='"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '123456'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String IV"
              },
              {
                "type": "CtInvocation",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'bbiB8zbUo3z3oA0VqEB/IA=='"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void testAesEncryptionForEmptyString() {",
                "type": "DELETE",
                "lineNo": 39
              },
              {
                "line": "assertThat(AesUtils.aesEncryption(\"\", AES_KEY), nullValue());",
                "type": "DELETE",
                "lineNo": 40
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 41
              },
              {
                "line": "@Test",
                "type": "DELETE",
                "lineNo": 43
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.AesUtilsTest.testAesEncryptionForEmptyString()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtInvocation",
                "value": "nullValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "nullValue()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.junit.Test"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(AesUtils.aesEncryption(null, AES_KEY), nullValue());",
                "type": "DELETE",
                "lineNo": 45
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(AesUtils.aesEncryption(null, AES_KEY, IV), nullValue());",
                "type": "ADD",
                "lineNo": 42
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtInvocation",
                "value": "nullValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "nullValue()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesEncryption(String,String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String IV"
              },
              {
                "type": "CtInvocation",
                "value": "nullValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "nullValue()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(AesUtils.aesDecryption(\"jHcpKkiDbbQh7W7hh8yQSA==\", AES_KEY), is(\"123456\"));",
                "type": "DELETE",
                "lineNo": 50
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(AesUtils.aesDecryption(\"bbiB8zbUo3z3oA0VqEB/IA==\", AES_KEY, IV), is(\"123456\"));",
                "type": "ADD",
                "lineNo": 47
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'jHcpKkiDbbQh7W7hh8yQSA=='"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtInvocation",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '123456'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'bbiB8zbUo3z3oA0VqEB/IA=='"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String IV"
              },
              {
                "type": "CtInvocation",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '123456'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(AesUtils.aesDecryption(\"\", AES_KEY), nullValue());",
                "type": "DELETE",
                "lineNo": 55
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(AesUtils.aesDecryption(\"\", AES_KEY, IV), nullValue());",
                "type": "ADD",
                "lineNo": 52
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtInvocation",
                "value": "nullValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "nullValue()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String IV"
              },
              {
                "type": "CtInvocation",
                "value": "nullValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "nullValue()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(AesUtils.aesDecryption(null, AES_KEY), nullValue());",
                "type": "DELETE",
                "lineNo": 60
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(AesUtils.aesDecryption(null, AES_KEY, IV), nullValue());",
                "type": "ADD",
                "lineNo": 57
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtInvocation",
                "value": "nullValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "nullValue()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.AesUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.AesUtils.aesDecryption(String,String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String IV"
              },
              {
                "type": "CtInvocation",
                "value": "nullValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "nullValue()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/utils/CipherUtilsTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/utils/CipherUtilsTest.java",
        "name": "org.apache.shenyu.admin.utils.CipherUtilsTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "private static final String IV = \"6075877187097700\";",
                "type": "ADD",
                "lineNo": 34
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String IV"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '6075877187097700'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(CipherUtils.encryptHex(\"123456\", AES_KEY), is(\"jHcpKkiDbbQh7W7hh8yQSA==\"));",
                "type": "DELETE",
                "lineNo": 37
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(CipherUtils.encryptHex(\"123456\", AES_KEY, IV), is(\"bbiB8zbUo3z3oA0VqEB/IA==\"));",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.encryptHex(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.encryptHex(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '123456'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtInvocation",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'jHcpKkiDbbQh7W7hh8yQSA=='"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.encryptHex(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.encryptHex(String,String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '123456'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String IV"
              },
              {
                "type": "CtInvocation",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'bbiB8zbUo3z3oA0VqEB/IA=='"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void testEncryptHexForNull() {",
                "type": "DELETE",
                "lineNo": 41
              },
              {
                "line": "assertThat(CipherUtils.encryptHex(\"\", AES_KEY), emptyString());",
                "type": "DELETE",
                "lineNo": 42
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 43
              },
              {
                "line": "@Test",
                "type": "DELETE",
                "lineNo": 45
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.CipherUtilsTest.testEncryptHexForNull()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.encryptHex(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.encryptHex(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtInvocation",
                "value": "emptyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "emptyString()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.junit.Test"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(CipherUtils.decryptStr(\"jHcpKkiDbbQh7W7hh8yQSA==\", AES_KEY), is(\"123456\"));",
                "type": "DELETE",
                "lineNo": 47
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(CipherUtils.decryptStr(\"bbiB8zbUo3z3oA0VqEB/IA==\", AES_KEY, IV), is(\"123456\"));",
                "type": "ADD",
                "lineNo": 43
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'jHcpKkiDbbQh7W7hh8yQSA=='"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtInvocation",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '123456'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'bbiB8zbUo3z3oA0VqEB/IA=='"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String IV"
              },
              {
                "type": "CtInvocation",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '123456'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(CipherUtils.decryptStr(\"jHcpKkiDbbQh7W7hh8yQSA=\", AES_KEY), notNullValue());",
                "type": "DELETE",
                "lineNo": 52
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(CipherUtils.decryptStr(\"bbiB8zbUo3z3oA0VqEB/IA=\", AES_KEY, IV), notNullValue());",
                "type": "ADD",
                "lineNo": 48
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'jHcpKkiDbbQh7W7hh8yQSA='"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtInvocation",
                "value": "notNullValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "notNullValue()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'bbiB8zbUo3z3oA0VqEB/IA='"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String IV"
              },
              {
                "type": "CtInvocation",
                "value": "notNullValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "notNullValue()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@Test(expected = ShenyuException.class)",
                "type": "DELETE",
                "lineNo": 55
              },
              {
                "line": "public void testDecryptStrForEmptyStringThrowsException() {",
                "type": "DELETE",
                "lineNo": 56
              },
              {
                "line": "assertThat(CipherUtils.decryptStr(\"\", AES_KEY), notNullValue());",
                "type": "DELETE",
                "lineNo": 57
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 58
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.utils.CipherUtilsTest.testDecryptStrForEmptyStringThrowsException()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.junit.Test"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtInvocation",
                "value": "notNullValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "notNullValue()"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(CipherUtils.decryptStr(null, AES_KEY), notNullValue());",
                "type": "DELETE",
                "lineNo": 62
              }
            ],
            "targetChanges": [
              {
                "line": "assertThat(CipherUtils.decryptStr(null, AES_KEY, IV), notNullValue());",
                "type": "ADD",
                "lineNo": 53
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtInvocation",
                "value": "notNullValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "notNullValue()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.CipherUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.CipherUtils.decryptStr(String,String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String AES_KEY"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String IV"
              },
              {
                "type": "CtInvocation",
                "value": "notNullValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "notNullValue()"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "d537afcbf",
    "aCommit": "78d85a6b2",
    "changes": [
      {
        "bPath": "shenyu-client/shenyu-client-grpc/src/main/java/org/apache/shenyu/client/grpc/GrpcClientBeanPostProcessor.java",
        "aPath": "shenyu-client/shenyu-client-grpc/src/main/java/org/apache/shenyu/client/grpc/GrpcClientBeanPostProcessor.java",
        "name": "org.apache.shenyu.client.grpc.GrpcClientBeanPostProcessor",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "MethodDescriptor.MethodType methodType = JsonServerServiceInterceptor.getMethodTypeMap().get(packageName + \"/\" + methodName);",
                "type": "ADD",
                "lineNo": 149
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "io.grpc.MethodDescriptor$MethodType methodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor$MethodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.client.grpc.json.JsonServerServiceInterceptor.getMethodTypeMap()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.client.grpc.json.JsonServerServiceInterceptor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.client.grpc.json.JsonServerServiceInterceptor.getMethodTypeMap()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String packageName"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String methodName"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".rpcExt(buildRpcExt(shenyuGrpcClient))",
                "type": "DELETE",
                "lineNo": 160
              }
            ],
            "targetChanges": [
              {
                "line": ".rpcExt(buildRpcExt(shenyuGrpcClient, methodType))",
                "type": "ADD",
                "lineNo": 163
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "rpcExt(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.client.grpc.GrpcClientBeanPostProcessor.buildRpcExt(ShenyuGrpcClient)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.client.grpc.GrpcClientBeanPostProcessor.buildRpcExt(ShenyuGrpcClient)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient shenyuGrpcClient"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "rpcExt()"
              },
              {
                "type": "CtInvocation",
                "value": "buildRpcExt(org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient,MethodDescriptor.MethodType)"
              },
              {
                "type": "CtExecutableReference",
                "value": "buildRpcExt(org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient,MethodDescriptor.MethodType)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient shenyuGrpcClient"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.MethodDescriptor$MethodType methodType"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private String buildRpcExt(final ShenyuGrpcClient shenyuGrpcClient) {",
                "type": "DELETE",
                "lineNo": 165
              },
              {
                "line": "GrpcExt build = GrpcExt.builder().timeout(shenyuGrpcClient.timeout()).build();",
                "type": "DELETE",
                "lineNo": 166
              }
            ],
            "targetChanges": [
              {
                "line": "private String buildRpcExt(final ShenyuGrpcClient shenyuGrpcClient,",
                "type": "ADD",
                "lineNo": 168
              },
              {
                "line": "final MethodDescriptor.MethodType methodType) {",
                "type": "ADD",
                "lineNo": 169
              },
              {
                "line": "GrpcExt build = GrpcExt.builder()",
                "type": "ADD",
                "lineNo": 170
              },
              {
                "line": ".timeout(shenyuGrpcClient.timeout())",
                "type": "ADD",
                "lineNo": 171
              },
              {
                "line": ".methodType(methodType)",
                "type": "ADD",
                "lineNo": 172
              },
              {
                "line": ".build();",
                "type": "ADD",
                "lineNo": 173
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.client.grpc.GrpcClientBeanPostProcessor.buildRpcExt(ShenyuGrpcClient)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient shenyuGrpcClient"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.client.grpc.common.dto.GrpcExt build"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.client.grpc.common.dto.GrpcExt"
              },
              {
                "type": "CtInvocation",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "timeout(int)"
              },
              {
                "type": "CtInvocation",
                "value": "builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.client.grpc.common.dto.GrpcExt"
              },
              {
                "type": "CtExecutableReference",
                "value": "builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "timeout(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient.timeout()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient shenyuGrpcClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient.timeout()"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.client.grpc.GrpcClientBeanPostProcessor.buildRpcExt(ShenyuGrpcClient,MethodType)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient shenyuGrpcClient"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient"
              },
              {
                "type": "CtParameter",
                "value": "io.grpc.MethodDescriptor$MethodType methodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor$MethodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.client.grpc.common.dto.GrpcExt build"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.client.grpc.common.dto.GrpcExt"
              },
              {
                "type": "CtInvocation",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "methodType(MethodDescriptor.MethodType)"
              },
              {
                "type": "CtInvocation",
                "value": "timeout(int)"
              },
              {
                "type": "CtInvocation",
                "value": "builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.client.grpc.common.dto.GrpcExt"
              },
              {
                "type": "CtExecutableReference",
                "value": "builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "timeout(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient.timeout()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient shenyuGrpcClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.client.grpc.common.annotation.ShenyuGrpcClient.timeout()"
              },
              {
                "type": "CtExecutableReference",
                "value": "methodType(MethodDescriptor.MethodType)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.MethodDescriptor$MethodType methodType"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-client/shenyu-client-grpc/src/main/java/org/apache/shenyu/client/grpc/common/dto/GrpcExt.java",
        "aPath": "shenyu-client/shenyu-client-grpc/src/main/java/org/apache/shenyu/client/grpc/common/dto/GrpcExt.java",
        "name": "org.apache.shenyu.client.grpc.common.dto.GrpcExt",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "private MethodDescriptor.MethodType methodType;",
                "type": "ADD",
                "lineNo": 39
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "MethodDescriptor.MethodType methodType"
              },
              {
                "type": "CtTypeReference",
                "value": "MethodDescriptor.MethodType"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-client/shenyu-client-grpc/src/main/java/org/apache/shenyu/client/grpc/json/JsonServerServiceInterceptor.java",
        "aPath": "shenyu-client/shenyu-client-grpc/src/main/java/org/apache/shenyu/client/grpc/json/JsonServerServiceInterceptor.java",
        "name": "org.apache.shenyu.client.grpc.json.JsonServerServiceInterceptor",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "private static Map<String, MethodDescriptor.MethodType> methodTypeMap = Maps.newConcurrentMap();",
                "type": "ADD",
                "lineNo": 48
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.util.Map methodTypeMap"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor$MethodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.collect.Maps.newConcurrentMap()"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.common.collect.Maps"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.collect.Maps.newConcurrentMap()"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "MethodDescriptor.MethodType methodType = definition.getMethodDescriptor().getType();",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "methodTypeMap.put(fullMethodName, methodType);",
                "type": "ADD",
                "lineNo": 90
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "io.grpc.MethodDescriptor$MethodType methodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor$MethodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor"
              },
              {
                "type": "CtInvocation",
                "value": "getType()"
              },
              {
                "type": "CtInvocation",
                "value": "getMethodDescriptor()"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.ServerMethodDefinition definition"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMethodDescriptor()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getType()"
              },
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String,MethodDescriptor.MethodType)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map methodTypeMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String,MethodDescriptor.MethodType)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String fullMethodName"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.MethodDescriptor$MethodType methodType"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 185
              },
              {
                "line": "* get MethodTypeMap.",
                "type": "ADD",
                "lineNo": 186
              },
              {
                "line": "* @return methodTypeMap",
                "type": "ADD",
                "lineNo": 187
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 188
              },
              {
                "line": "public static Map<String, MethodDescriptor.MethodType> getMethodTypeMap() {",
                "type": "ADD",
                "lineNo": 189
              },
              {
                "line": "return methodTypeMap;",
                "type": "ADD",
                "lineNo": 190
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 191
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.client.grpc.json.JsonServerServiceInterceptor.getMethodTypeMap()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor$MethodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map methodTypeMap"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/GrpcPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/GrpcPlugin.java",
        "name": "org.apache.shenyu.plugin.grpc.GrpcPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "CompletableFuture<ShenyuGrpcResponse> result = client.call(metaData, callOptions, param);",
                "type": "DELETE",
                "lineNo": 82
              }
            ],
            "targetChanges": [
              {
                "line": "CompletableFuture<ShenyuGrpcResponse> result = client.call(metaData, callOptions, param, extInfo.methodType);",
                "type": "ADD",
                "lineNo": 83
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.concurrent.CompletableFuture result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient.call(MetaData,CallOptions,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient client"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient.call(MetaData,CallOptions,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.CallOptions callOptions"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String param"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.concurrent.CompletableFuture result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse"
              },
              {
                "type": "CtInvocation",
                "value": "call(org.apache.shenyu.common.dto.MetaData,io.grpc.CallOptions,java.lang.String,MethodDescriptor.MethodType)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient client"
              },
              {
                "type": "CtExecutableReference",
                "value": "call(org.apache.shenyu.common.dto.MetaData,io.grpc.CallOptions,java.lang.String,MethodDescriptor.MethodType)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.CallOptions callOptions"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String param"
              },
              {
                "type": "CtFieldRead",
                "value": "MethodDescriptor.MethodType methodType"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.GrpcPlugin$GrpcExtInfo extInfo"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.plugin.grpc.GrpcPlugin$GrpcExtInfo extInfo"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.RPC_RESULT, ret.getResult());",
                "type": "DELETE",
                "lineNo": 84
              }
            ],
            "targetChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.GRPC_RPC_RESULT, ret.getResults());",
                "type": "ADD",
                "lineNo": 85
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "put()"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.RPC_RESULT"
              },
              {
                "type": "CtInvocation",
                "value": "getResult()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> ret"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> ret"
              },
              {
                "type": "CtExecutableReference",
                "value": "getResult()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "put()"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.GRPC_RPC_RESULT"
              },
              {
                "type": "CtInvocation",
                "value": "getResults()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> ret"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> ret"
              },
              {
                "type": "CtExecutableReference",
                "value": "getResults()"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private MethodDescriptor.MethodType methodType;",
                "type": "ADD",
                "lineNo": 131
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "MethodDescriptor.MethodType methodType"
              },
              {
                "type": "CtTypeReference",
                "value": "MethodDescriptor.MethodType"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/client/ShenyuGrpcClient.java",
        "aPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/client/ShenyuGrpcClient.java",
        "name": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* @param methodType methodType",
                "type": "ADD",
                "lineNo": 65
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public CompletableFuture<ShenyuGrpcResponse> call(final MetaData metaData, final CallOptions callOptions, final String requestJsons) {",
                "type": "DELETE",
                "lineNo": 65
              },
              {
                "line": "DynamicMessage jsonRequest = JsonMessage.buildJsonMessage(requestJsons);",
                "type": "DELETE",
                "lineNo": 66
              }
            ],
            "targetChanges": [
              {
                "line": "public CompletableFuture<ShenyuGrpcResponse> call(final MetaData metaData,",
                "type": "ADD",
                "lineNo": 68
              },
              {
                "line": "final CallOptions callOptions,",
                "type": "ADD",
                "lineNo": 69
              },
              {
                "line": "final String requestJsons,",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "final MethodDescriptor.MethodType methodType) {",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "List<DynamicMessage> jsonRequestList = JsonMessage.buildJsonMessageList(GsonUtils.getInstance().toObjectMap(requestJsons));",
                "type": "ADD",
                "lineNo": 72
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient.call(MetaData,CallOptions,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.MetaData"
              },
              {
                "type": "CtParameter",
                "value": "io.grpc.CallOptions callOptions"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.CallOptions"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String requestJsons"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "com.google.protobuf.DynamicMessage jsonRequest"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.protobuf.DynamicMessage"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage.buildJsonMessage(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage.buildJsonMessage(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String requestJsons"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient.call(MetaData,CallOptions,String,MethodType)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.MetaData"
              },
              {
                "type": "CtParameter",
                "value": "io.grpc.CallOptions callOptions"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.CallOptions"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String requestJsons"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "io.grpc.MethodDescriptor$MethodType methodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor$MethodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List jsonRequestList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.protobuf.DynamicMessage"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage.buildJsonMessageList(Map)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage.buildJsonMessageList(Map)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toObjectMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toObjectMap(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String requestJsons"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "jsonRequest,",
                "type": "DELETE",
                "lineNo": 71
              }
            ],
            "targetChanges": [
              {
                "line": "methodType,",
                "type": "ADD",
                "lineNo": 77
              },
              {
                "line": "jsonRequestList.get(0),",
                "type": "ADD",
                "lineNo": 78
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "com.google.protobuf.DynamicMessage jsonRequest"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableRead",
                "value": "io.grpc.MethodDescriptor$MethodType methodType"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.get(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List jsonRequestList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.get(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".requests(jsonRequest)",
                "type": "DELETE",
                "lineNo": 81
              }
            ],
            "targetChanges": [
              {
                "line": ".requests(jsonRequestList)",
                "type": "ADD",
                "lineNo": 88
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "requests(com.google.protobuf.DynamicMessage)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.google.protobuf.DynamicMessage jsonRequest"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "requests(java.util.List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List jsonRequestList"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "DynamicMessage requests = callParams.getRequests();",
                "type": "DELETE",
                "lineNo": 100
              }
            ],
            "targetChanges": [
              {
                "line": "List<DynamicMessage> requestList = callParams.getRequests();",
                "type": "ADD",
                "lineNo": 107
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "com.google.protobuf.DynamicMessage requests"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.protobuf.DynamicMessage"
              },
              {
                "type": "CtInvocation",
                "value": "getRequests()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcCallRequest callParams"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRequests()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List requestList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.protobuf.DynamicMessage"
              },
              {
                "type": "CtInvocation",
                "value": "getRequests()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcCallRequest callParams"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRequests()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "asyncUnaryCall(createCall(callParams), requests, compositeObserver);",
                "type": "DELETE",
                "lineNo": 109
              }
            ],
            "targetChanges": [
              {
                "line": "asyncUnaryCall(createCall(callParams), requestList.get(0), compositeObserver);",
                "type": "ADD",
                "lineNo": 116
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "asyncUnaryCall(<unknown>,<unknown>,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "asyncUnaryCall(<unknown>,<unknown>,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient.createCall(ShenyuGrpcCallRequest)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient.createCall(ShenyuGrpcCallRequest)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcCallRequest callParams"
              },
              {
                "type": "CtVariableRead",
                "value": "com.google.protobuf.DynamicMessage requests"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.stub.StreamObserver compositeObserver"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "asyncUnaryCall(<unknown>,<unknown>,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "asyncUnaryCall(<unknown>,<unknown>,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient.createCall(ShenyuGrpcCallRequest)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient.createCall(ShenyuGrpcCallRequest)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcCallRequest callParams"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.get(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List requestList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.get(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.stub.StreamObserver compositeObserver"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "asyncServerStreamingCall(createCall(callParams), requests, compositeObserver);",
                "type": "DELETE",
                "lineNo": 112
              }
            ],
            "targetChanges": [
              {
                "line": "asyncServerStreamingCall(createCall(callParams), requestList.get(0), compositeObserver);",
                "type": "ADD",
                "lineNo": 119
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "asyncServerStreamingCall(<unknown>,<unknown>,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "asyncServerStreamingCall(<unknown>,<unknown>,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient.createCall(ShenyuGrpcCallRequest)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient.createCall(ShenyuGrpcCallRequest)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcCallRequest callParams"
              },
              {
                "type": "CtVariableRead",
                "value": "com.google.protobuf.DynamicMessage requests"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.stub.StreamObserver compositeObserver"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "asyncServerStreamingCall(<unknown>,<unknown>,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "asyncServerStreamingCall(<unknown>,<unknown>,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient.createCall(ShenyuGrpcCallRequest)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient.createCall(ShenyuGrpcCallRequest)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcCallRequest callParams"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.get(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List requestList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.get(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.stub.StreamObserver compositeObserver"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "requestList.forEach(requestObserver::onNext);",
                "type": "ADD",
                "lineNo": 123
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "forEach()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List requestList"
              },
              {
                "type": "CtExecutableReference",
                "value": "forEach()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "onNext()"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.stub.StreamObserver requestObserver"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "requestList.forEach(requestObserver::onNext);",
                "type": "ADD",
                "lineNo": 128
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "forEach()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List requestList"
              },
              {
                "type": "CtExecutableReference",
                "value": "forEach()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "onNext()"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.stub.StreamObserver requestObserver"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/proto/MessageWriter.java",
        "aPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/proto/MessageWriter.java",
        "name": "org.apache.shenyu.plugin.grpc.proto.MessageWriter",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private final ShenyuGrpcResponse results;",
                "type": "DELETE",
                "lineNo": 32
              }
            ],
            "targetChanges": [
              {
                "line": "private final ShenyuGrpcResponse grpcResponse;",
                "type": "ADD",
                "lineNo": 32
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse results"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse grpcResponse"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private MessageWriter(final ShenyuGrpcResponse results) {",
                "type": "DELETE",
                "lineNo": 34
              },
              {
                "line": "this.results = results;",
                "type": "DELETE",
                "lineNo": 35
              }
            ],
            "targetChanges": [
              {
                "line": "private MessageWriter(final ShenyuGrpcResponse grpcResponse) {",
                "type": "ADD",
                "lineNo": 34
              },
              {
                "line": "this.grpcResponse = grpcResponse;",
                "type": "ADD",
                "lineNo": 35
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.grpc.proto.MessageWriter.MessageWriter(ShenyuGrpcResponse)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse results"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse"
              },
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse results"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse results"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.grpc.proto.MessageWriter.MessageWriter(ShenyuGrpcResponse)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse grpcResponse"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse"
              },
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse grpcResponse"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse grpcResponse"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "results.setResult(respData);",
                "type": "DELETE",
                "lineNo": 52
              }
            ],
            "targetChanges": [
              {
                "line": "grpcResponse.getResults().add(respData);",
                "type": "ADD",
                "lineNo": 52
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "setResult(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse results"
              },
              {
                "type": "CtExecutableReference",
                "value": "setResult(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String respData"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "add(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getResults()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse grpcResponse"
              },
              {
                "type": "CtExecutableReference",
                "value": "getResults()"
              },
              {
                "type": "CtExecutableReference",
                "value": "add(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String respData"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/proto/ShenyuGrpcCallRequest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/proto/ShenyuGrpcCallRequest.java",
        "name": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcCallRequest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private DynamicMessage requests;",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "private List<DynamicMessage> requests;",
                "type": "ADD",
                "lineNo": 41
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "com.google.protobuf.DynamicMessage requests"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.protobuf.DynamicMessage"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.util.List requests"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.protobuf.DynamicMessage"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/proto/ShenyuGrpcResponse.java",
        "aPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/proto/ShenyuGrpcResponse.java",
        "name": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private String result;",
                "type": "DELETE",
                "lineNo": 32
              }
            ],
            "targetChanges": [
              {
                "line": "private List<String> results;",
                "type": "ADD",
                "lineNo": 34
              },
              {
                "line": "public ShenyuGrpcResponse() {",
                "type": "ADD",
                "lineNo": 36
              },
              {
                "line": "this.results = new ArrayList<>();",
                "type": "ADD",
                "lineNo": 37
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "java.lang.String result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.util.List results"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse.ShenyuGrpcResponse()"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.util.List results"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-grpc/src/test/java/org/apache/shenyu/plugin/grpc/GrpcPluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-grpc/src/test/java/org/apache/shenyu/plugin/grpc/GrpcPluginTest.java",
        "name": "org.apache.shenyu.plugin.grpc.GrpcPluginTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "response.setResult(\"success\");",
                "type": "DELETE",
                "lineNo": 92
              },
              {
                "line": "when(mockClient.call(Mockito.any(), Mockito.any(), Mockito.any()))",
                "type": "DELETE",
                "lineNo": 93
              }
            ],
            "targetChanges": [
              {
                "line": "response.getResults().add(\"success\");",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "when(mockClient.call(Mockito.any(), Mockito.any(), Mockito.any(), Mockito.any()))",
                "type": "ADD",
                "lineNo": 93
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "setResult(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse response"
              },
              {
                "type": "CtExecutableReference",
                "value": "setResult(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'success'"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.util.concurrent.CompletableFuture)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "call(org.apache.shenyu.common.dto.MetaData,org.apache.shenyu.plugin.grpc.client.CallOptions,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient mockClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "call(org.apache.shenyu.common.dto.MetaData,org.apache.shenyu.plugin.grpc.client.CallOptions,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "add(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getResults()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.proto.ShenyuGrpcResponse response"
              },
              {
                "type": "CtExecutableReference",
                "value": "getResults()"
              },
              {
                "type": "CtExecutableReference",
                "value": "add(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'success'"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.util.concurrent.CompletableFuture)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "call(org.apache.shenyu.common.dto.MetaData,org.apache.shenyu.plugin.grpc.client.CallOptions,java.lang.String,MethodDescriptor.MethodType)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.grpc.client.ShenyuGrpcClient mockClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "call(org.apache.shenyu.common.dto.MetaData,org.apache.shenyu.plugin.grpc.client.CallOptions,java.lang.String,MethodDescriptor.MethodType)"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.mockito.Mockito"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-protocol/shenyu-protocol-grpc/src/main/java/org/apache/shenyu/protocol/grpc/message/JsonMessage.java",
        "aPath": "shenyu-protocol/shenyu-protocol-grpc/src/main/java/org/apache/shenyu/protocol/grpc/message/JsonMessage.java",
        "name": "org.apache.shenyu.protocol.grpc.message.JsonMessage",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* @param jsonParamMap jsonParamMap",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "* @return DynamicMessageList",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "public static List<DynamicMessage> buildJsonMessageList(final Map<String, Object> jsonParamMap) {",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "JsonArray jsonParams = (JsonArray) jsonParamMap.get(GrpcConstants.JSON_DESCRIPTOR_PROTO_FIELD_NAME);",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "List<DynamicMessage> jsonMessageList = new ArrayList<>(jsonParams.size());",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "jsonParams.forEach(jsonParam -> {",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "DynamicMessage jsonMessage = buildJsonMessage(GsonUtils.getInstance().toJson(jsonParam));",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "jsonMessageList.add(jsonMessage);",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "return jsonMessageList;",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "* buildJsonMessage.",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 95
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage.buildJsonMessageList(Map)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.protobuf.DynamicMessage"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Map jsonParamMap"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtLocalVariable",
                "value": "com.google.gson.JsonArray jsonParams"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.gson.JsonArray"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.gson.JsonArray"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map jsonParamMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String JSON_DESCRIPTOR_PROTO_FIELD_NAME"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.protocol.grpc.constant.GrpcConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String JSON_DESCRIPTOR_PROTO_FIELD_NAME"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List jsonMessageList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.protobuf.DynamicMessage"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList(int)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.gson.JsonArray.size()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.google.gson.JsonArray jsonParams"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.gson.JsonArray.size()"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Iterable.forEach(Consumer)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.google.gson.JsonArray jsonParams"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Iterable.forEach(Consumer)"
              },
              {
                "type": "CtParameter",
                "value": "com.google.gson.JsonElement jsonParam"
              },
              {
                "type": "CtLocalVariable",
                "value": "com.google.protobuf.DynamicMessage jsonMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.protobuf.DynamicMessage"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage.buildJsonMessage(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage.buildJsonMessage(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.google.gson.JsonElement jsonParam"
              },
              {
                "type": "CtInvocation",
                "value": "add(com.google.protobuf.DynamicMessage)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List jsonMessageList"
              },
              {
                "type": "CtExecutableReference",
                "value": "add(com.google.protobuf.DynamicMessage)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.google.protobuf.DynamicMessage jsonMessage"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List jsonMessageList"
              }
            ]
          },
          {
            "targetChanges": [],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "* @param methodType methodType",
                "type": "ADD",
                "lineNo": 144
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "final MethodDescriptor.MethodType methodType,",
                "type": "ADD",
                "lineNo": 151
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtParameter",
                "value": "io.grpc.MethodDescriptor$MethodType methodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor$MethodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".setType(MethodDescriptor.MethodType.UNARY)",
                "type": "DELETE",
                "lineNo": 133
              }
            ],
            "targetChanges": [
              {
                "line": ".setType(getMethodType(methodType))",
                "type": "ADD",
                "lineNo": 157
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "setType()"
              },
              {
                "type": "CtTypeAccess",
                "value": "MethodDescriptor.MethodType.UNARY"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "setType()"
              },
              {
                "type": "CtInvocation",
                "value": "getMethodType(MethodDescriptor.MethodType)"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMethodType(MethodDescriptor.MethodType)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.MethodDescriptor$MethodType methodType"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "* getMethodType.",
                "type": "ADD",
                "lineNo": 169
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 170
              },
              {
                "line": "* @param methodType methodType",
                "type": "ADD",
                "lineNo": 171
              },
              {
                "line": "* @return MethodDescriptor.MethodType",
                "type": "ADD",
                "lineNo": 172
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 173
              },
              {
                "line": "private static MethodDescriptor.MethodType getMethodType(final MethodDescriptor.MethodType methodType) {",
                "type": "ADD",
                "lineNo": 174
              },
              {
                "line": "MethodDescriptor.MethodType grpcMethodType;",
                "type": "ADD",
                "lineNo": 175
              },
              {
                "line": "switch (methodType) {",
                "type": "ADD",
                "lineNo": 177
              },
              {
                "line": "case UNARY:",
                "type": "ADD",
                "lineNo": 178
              },
              {
                "line": "grpcMethodType = MethodDescriptor.MethodType.UNARY;",
                "type": "ADD",
                "lineNo": 179
              },
              {
                "line": "break;",
                "type": "ADD",
                "lineNo": 180
              },
              {
                "line": "case CLIENT_STREAMING:",
                "type": "ADD",
                "lineNo": 181
              },
              {
                "line": "grpcMethodType = MethodDescriptor.MethodType.CLIENT_STREAMING;",
                "type": "ADD",
                "lineNo": 182
              },
              {
                "line": "break;",
                "type": "ADD",
                "lineNo": 183
              },
              {
                "line": "case SERVER_STREAMING:",
                "type": "ADD",
                "lineNo": 184
              },
              {
                "line": "grpcMethodType = MethodDescriptor.MethodType.SERVER_STREAMING;",
                "type": "ADD",
                "lineNo": 185
              },
              {
                "line": "break;",
                "type": "ADD",
                "lineNo": 186
              },
              {
                "line": "case BIDI_STREAMING:",
                "type": "ADD",
                "lineNo": 187
              },
              {
                "line": "grpcMethodType = MethodDescriptor.MethodType.BIDI_STREAMING;",
                "type": "ADD",
                "lineNo": 188
              },
              {
                "line": "break;",
                "type": "ADD",
                "lineNo": 189
              },
              {
                "line": "default:",
                "type": "ADD",
                "lineNo": 190
              },
              {
                "line": "grpcMethodType = MethodDescriptor.MethodType.UNKNOWN;",
                "type": "ADD",
                "lineNo": 191
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 192
              },
              {
                "line": "return grpcMethodType;",
                "type": "ADD",
                "lineNo": 194
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 195
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 197
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage.getMethodType(MethodType)"
              },
              {
                "type": "CtTypeReference",
                "value": "MethodDescriptor.MethodType"
              },
              {
                "type": "CtParameter",
                "value": "io.grpc.MethodDescriptor$MethodType methodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor$MethodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor"
              },
              {
                "type": "CtLocalVariable",
                "value": "io.grpc.MethodDescriptor$MethodType grpcMethodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor$MethodType"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.MethodDescriptor"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.MethodDescriptor$MethodType methodType"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage UNARY"
              },
              {
                "type": "CtVariableWrite",
                "value": "io.grpc.MethodDescriptor$MethodType grpcMethodType"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage UNARY"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage CLIENT_STREAMING"
              },
              {
                "type": "CtVariableWrite",
                "value": "io.grpc.MethodDescriptor$MethodType grpcMethodType"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage CLIENT_STREAMING"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage SERVER_STREAMING"
              },
              {
                "type": "CtVariableWrite",
                "value": "io.grpc.MethodDescriptor$MethodType grpcMethodType"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage SERVER_STREAMING"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage BIDI_STREAMING"
              },
              {
                "type": "CtVariableWrite",
                "value": "io.grpc.MethodDescriptor$MethodType grpcMethodType"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage BIDI_STREAMING"
              },
              {
                "type": "CtVariableWrite",
                "value": "io.grpc.MethodDescriptor$MethodType grpcMethodType"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.protocol.grpc.message.JsonMessage UNKNOWN"
              },
              {
                "type": "CtVariableRead",
                "value": "io.grpc.MethodDescriptor$MethodType grpcMethodType"
              }
            ]
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "55ecf11aa",
    "aCommit": "eb9af33fc",
    "changes": [
      {
        "bPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/cache/ApplicationConfigCache.java",
        "aPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/cache/ApplicationConfigCache.java",
        "name": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "DubboProviderVersionCache.getInstance().cacheProviderVersion(metaData.getPath(), reference);",
                "type": "DELETE",
                "lineNo": 178
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.cacheProviderVersion(String,ReferenceConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.cacheProviderVersion(String,ReferenceConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig reference"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/handler/ApacheDubboPluginDataHandler.java",
        "aPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/handler/ApacheDubboPluginDataHandler.java",
        "name": "org.apache.shenyu.plugin.apache.dubbo.handler.ApacheDubboPluginDataHandler",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "DubboProviderVersionCache.getInstance().invalidateAll();",
                "type": "DELETE",
                "lineNo": 48
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.invalidateAll()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.invalidateAll()"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/proxy/ApacheDubboProxyService.java",
        "aPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/proxy/ApacheDubboProxyService.java",
        "name": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "DubboProviderVersionCache.getInstance().invalidate(metaData.getPath());",
                "type": "DELETE",
                "lineNo": 79
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.invalidate(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.invalidate(String)"
              },
              {
                "type": "CtInvocation",
                "value": "getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPath()"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "//Compatible with asynchronous calls of lower Dubbo versions",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "RpcContext.getContext().setAttachment(ASYNC_KEY, Boolean.TRUE.toString());",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "Object data = genericService.$invoke(metaData.getMethodName(), pair.getLeft(), pair.getRight());",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "if (Objects.isNull(data)) {",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "data = RpcContext.getContext().getFuture();",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 93
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setAttachment(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getContext()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.dubbo.rpc.RpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getContext()"
              },
              {
                "type": "CtExecutableReference",
                "value": "setAttachment(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ASYNC_KEY"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.toString()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.toString()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Object data"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtInvocation",
                "value": "$invoke(java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.rpc.service.GenericService genericService"
              },
              {
                "type": "CtExecutableReference",
                "value": "$invoke(java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtInvocation",
                "value": "getMethodName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMethodName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getRight()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getRight()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object data"
              },
              {
                "type": "CtVariableWrite",
                "value": "java.lang.Object data"
              },
              {
                "type": "CtInvocation",
                "value": "getFuture()"
              },
              {
                "type": "CtInvocation",
                "value": "getContext()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.dubbo.rpc.RpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getContext()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getFuture()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (isProviderSupportAsync(metaData.getPath())) {",
                "type": "DELETE",
                "lineNo": 90
              },
              {
                "line": "future = genericService.$invokeAsync(metaData.getMethodName(), pair.getLeft(), pair.getRight());",
                "type": "DELETE",
                "lineNo": 91
              }
            ],
            "targetChanges": [
              {
                "line": "if (data instanceof CompletableFuture) {",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "future = (CompletableFuture<Object>) data;",
                "type": "ADD",
                "lineNo": 96
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService.isProviderSupportAsync(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService.isProviderSupportAsync(String)"
              },
              {
                "type": "CtInvocation",
                "value": "getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPath()"
              },
              {
                "type": "CtVariableWrite",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtInvocation",
                "value": "$invokeAsync(java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.rpc.service.GenericService genericService"
              },
              {
                "type": "CtExecutableReference",
                "value": "$invokeAsync(java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtInvocation",
                "value": "getMethodName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMethodName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getRight()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getRight()"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object data"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtVariableWrite",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object data"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Object data = genericService.$invoke(metaData.getMethodName(), pair.getLeft(), pair.getRight());",
                "type": "DELETE",
                "lineNo": 93
              },
              {
                "line": "if (data instanceof CompletableFuture) {",
                "type": "DELETE",
                "lineNo": 94
              },
              {
                "line": "future = (CompletableFuture<Object>) data;",
                "type": "DELETE",
                "lineNo": 95
              },
              {
                "line": "} else {",
                "type": "DELETE",
                "lineNo": 96
              },
              {
                "line": "future = CompletableFuture.completedFuture(data);",
                "type": "DELETE",
                "lineNo": 97
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 98
              }
            ],
            "targetChanges": [
              {
                "line": "future = CompletableFuture.completedFuture(data);",
                "type": "ADD",
                "lineNo": 98
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Object data"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtInvocation",
                "value": "$invoke(java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.rpc.service.GenericService genericService"
              },
              {
                "type": "CtExecutableReference",
                "value": "$invoke(java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtInvocation",
                "value": "getMethodName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMethodName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getRight()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getRight()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object data"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtVariableWrite",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object data"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtVariableWrite",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.CompletableFuture.completedFuture(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.CompletableFuture.completedFuture(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object data"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableWrite",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.CompletableFuture.completedFuture(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.CompletableFuture.completedFuture(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object data"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private boolean isProviderSupportAsync(final String path) {",
                "type": "DELETE",
                "lineNo": 110
              },
              {
                "line": "boolean support = false;",
                "type": "DELETE",
                "lineNo": 111
              },
              {
                "line": "try {",
                "type": "DELETE",
                "lineNo": 112
              },
              {
                "line": "String providerVersion = DubboProviderVersionCache.getInstance().get(path);",
                "type": "DELETE",
                "lineNo": 113
              },
              {
                "line": "int sdkVersion = Version.getIntVersion(providerVersion);",
                "type": "DELETE",
                "lineNo": 114
              },
              {
                "line": "//dubbo sdk only supports $invokeAsync after version 2.7.3",
                "type": "DELETE",
                "lineNo": 115
              },
              {
                "line": "if (sdkVersion >= Constants.DUBBO_SUPPORT_ASYNC_VERSION) {",
                "type": "DELETE",
                "lineNo": 116
              },
              {
                "line": "support = true;",
                "type": "DELETE",
                "lineNo": 117
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 118
              },
              {
                "line": "} catch (Exception e) {",
                "type": "DELETE",
                "lineNo": 119
              },
              {
                "line": "if (log.isDebugEnabled()) {",
                "type": "DELETE",
                "lineNo": 120
              },
              {
                "line": "log.debug(\"check dubbo provider version ex:{}\", e.getMessage());",
                "type": "DELETE",
                "lineNo": 121
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 122
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 123
              },
              {
                "line": "return support;",
                "type": "DELETE",
                "lineNo": 124
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 125
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService.isProviderSupportAsync(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "boolean support"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'false'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String providerVersion"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.get(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.get(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtLocalVariable",
                "value": "int sdkVersion"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtInvocation",
                "value": "getIntVersion(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.dubbo.common.Version"
              },
              {
                "type": "CtExecutableReference",
                "value": "getIntVersion(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String providerVersion"
              },
              {
                "type": "CtVariableRead",
                "value": "int sdkVersion"
              },
              {
                "type": "CtFieldRead",
                "value": "int DUBBO_SUPPORT_ASYNC_VERSION"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "int DUBBO_SUPPORT_ASYNC_VERSION"
              },
              {
                "type": "CtVariableWrite",
                "value": "boolean support"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtCatchVariable",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              },
              {
                "type": "CtInvocation",
                "value": "isDebugEnabled()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService log"
              },
              {
                "type": "CtExecutableReference",
                "value": "isDebugEnabled()"
              },
              {
                "type": "CtInvocation",
                "value": "debug(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService log"
              },
              {
                "type": "CtExecutableReference",
                "value": "debug(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'check dubbo provider version ex:{}'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Throwable.getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Throwable.getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "boolean support"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/subscriber/ApacheDubboMetaDataSubscriber.java",
        "aPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/subscriber/ApacheDubboMetaDataSubscriber.java",
        "name": "org.apache.shenyu.plugin.apache.dubbo.subscriber.ApacheDubboMetaDataSubscriber",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "DubboProviderVersionCache.getInstance().invalidate(metaData.getPath());",
                "type": "DELETE",
                "lineNo": 63
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.invalidate(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.invalidate(String)"
              },
              {
                "type": "CtInvocation",
                "value": "getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPath()"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/test/java/org/apache/shenyu/plugin/apache/dubbo/proxy/ApacheDubboProxyServiceTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/test/java/org/apache/shenyu/plugin/apache/dubbo/proxy/ApacheDubboProxyServiceTest.java",
        "name": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyServiceTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "final ReferenceConfig referenceConfig = mock(ReferenceConfig.class);",
                "type": "DELETE",
                "lineNo": 89
              },
              {
                "line": "try (MockedStatic<DubboProviderVersionCache> dubboProviderVersionCacheMockedStatic = mockStatic(DubboProviderVersionCache.class)) {",
                "type": "DELETE",
                "lineNo": 90
              },
              {
                "line": "DubboProviderVersionCache dubboProviderVersionCache = mock(DubboProviderVersionCache.class);",
                "type": "DELETE",
                "lineNo": 91
              },
              {
                "line": "dubboProviderVersionCacheMockedStatic.when(() -> DubboProviderVersionCache.getInstance()).thenReturn(dubboProviderVersionCache);",
                "type": "DELETE",
                "lineNo": 92
              },
              {
                "line": "when(dubboProviderVersionCache.get(anyString())).thenReturn(\"2.7.3\");",
                "type": "DELETE",
                "lineNo": 93
              },
              {
                "line": "GenericService genericService = mock(GenericService.class);",
                "type": "DELETE",
                "lineNo": 95
              },
              {
                "line": "when(referenceConfig.get()).thenReturn(genericService);",
                "type": "DELETE",
                "lineNo": 96
              },
              {
                "line": "when(referenceConfig.getInterface()).thenReturn(PATH);",
                "type": "DELETE",
                "lineNo": 97
              },
              {
                "line": "CompletableFuture<Object> future = new CompletableFuture<>();",
                "type": "DELETE",
                "lineNo": 98
              },
              {
                "line": "when(genericService.$invokeAsync(METHOD_NAME, LEFT, RIGHT)).thenReturn(future);",
                "type": "DELETE",
                "lineNo": 99
              },
              {
                "line": "when(genericService.$invoke(METHOD_NAME, LEFT, RIGHT)).thenReturn(new Object());",
                "type": "DELETE",
                "lineNo": 100
              },
              {
                "line": "ApplicationConfigCache applicationConfigCache = ApplicationConfigCache.getInstance();",
                "type": "DELETE",
                "lineNo": 101
              },
              {
                "line": "Field field = ApplicationConfigCache.class.getDeclaredField(\"cache\");",
                "type": "DELETE",
                "lineNo": 102
              },
              {
                "line": "field.setAccessible(true);",
                "type": "DELETE",
                "lineNo": 103
              },
              {
                "line": "((LoadingCache) field.get(applicationConfigCache)).put(PATH, referenceConfig);",
                "type": "DELETE",
                "lineNo": 104
              },
              {
                "line": "ApacheDubboProxyService apacheDubboProxyService = new ApacheDubboProxyService(new BodyParamResolveServiceImpl());",
                "type": "DELETE",
                "lineNo": 105
              },
              {
                "line": "apacheDubboProxyService.genericInvoker(\"\", metaData, exchange);",
                "type": "DELETE",
                "lineNo": 106
              },
              {
                "line": "future.complete(\"success\");",
                "type": "DELETE",
                "lineNo": 107
              },
              {
                "line": "verify(genericService, times(1)).$invokeAsync(METHOD_NAME, LEFT, RIGHT);",
                "type": "DELETE",
                "lineNo": 108
              },
              {
                "line": "when(dubboProviderVersionCache.get(anyString())).thenReturn(\"2.7.2\");",
                "type": "DELETE",
                "lineNo": 110
              },
              {
                "line": "apacheDubboProxyService.genericInvoker(\"\", metaData, exchange);",
                "type": "DELETE",
                "lineNo": 111
              },
              {
                "line": "verify(genericService, times(1)).$invoke(METHOD_NAME, LEFT, RIGHT);",
                "type": "DELETE",
                "lineNo": 112
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 113
              }
            ],
            "targetChanges": [
              {
                "line": "ReferenceConfig referenceConfig = mock(ReferenceConfig.class);",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "GenericService genericService = mock(GenericService.class);",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "when(referenceConfig.get()).thenReturn(genericService);",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "when(referenceConfig.getInterface()).thenReturn(PATH);",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "CompletableFuture<Object> future = new CompletableFuture<>();",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "when(genericService.$invoke(METHOD_NAME, LEFT, RIGHT)).thenReturn(future);",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "ApplicationConfigCache applicationConfigCache = ApplicationConfigCache.getInstance();",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "Field field = ApplicationConfigCache.class.getDeclaredField(\"cache\");",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "field.setAccessible(true);",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "((LoadingCache) field.get(applicationConfigCache)).put(PATH, referenceConfig);",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "ApacheDubboProxyService apacheDubboProxyService = new ApacheDubboProxyService(new BodyParamResolveServiceImpl());",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "apacheDubboProxyService.genericInvoker(\"\", metaData, exchange);",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "future.complete(\"success\");",
                "type": "ADD",
                "lineNo": 92
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.dubbo.config.ReferenceConfig referenceConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.dubbo.config.ReferenceConfig"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.mockito.MockedStatic dubboProviderVersionCacheMockedStatic"
              },
              {
                "type": "CtTypeReference",
                "value": "org.mockito.MockedStatic"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtInvocation",
                "value": "mockStatic(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mockStatic(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache dubboProviderVersionCache"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.mockito.MockedStatic dubboProviderVersionCacheMockedStatic"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache dubboProviderVersionCache"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.get(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache dubboProviderVersionCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.get(String)"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2.7.3'"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.dubbo.rpc.service.GenericService genericService"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.dubbo.rpc.service.GenericService"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.dubbo.rpc.service.GenericService)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig referenceConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.dubbo.rpc.service.GenericService)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.rpc.service.GenericService genericService"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "getInterface()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig referenceConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "getInterface()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PATH"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.concurrent.CompletableFuture.CompletableFuture()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.util.concurrent.CompletableFuture)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "$invokeAsync(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.rpc.service.GenericService genericService"
              },
              {
                "type": "CtExecutableReference",
                "value": "$invokeAsync(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String METHOD_NAME"
              },
              {
                "type": "CtFieldRead",
                "value": "String[] LEFT"
              },
              {
                "type": "CtFieldRead",
                "value": "Object[] RIGHT"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.util.concurrent.CompletableFuture)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.Object)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "$invoke(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.rpc.service.GenericService genericService"
              },
              {
                "type": "CtExecutableReference",
                "value": "$invoke(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String METHOD_NAME"
              },
              {
                "type": "CtFieldRead",
                "value": "String[] LEFT"
              },
              {
                "type": "CtFieldRead",
                "value": "Object[] RIGHT"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.Object)"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.lang.Object.Object()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache applicationConfigCache"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache.getInstance()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.Field"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Class.getDeclaredField(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.getDeclaredField(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'cache'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Field.setAccessible(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Field.setAccessible(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.cache.Cache.put(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Field.get(Object)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.common.cache.LoadingCache"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Field.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache applicationConfigCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.cache.Cache.put(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PATH"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig referenceConfig"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService apacheDubboProxyService"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService.ApacheDubboProxyService(BodyParamResolveService)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyServiceTest$BodyParamResolveServiceImpl.BodyParamResolveServiceImpl()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyServiceTest$BodyParamResolveServiceImpl"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService apacheDubboProxyService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.CompletableFuture.complete(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.CompletableFuture.complete(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'success'"
              },
              {
                "type": "CtInvocation",
                "value": "$invokeAsync(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtInvocation",
                "value": "verify(<unknown>,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "verify(<unknown>,<unknown>)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.rpc.service.GenericService genericService"
              },
              {
                "type": "CtInvocation",
                "value": "times(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "times(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtExecutableReference",
                "value": "$invokeAsync(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String METHOD_NAME"
              },
              {
                "type": "CtFieldRead",
                "value": "String[] LEFT"
              },
              {
                "type": "CtFieldRead",
                "value": "Object[] RIGHT"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.get(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache dubboProviderVersionCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.get(String)"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2.7.2'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService apacheDubboProxyService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtInvocation",
                "value": "$invoke(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtInvocation",
                "value": "verify(<unknown>,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "verify(<unknown>,<unknown>)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.rpc.service.GenericService genericService"
              },
              {
                "type": "CtInvocation",
                "value": "times(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "times(int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtExecutableReference",
                "value": "$invoke(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String METHOD_NAME"
              },
              {
                "type": "CtFieldRead",
                "value": "String[] LEFT"
              },
              {
                "type": "CtFieldRead",
                "value": "Object[] RIGHT"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.dubbo.config.ReferenceConfig referenceConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.dubbo.config.ReferenceConfig"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.dubbo.rpc.service.GenericService genericService"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.dubbo.rpc.service.GenericService"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.dubbo.rpc.service.GenericService)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig referenceConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.dubbo.rpc.service.GenericService)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.rpc.service.GenericService genericService"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "getInterface()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig referenceConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "getInterface()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PATH"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.concurrent.CompletableFuture.CompletableFuture()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.util.concurrent.CompletableFuture)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "$invoke(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.rpc.service.GenericService genericService"
              },
              {
                "type": "CtExecutableReference",
                "value": "$invoke(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String METHOD_NAME"
              },
              {
                "type": "CtFieldRead",
                "value": "String[] LEFT"
              },
              {
                "type": "CtFieldRead",
                "value": "Object[] RIGHT"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.util.concurrent.CompletableFuture)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache applicationConfigCache"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache.getInstance()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.Field"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Class.getDeclaredField(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.getDeclaredField(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'cache'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Field.setAccessible(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Field.setAccessible(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.cache.Cache.put(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Field.get(Object)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.common.cache.LoadingCache"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Field.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache applicationConfigCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.cache.Cache.put(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PATH"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig referenceConfig"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService apacheDubboProxyService"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService.ApacheDubboProxyService(BodyParamResolveService)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyServiceTest$BodyParamResolveServiceImpl.BodyParamResolveServiceImpl()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyServiceTest$BodyParamResolveServiceImpl"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService apacheDubboProxyService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.CompletableFuture.complete(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.CompletableFuture.complete(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'success'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@Test",
                "type": "DELETE",
                "lineNo": 116
              },
              {
                "line": "public void isProviderSupportAsyncTest() throws IllegalAccessException,",
                "type": "DELETE",
                "lineNo": 117
              },
              {
                "line": "NoSuchMethodException, InvocationTargetException {",
                "type": "DELETE",
                "lineNo": 118
              },
              {
                "line": "try (MockedStatic<DubboProviderVersionCache> dubboProviderVersionCacheMockedStatic = mockStatic(DubboProviderVersionCache.class)) {",
                "type": "DELETE",
                "lineNo": 119
              },
              {
                "line": "DubboProviderVersionCache dubboProviderVersionCache = mock(DubboProviderVersionCache.class);",
                "type": "DELETE",
                "lineNo": 120
              },
              {
                "line": "dubboProviderVersionCacheMockedStatic.when(() -> DubboProviderVersionCache.getInstance()).thenReturn(dubboProviderVersionCache);",
                "type": "DELETE",
                "lineNo": 121
              },
              {
                "line": "dubboProviderVersionCacheMockedStatic.when(() -> dubboProviderVersionCache.get(anyString())).thenReturn(\"2.7.3\");",
                "type": "DELETE",
                "lineNo": 122
              },
              {
                "line": "String path = \"/test\";",
                "type": "DELETE",
                "lineNo": 123
              },
              {
                "line": "when(dubboProviderVersionCache.get(path)).thenReturn(\"2.7.3\");",
                "type": "DELETE",
                "lineNo": 124
              },
              {
                "line": "ApacheDubboProxyService apacheDubboProxyService = mock(ApacheDubboProxyService.class);",
                "type": "DELETE",
                "lineNo": 125
              },
              {
                "line": "Method isProviderSupportAsyncMethod = ApacheDubboProxyService.class",
                "type": "DELETE",
                "lineNo": 126
              },
              {
                "line": ".getDeclaredMethod(\"isProviderSupportAsync\", String.class);",
                "type": "DELETE",
                "lineNo": 127
              },
              {
                "line": "isProviderSupportAsyncMethod.setAccessible(true);",
                "type": "DELETE",
                "lineNo": 128
              },
              {
                "line": "Assert.assertTrue((Boolean) isProviderSupportAsyncMethod.invoke(apacheDubboProxyService, path));",
                "type": "DELETE",
                "lineNo": 129
              },
              {
                "line": "when(dubboProviderVersionCache.get(path)).thenReturn(\"2.7.2\");",
                "type": "DELETE",
                "lineNo": 131
              },
              {
                "line": "Assert.assertFalse((Boolean) isProviderSupportAsyncMethod.invoke(apacheDubboProxyService, path));",
                "type": "DELETE",
                "lineNo": 132
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 133
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 134
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyServiceTest.isProviderSupportAsyncTest()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.junit.Test"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.IllegalAccessException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NoSuchMethodException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.InvocationTargetException"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.mockito.MockedStatic dubboProviderVersionCacheMockedStatic"
              },
              {
                "type": "CtTypeReference",
                "value": "org.mockito.MockedStatic"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtInvocation",
                "value": "mockStatic(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mockStatic(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache dubboProviderVersionCache"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.mockito.MockedStatic dubboProviderVersionCacheMockedStatic"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache dubboProviderVersionCache"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.mockito.MockedStatic dubboProviderVersionCacheMockedStatic"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache dubboProviderVersionCache"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache dubboProviderVersionCache"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2.7.3'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/test'"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.get(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache dubboProviderVersionCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.get(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2.7.3'"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService apacheDubboProxyService"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.reflect.Method isProviderSupportAsyncMethod"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.Method"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Class.getDeclaredMethod(String,Class[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.getDeclaredMethod(String,Class[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'isProviderSupportAsync'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Method.setAccessible(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Method isProviderSupportAsyncMethod"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Method.setAccessible(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "assertTrue(java.lang.Boolean)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertTrue(java.lang.Boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Method.invoke(Object,Object[])"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Method isProviderSupportAsyncMethod"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Method.invoke(Object,Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService apacheDubboProxyService"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.get(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache dubboProviderVersionCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.get(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2.7.2'"
              },
              {
                "type": "CtInvocation",
                "value": "assertFalse(java.lang.Boolean)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertFalse(java.lang.Boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Method.invoke(Object,Object[])"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Method isProviderSupportAsyncMethod"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Method.invoke(Object,Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboProxyService apacheDubboProxyService"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/test/java/org/apache/shenyu/plugin/apache/dubbo/subscriber/ApacheDubboMetaDataSubscriberTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/test/java/org/apache/shenyu/plugin/apache/dubbo/subscriber/ApacheDubboMetaDataSubscriberTest.java",
        "name": "org.apache.shenyu.plugin.apache.dubbo.subscriber.ApacheDubboMetaDataSubscriberTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "try (MockedStatic<DubboProviderVersionCache> dubboProviderVersionCacheMockedStatic = mockStatic(DubboProviderVersionCache.class)) {",
                "type": "DELETE",
                "lineNo": 85
              },
              {
                "line": "DubboProviderVersionCache dubboProviderVersionCache = mock(DubboProviderVersionCache.class);",
                "type": "DELETE",
                "lineNo": 86
              },
              {
                "line": "dubboProviderVersionCacheMockedStatic.when(() -> DubboProviderVersionCache.getInstance()).thenReturn(dubboProviderVersionCache);",
                "type": "DELETE",
                "lineNo": 87
              },
              {
                "line": "apacheDubboMetaDataSubscriber.unSubscribe(metaData);",
                "type": "DELETE",
                "lineNo": 89
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 90
              }
            ],
            "targetChanges": [
              {
                "line": "apacheDubboMetaDataSubscriber.unSubscribe(metaData);",
                "type": "ADD",
                "lineNo": 82
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.mockito.MockedStatic dubboProviderVersionCacheMockedStatic"
              },
              {
                "type": "CtTypeReference",
                "value": "org.mockito.MockedStatic"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtInvocation",
                "value": "mockStatic(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mockStatic(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache dubboProviderVersionCache"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache)"
              },
              {
                "type": "CtInvocation",
                "value": "when()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.mockito.MockedStatic dubboProviderVersionCacheMockedStatic"
              },
              {
                "type": "CtExecutableReference",
                "value": "when()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.DubboProviderVersionCache dubboProviderVersionCache"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.subscriber.ApacheDubboMetaDataSubscriber.unSubscribe(MetaData)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.subscriber.ApacheDubboMetaDataSubscriber apacheDubboMetaDataSubscriber"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.subscriber.ApacheDubboMetaDataSubscriber.unSubscribe(MetaData)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.subscriber.ApacheDubboMetaDataSubscriber.unSubscribe(MetaData)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.subscriber.ApacheDubboMetaDataSubscriber apacheDubboMetaDataSubscriber"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.subscriber.ApacheDubboMetaDataSubscriber.unSubscribe(MetaData)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "a0c3e0cca",
    "aCommit": "149360d94",
    "changes": [
      {
        "bPath": "soul-plugin/soul-plugin-context-path/src/main/java/org/dromara/soul/plugin/contextpath/ContextPathMappingPlugin.java",
        "aPath": "soul-plugin/soul-plugin-context-path/src/main/java/org/dromara/soul/plugin/contextpath/ContextPathMappingPlugin.java",
        "name": "org.dromara.soul.plugin.contextpath.ContextPathMappingPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "final String handle = rule.getHandle();",
                "type": "DELETE",
                "lineNo": 49
              },
              {
                "line": "final ContextMappingHandle contextMappingHandle = GsonUtils.getInstance().fromJson(handle, ContextMappingHandle.class);",
                "type": "DELETE",
                "lineNo": 50
              }
            ],
            "targetChanges": [
              {
                "line": "final ContextMappingHandle contextMappingHandle = ApplicationConfigCache.getInstance().obtainHandle(ContextPathMappingPluginDataHandler.getCacheKeyName(rule));",
                "type": "ADD",
                "lineNo": 50
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String handle"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.RuleData rule"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHandle()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.ContextMappingHandle contextMappingHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.ContextMappingHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String handle"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.ContextMappingHandle contextMappingHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.ContextMappingHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.base.cache.BaseHandleCache.obtainHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.contextpath.cache.ApplicationConfigCache.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.contextpath.cache.ApplicationConfigCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.contextpath.cache.ApplicationConfigCache.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.base.cache.BaseHandleCache.obtainHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.contextpath.handler.ContextPathMappingPluginDataHandler.getCacheKeyName(RuleData)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.contextpath.handler.ContextPathMappingPluginDataHandler"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.contextpath.handler.ContextPathMappingPluginDataHandler.getCacheKeyName(RuleData)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.RuleData rule"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-plugin/soul-plugin-context-path/src/test/java/org/dromara/soul/plugin/contextpath/ContextPathMappingPluginTest.java",
        "aPath": "soul-plugin/soul-plugin-context-path/src/test/java/org/dromara/soul/plugin/contextpath/ContextPathMappingPluginTest.java",
        "name": "org.dromara.soul.plugin.contextpath.ContextPathMappingPluginTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "ApplicationConfigCache.getInstance().cachedHandle(ContextPathMappingPluginDataHandler.getCacheKeyName(ruleData), contextMappingHandle);",
                "type": "ADD",
                "lineNo": 89
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.base.cache.BaseHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.contextpath.cache.ApplicationConfigCache.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.contextpath.cache.ApplicationConfigCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.contextpath.cache.ApplicationConfigCache.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.base.cache.BaseHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.contextpath.handler.ContextPathMappingPluginDataHandler.getCacheKeyName(RuleData)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.contextpath.handler.ContextPathMappingPluginDataHandler"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.contextpath.handler.ContextPathMappingPluginDataHandler.getCacheKeyName(RuleData)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.ContextMappingHandle contextMappingHandle"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "ApplicationConfigCache.getInstance().cachedHandle(ContextPathMappingPluginDataHandler.getCacheKeyName(ruleData), contextMappingHandle);",
                "type": "ADD",
                "lineNo": 104
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.base.cache.BaseHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.contextpath.cache.ApplicationConfigCache.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.contextpath.cache.ApplicationConfigCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.contextpath.cache.ApplicationConfigCache.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.base.cache.BaseHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.contextpath.handler.ContextPathMappingPluginDataHandler.getCacheKeyName(RuleData)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.contextpath.handler.ContextPathMappingPluginDataHandler"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.contextpath.handler.ContextPathMappingPluginDataHandler.getCacheKeyName(RuleData)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.ContextMappingHandle contextMappingHandle"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "soul-plugin/soul-plugin-divide/src/main/java/org/dromara/soul/plugin/divide/DividePlugin.java",
        "aPath": "soul-plugin/soul-plugin-divide/src/main/java/org/dromara/soul/plugin/divide/DividePlugin.java",
        "name": "org.dromara.soul.plugin.divide.DividePlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "final DivideRuleHandle ruleHandle = GsonUtils.getInstance().fromJson(rule.getHandle(), DivideRuleHandle.class);",
                "type": "DELETE",
                "lineNo": 58
              }
            ],
            "targetChanges": [
              {
                "line": "final DivideRuleHandle ruleHandle = UpstreamCacheManager.getInstance().obtainHandle(DividePluginDataHandler.getCacheKeyName(rule));",
                "type": "ADD",
                "lineNo": 58
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle ruleHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "getHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.RuleData rule"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHandle()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle ruleHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.base.cache.BaseHandleCache.obtainHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.base.cache.BaseHandleCache.obtainHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.divide.handler.DividePluginDataHandler.getCacheKeyName(RuleData)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.divide.handler.DividePluginDataHandler"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.divide.handler.DividePluginDataHandler.getCacheKeyName(RuleData)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.RuleData rule"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-plugin/soul-plugin-divide/src/main/java/org/dromara/soul/plugin/divide/cache/UpstreamCacheManager.java",
        "aPath": "soul-plugin/soul-plugin-divide/src/main/java/org/dromara/soul/plugin/divide/cache/UpstreamCacheManager.java",
        "name": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public final class UpstreamCacheManager {",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "public final class UpstreamCacheManager extends BaseHandleCache<String, DivideRuleHandle> {",
                "type": "ADD",
                "lineNo": 43
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.base.cache.BaseHandleCache"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-plugin/soul-plugin-divide/src/main/java/org/dromara/soul/plugin/divide/handler/DividePluginDataHandler.java",
        "aPath": "soul-plugin/soul-plugin-divide/src/main/java/org/dromara/soul/plugin/divide/handler/DividePluginDataHandler.java",
        "name": "org.dromara.soul.plugin.divide.handler.DividePluginDataHandler",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "public void handlerRule(final RuleData ruleData) {",
                "type": "ADD",
                "lineNo": 46
              },
              {
                "line": "Optional.ofNullable(ruleData.getHandle()).ifPresent(s -> {",
                "type": "ADD",
                "lineNo": 47
              },
              {
                "line": "final DivideRuleHandle divideRuleHandle = GsonUtils.getInstance().fromJson(s, DivideRuleHandle.class);",
                "type": "ADD",
                "lineNo": 48
              },
              {
                "line": "UpstreamCacheManager.getInstance().cachedHandle(getCacheKeyName(ruleData), divideRuleHandle);",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 53
              },
              {
                "line": "public void removeRule(final RuleData ruleData) {",
                "type": "ADD",
                "lineNo": 54
              },
              {
                "line": "Optional.ofNullable(ruleData.getHandle()).ifPresent(s -> {",
                "type": "ADD",
                "lineNo": 55
              },
              {
                "line": "UpstreamCacheManager.getInstance().removeHandle(getCacheKeyName(ruleData));",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 58
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 60
              },
              {
                "line": "* return rule handle cache key name.",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "* @param ruleData ruleData",
                "type": "ADD",
                "lineNo": 63
              },
              {
                "line": "* @return string string",
                "type": "ADD",
                "lineNo": 64
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 65
              },
              {
                "line": "public static String getCacheKeyName(final RuleData ruleData) {",
                "type": "ADD",
                "lineNo": 66
              },
              {
                "line": "return ruleData.getSelectorId() + \"_\" + ruleData.getName();",
                "type": "ADD",
                "lineNo": 67
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 68
              },
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 70
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.plugin.divide.handler.DividePluginDataHandler.handlerRule(RuleData)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.RuleData"
              },
              {
                "type": "CtInvocation",
                "value": "ifPresent()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "getHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHandle()"
              },
              {
                "type": "CtExecutableReference",
                "value": "ifPresent()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> s"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle divideRuleHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "fromJson()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "fromJson()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> s"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> s"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "cachedHandle()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "cachedHandle()"
              },
              {
                "type": "CtInvocation",
                "value": "getCacheKeyName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getCacheKeyName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle divideRuleHandle"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle divideRuleHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle"
              },
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.plugin.divide.handler.DividePluginDataHandler.removeRule(RuleData)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.RuleData"
              },
              {
                "type": "CtInvocation",
                "value": "ifPresent()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "getHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHandle()"
              },
              {
                "type": "CtExecutableReference",
                "value": "ifPresent()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> s"
              },
              {
                "type": "CtInvocation",
                "value": "removeHandle()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "removeHandle()"
              },
              {
                "type": "CtInvocation",
                "value": "getCacheKeyName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getCacheKeyName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtParameterReference",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.plugin.divide.handler.DividePluginDataHandler.getCacheKeyName(RuleData)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.RuleData"
              },
              {
                "type": "CtInvocation",
                "value": "getSelectorId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getSelectorId()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '_'"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-plugin/soul-plugin-divide/src/test/java/org/dromara/soul/plugin/divide/DividePluginTest.java",
        "aPath": "soul-plugin/soul-plugin-divide/src/test/java/org/dromara/soul/plugin/divide/DividePluginTest.java",
        "name": "org.dromara.soul.plugin.divide.DividePluginTest",
        "hunks": [
          {
            "targetChanges": [],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "when(ruleData.getHandle()).thenReturn(GsonUtils.getGson().toJson(handle));",
                "type": "DELETE",
                "lineNo": 147
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "getHandle()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHandle()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.gson.Gson.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getGson()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getGson()"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.gson.Gson.toJson(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle handle"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "DivideRuleHandle divideRuleHandle = GsonUtils.getInstance().fromJson(GsonUtils.getGson().toJson(handle), DivideRuleHandle.class);",
                "type": "ADD",
                "lineNo": 150
              },
              {
                "line": "UpstreamCacheManager.getInstance().cachedHandle(DividePluginDataHandler.getCacheKeyName(ruleData), divideRuleHandle);",
                "type": "ADD",
                "lineNo": 151
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle divideRuleHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.gson.Gson.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getGson()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getGson()"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.gson.Gson.toJson(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle handle"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.base.cache.BaseHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.divide.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.base.cache.BaseHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.divide.handler.DividePluginDataHandler.getCacheKeyName(RuleData)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.divide.handler.DividePluginDataHandler"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.divide.handler.DividePluginDataHandler.getCacheKeyName(RuleData)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.dto.RuleData ruleData"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.convert.rule.impl.DivideRuleHandle divideRuleHandle"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-context-path/src/main/java/org/dromara/soul/springboot/starter/plugin/contextpath/ContextPathMappingPluginConfiguration.java",
        "aPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-context-path/src/main/java/org/dromara/soul/springboot/starter/plugin/contextpath/ContextPathMappingPluginConfiguration.java",
        "name": "org.dromara.soul.springboot.starter.plugin.contextpath.ContextPathMappingPluginConfiguration",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 45
              },
              {
                "line": "* Context path mapping plugin data handler plugin data handler.",
                "type": "ADD",
                "lineNo": 46
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 47
              },
              {
                "line": "* @return the plugin data handler",
                "type": "ADD",
                "lineNo": 48
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "@Bean",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "public PluginDataHandler contextPathMappingPluginDataHandler() {",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "return new ContextPathMappingPluginDataHandler();",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 53
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.springboot.starter.plugin.contextpath.ContextPathMappingPluginConfiguration.contextPathMappingPluginDataHandler()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.base.handler.PluginDataHandler"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.plugin.contextpath.handler.ContextPathMappingPluginDataHandler.ContextPathMappingPluginDataHandler()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.contextpath.handler.ContextPathMappingPluginDataHandler"
              }
            ]
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "d6caa0a5c",
    "aCommit": "bae0e5a68",
    "changes": [
      {
        "bPath": "soul-client/soul-client-sofa/src/main/java/org/dromara/soul/client/sofa/SofaServiceBeanPostProcessor.java",
        "aPath": "soul-client/soul-client-sofa/src/main/java/org/dromara/soul/client/sofa/SofaServiceBeanPostProcessor.java",
        "name": "org.dromara.soul.client.sofa.SofaServiceBeanPostProcessor",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "private final Pattern pattern = Pattern.compile(\"(?<=<).*?(?=>)\");",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.util.regex.Pattern pattern"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.regex.Pattern"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.regex.Pattern.compile(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.regex.Pattern"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.regex.Pattern.compile(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '(?<=<).*?(?=>)'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "String parameterTypes = Arrays.stream(parameterTypesClazz).map(Class::getName)",
                "type": "DELETE",
                "lineNo": 113
              },
              {
                "line": ".collect(Collectors.joining(\",\"));",
                "type": "DELETE",
                "lineNo": 114
              }
            ],
            "targetChanges": [
              {
                "line": "String parameterTypes = Arrays.stream(parameterTypesClazz).map(Class::getName).collect(Collectors.joining(\",\"));",
                "type": "ADD",
                "lineNo": 120
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Arrays.stream(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Arrays"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Arrays.stream(Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "Class[] parameterTypesClazz"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.lang.Class.getName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.getName()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Class"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.joining(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.joining(CharSequence)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ','"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Arrays.stream(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Arrays"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Arrays.stream(Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "Class[] parameterTypesClazz"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.lang.Class.getName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.getName()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Class"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.joining(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.joining(CharSequence)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ','"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".parameterTypes(parameterTypes)",
                "type": "DELETE",
                "lineNo": 123
              }
            ],
            "targetChanges": [
              {
                "line": ".parameterTypes(parameterTypes + getGenericParameterTypes(method))",
                "type": "ADD",
                "lineNo": 129
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "parameterTypes(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String parameterTypes"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "parameterTypes(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.client.sofa.SofaServiceBeanPostProcessor.getGenericParameterTypes(Method)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.client.sofa.SofaServiceBeanPostProcessor.getGenericParameterTypes(Method)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Method method"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private String getGenericParameterTypes(final Method method) {",
                "type": "ADD",
                "lineNo": 137
              },
              {
                "line": "Type[] types = method.getGenericParameterTypes();",
                "type": "ADD",
                "lineNo": 138
              },
              {
                "line": "String genericParameterTypes = Arrays.stream(types).map(Type::getTypeName).collect(Collectors.joining(\",\"));",
                "type": "ADD",
                "lineNo": 139
              },
              {
                "line": "Matcher matcher = pattern.matcher(genericParameterTypes);",
                "type": "ADD",
                "lineNo": 140
              },
              {
                "line": "List<String> list = new LinkedList<>();",
                "type": "ADD",
                "lineNo": 141
              },
              {
                "line": "while (matcher.find()) {",
                "type": "ADD",
                "lineNo": 142
              },
              {
                "line": "String type = matcher.group();",
                "type": "ADD",
                "lineNo": 143
              },
              {
                "line": "if (!type.startsWith(\"java\")) {",
                "type": "ADD",
                "lineNo": 144
              },
              {
                "line": "list.add(type);",
                "type": "ADD",
                "lineNo": 145
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 146
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 147
              },
              {
                "line": "if (list.isEmpty()) {",
                "type": "ADD",
                "lineNo": 148
              },
              {
                "line": "return \"\";",
                "type": "ADD",
                "lineNo": 149
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 150
              },
              {
                "line": "return \"#\" + String.join(\",\", list);",
                "type": "ADD",
                "lineNo": 151
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 152
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.client.sofa.SofaServiceBeanPostProcessor.getGenericParameterTypes(Method)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.reflect.Method method"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.Method"
              },
              {
                "type": "CtLocalVariable",
                "value": "Type[] types"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "Type[]"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Method.getGenericParameterTypes()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Method method"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Method.getGenericParameterTypes()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String genericParameterTypes"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Arrays.stream(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Arrays"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Arrays.stream(Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "Type[] types"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.lang.reflect.Type.getTypeName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Type.getTypeName()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.reflect.Type"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.joining(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.joining(CharSequence)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ','"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.regex.Matcher matcher"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.regex.Matcher"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.regex.Pattern.matcher(CharSequence)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.regex.Pattern pattern"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.regex.Pattern.matcher(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String genericParameterTypes"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List list"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.LinkedList.LinkedList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.LinkedList"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.regex.Matcher.find()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.regex.Matcher matcher"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.regex.Matcher.find()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String type"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.regex.Matcher.group()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.regex.Matcher matcher"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.regex.Matcher.group()"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.startsWith(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String type"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.startsWith(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'java'"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List list"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String type"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.isEmpty()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List list"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.isEmpty()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '#'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.join(CharSequence,Iterable)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.join(CharSequence,Iterable)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ','"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List list"
              }
            ]
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-examples/soul-examples-sofa/src/main/java/org/dromara/soul/examples/sofa/service/TestSofaApplication.java",
        "aPath": "soul-examples/soul-examples-sofa/soul-examples-sofa-service/src/main/java/org/dromara/soul/examples/sofa/service/TestSofaApplication.java",
        "name": "org.dromara.soul.examples.sofa.service.TestSofaApplication",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* Sofa service starter.",
                "type": "ADD",
                "lineNo": 25
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 26
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "@ImportResource({ \"classpath*:invoke-server-example.xml\"})",
                "type": "DELETE",
                "lineNo": 28
              }
            ],
            "targetChanges": [
              {
                "line": "@ImportResource(locations = { \"classpath*:invoke-server-example.xml\"})",
                "type": "ADD",
                "lineNo": 30
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.ImportResource"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'classpath*:invoke-server-example.xml'"
              }
            ],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.ImportResource"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'classpath*:invoke-server-example.xml'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-examples/soul-examples-sofa/src/main/java/org/dromara/soul/examples/sofa/service/impl/SofaTestServiceImpl.java",
        "aPath": "soul-examples/soul-examples-sofa/soul-examples-sofa-service/src/main/java/org/dromara/soul/examples/sofa/service/impl/SofaSingleParamServiceImpl.java",
        "name": "org.dromara.soul.examples.sofa.service.impl.SofaTestServiceImpl",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* Sofa single param service.",
                "type": "ADD",
                "lineNo": 28
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 29
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "* @author wuudongdong",
                "type": "ADD",
                "lineNo": 31
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "@Service(\"sofaTestService\")",
                "type": "DELETE",
                "lineNo": 30
              },
              {
                "line": "public class SofaTestServiceImpl implements DubboTestService {",
                "type": "DELETE",
                "lineNo": 31
              }
            ],
            "targetChanges": [
              {
                "line": "@Service(\"sofaSingleParamService\")",
                "type": "ADD",
                "lineNo": 33
              },
              {
                "line": "public class SofaSingleParamServiceImpl implements SofaSingleParamService {",
                "type": "ADD",
                "lineNo": 34
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.dromara.soul.examples.sofa.service.impl.SofaTestServiceImpl"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.stereotype.Service"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'sofaTestService'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.dubbo.api.service.DubboTestService"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.dromara.soul.examples.sofa.service.impl.SofaSingleParamServiceImpl"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.stereotype.Service"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'sofaSingleParamService'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.sofa.api.service.SofaSingleParamService"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public DubboTest findById(final String id) {",
                "type": "DELETE",
                "lineNo": 35
              },
              {
                "line": "DubboTest dubboTest = new DubboTest();",
                "type": "DELETE",
                "lineNo": 36
              },
              {
                "line": "dubboTest.setId(id);",
                "type": "DELETE",
                "lineNo": 37
              },
              {
                "line": "dubboTest.setName(\"hello world Soul Sofa, findById\");",
                "type": "DELETE",
                "lineNo": 38
              },
              {
                "line": "return dubboTest;",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "public SofaSimpleTypeBean findById(final String id) {",
                "type": "ADD",
                "lineNo": 38
              },
              {
                "line": "SofaSimpleTypeBean sofaSimpleTypeBean = new SofaSimpleTypeBean();",
                "type": "ADD",
                "lineNo": 39
              },
              {
                "line": "sofaSimpleTypeBean.setId(id);",
                "type": "ADD",
                "lineNo": 40
              },
              {
                "line": "sofaSimpleTypeBean.setName(\"hello world Soul Sofa, findById\");",
                "type": "ADD",
                "lineNo": 41
              },
              {
                "line": "return sofaSimpleTypeBean;",
                "type": "ADD",
                "lineNo": 42
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.examples.sofa.service.impl.SofaTestServiceImpl.findById(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String id"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest dubboTest"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest.DubboTest()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest"
              },
              {
                "type": "CtInvocation",
                "value": "setId(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest dubboTest"
              },
              {
                "type": "CtExecutableReference",
                "value": "setId(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String id"
              },
              {
                "type": "CtInvocation",
                "value": "setName(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest dubboTest"
              },
              {
                "type": "CtExecutableReference",
                "value": "setName(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'hello world Soul Sofa, findById'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest dubboTest"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.examples.sofa.service.impl.SofaSingleParamServiceImpl.findById(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String id"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean sofaSimpleTypeBean"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean.SofaSimpleTypeBean()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean"
              },
              {
                "type": "CtInvocation",
                "value": "setId(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean sofaSimpleTypeBean"
              },
              {
                "type": "CtExecutableReference",
                "value": "setId(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String id"
              },
              {
                "type": "CtInvocation",
                "value": "setName(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean sofaSimpleTypeBean"
              },
              {
                "type": "CtExecutableReference",
                "value": "setName(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'hello world Soul Sofa, findById'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean sofaSimpleTypeBean"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public DubboTest findAll() {",
                "type": "DELETE",
                "lineNo": 44
              },
              {
                "line": "DubboTest dubboTest = new DubboTest();",
                "type": "DELETE",
                "lineNo": 45
              },
              {
                "line": "dubboTest.setName(\"hello world Soul Sofa , findAll\");",
                "type": "DELETE",
                "lineNo": 46
              },
              {
                "line": "dubboTest.setId(String.valueOf(new Random().nextInt()));",
                "type": "DELETE",
                "lineNo": 47
              },
              {
                "line": "return dubboTest;",
                "type": "DELETE",
                "lineNo": 48
              }
            ],
            "targetChanges": [
              {
                "line": "public SofaSimpleTypeBean findAll() {",
                "type": "ADD",
                "lineNo": 47
              },
              {
                "line": "SofaSimpleTypeBean sofaSimpleTypeBean = new SofaSimpleTypeBean();",
                "type": "ADD",
                "lineNo": 48
              },
              {
                "line": "sofaSimpleTypeBean.setName(\"hello world Soul Sofa , findAll\");",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "sofaSimpleTypeBean.setId(String.valueOf(new Random().nextInt()));",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "return sofaSimpleTypeBean;",
                "type": "ADD",
                "lineNo": 51
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.examples.sofa.service.impl.SofaTestServiceImpl.findAll()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest dubboTest"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest.DubboTest()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest"
              },
              {
                "type": "CtInvocation",
                "value": "setName(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest dubboTest"
              },
              {
                "type": "CtExecutableReference",
                "value": "setName(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'hello world Soul Sofa , findAll'"
              },
              {
                "type": "CtInvocation",
                "value": "setId(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest dubboTest"
              },
              {
                "type": "CtExecutableReference",
                "value": "setId(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.valueOf(int)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.valueOf(int)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Random.nextInt()"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.Random.Random()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Random"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Random.nextInt()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest dubboTest"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.examples.sofa.service.impl.SofaSingleParamServiceImpl.findAll()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean sofaSimpleTypeBean"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean.SofaSimpleTypeBean()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean"
              },
              {
                "type": "CtInvocation",
                "value": "setName(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean sofaSimpleTypeBean"
              },
              {
                "type": "CtExecutableReference",
                "value": "setName(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'hello world Soul Sofa , findAll'"
              },
              {
                "type": "CtInvocation",
                "value": "setId(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean sofaSimpleTypeBean"
              },
              {
                "type": "CtExecutableReference",
                "value": "setId(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.valueOf(int)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.valueOf(int)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Random.nextInt()"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.Random.Random()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Random"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Random.nextInt()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean sofaSimpleTypeBean"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public DubboTest insert(final DubboTest dubboTest) {",
                "type": "DELETE",
                "lineNo": 53
              },
              {
                "line": "dubboTest.setName(\"hello world Soul Sofa: \" + dubboTest.getName());",
                "type": "DELETE",
                "lineNo": 54
              },
              {
                "line": "return dubboTest;",
                "type": "DELETE",
                "lineNo": 55
              }
            ],
            "targetChanges": [
              {
                "line": "public SofaSimpleTypeBean insert(final SofaSimpleTypeBean sofaSimpleTypeBean) {",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "sofaSimpleTypeBean.setName(\"hello world Soul Sofa: \" + sofaSimpleTypeBean.getName());",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "return sofaSimpleTypeBean;",
                "type": "ADD",
                "lineNo": 58
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.examples.sofa.service.impl.SofaTestServiceImpl.insert(DubboTest)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest"
              },
              {
                "type": "CtParameter",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest dubboTest"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest"
              },
              {
                "type": "CtInvocation",
                "value": "setName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest dubboTest"
              },
              {
                "type": "CtExecutableReference",
                "value": "setName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'hello world Soul Sofa: '"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest dubboTest"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.dubbo.api.entity.DubboTest dubboTest"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.examples.sofa.service.impl.SofaSingleParamServiceImpl.insert(SofaSimpleTypeBean)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean"
              },
              {
                "type": "CtParameter",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean sofaSimpleTypeBean"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean"
              },
              {
                "type": "CtInvocation",
                "value": "setName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean sofaSimpleTypeBean"
              },
              {
                "type": "CtExecutableReference",
                "value": "setName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'hello world Soul Sofa: '"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean sofaSimpleTypeBean"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.examples.sofa.api.entity.SofaSimpleTypeBean sofaSimpleTypeBean"
              }
            ]
          },
          {
            "targetChanges": [],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-plugin/soul-plugin-sofa/src/main/java/org/dromara/soul/plugin/sofa/proxy/SofaProxyService.java",
        "aPath": "soul-plugin/soul-plugin-sofa/src/main/java/org/dromara/soul/plugin/sofa/proxy/SofaProxyService.java",
        "name": "org.dromara.soul.plugin.sofa.proxy.SofaProxyService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "genericService.$invoke(metaData.getMethodName(), pair.getLeft(), pair.getRight());",
                "type": "DELETE",
                "lineNo": 100
              }
            ],
            "targetChanges": [
              {
                "line": "genericService.$genericInvoke(metaData.getMethodName(), pair.getLeft(), pair.getRight());",
                "type": "ADD",
                "lineNo": 101
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "$invoke(java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alipay.sofa.rpc.api.GenericService genericService"
              },
              {
                "type": "CtExecutableReference",
                "value": "$invoke(java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtInvocation",
                "value": "getMethodName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMethodName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getRight()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getRight()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "$genericInvoke(java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alipay.sofa.rpc.api.GenericService genericService"
              },
              {
                "type": "CtExecutableReference",
                "value": "$genericInvoke(java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtInvocation",
                "value": "getMethodName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMethodName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getRight()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getRight()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.SOFA_RPC_RESULT, ret);",
                "type": "DELETE",
                "lineNo": 105
              }
            ],
            "targetChanges": [
              {
                "line": "GenericObject genericObject = (GenericObject) ret;",
                "type": "ADD",
                "lineNo": 107
              },
              {
                "line": "exchange.getAttributes().put(Constants.SOFA_RPC_RESULT, genericObject.getFields());",
                "type": "ADD",
                "lineNo": 108
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "put()"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.SOFA_RPC_RESULT"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> ret"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> ret"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "com.alipay.hessian.generic.model.GenericObject genericObject"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alipay.hessian.generic.model.GenericObject"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> ret"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alipay.hessian.generic.model.GenericObject"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> ret"
              },
              {
                "type": "CtInvocation",
                "value": "put()"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.SOFA_RPC_RESULT"
              },
              {
                "type": "CtInvocation",
                "value": "getFields()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alipay.hessian.generic.model.GenericObject genericObject"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "com.alipay.hessian.generic.model.GenericObject genericObject"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alipay.hessian.generic.model.GenericObject"
              },
              {
                "type": "CtExecutableReference",
                "value": "getFields()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-plugin/soul-plugin-sofa/src/test/java/org/dromara/soul/plugin/sofa/proxy/SofaProxyServiceTest.java",
        "aPath": "soul-plugin/soul-plugin-sofa/src/test/java/org/dromara/soul/plugin/sofa/proxy/SofaProxyServiceTest.java",
        "name": "org.dromara.soul.plugin.sofa.proxy.SofaProxyServiceTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(genericService.$invoke(METHOD_NAME, LEFT, RIGHT)).thenReturn(null);",
                "type": "DELETE",
                "lineNo": 86
              }
            ],
            "targetChanges": [
              {
                "line": "when(genericService.$genericInvoke(METHOD_NAME, LEFT, RIGHT)).thenReturn(null);",
                "type": "ADD",
                "lineNo": 86
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "$invoke(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alipay.sofa.rpc.api.GenericService genericService"
              },
              {
                "type": "CtExecutableReference",
                "value": "$invoke(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String METHOD_NAME"
              },
              {
                "type": "CtFieldRead",
                "value": "String[] LEFT"
              },
              {
                "type": "CtFieldRead",
                "value": "Object[] RIGHT"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "$genericInvoke(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alipay.sofa.rpc.api.GenericService genericService"
              },
              {
                "type": "CtExecutableReference",
                "value": "$genericInvoke(java.lang.String,java.lang.String[],java.lang.Object[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String METHOD_NAME"
              },
              {
                "type": "CtFieldRead",
                "value": "String[] LEFT"
              },
              {
                "type": "CtFieldRead",
                "value": "Object[] RIGHT"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "soul-web/src/main/java/org/dromara/soul/web/rpc/DefaultSofaParamResolveServiceImpl.java",
        "aPath": "soul-web/src/main/java/org/dromara/soul/web/rpc/DefaultSofaParamResolveServiceImpl.java",
        "name": "org.dromara.soul.web.rpc.DefaultSofaParamResolveServiceImpl",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* @author wuudongdong",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "return RpcParamUtils.buildParameters(body, parameterTypes);",
                "type": "DELETE",
                "lineNo": 33
              }
            ],
            "targetChanges": [
              {
                "line": "String[] parameterTypesAndGeneric = StringUtils.split(parameterTypes, \"#\");",
                "type": "ADD",
                "lineNo": 46
              },
              {
                "line": "String[] parameters = StringUtils.split(parameterTypesAndGeneric[0], \",\");",
                "type": "ADD",
                "lineNo": 47
              },
              {
                "line": "if (isSingleCustomizeType(parameters)) {",
                "type": "ADD",
                "lineNo": 48
              },
              {
                "line": "return RpcParamUtils.buildSingleParameter(body, parameterTypes);",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "LinkedList<String> genericTypes = new LinkedList<>();",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "if (parameterTypesAndGeneric.length > 1) {",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "genericTypes.addAll(Arrays.asList(StringUtils.split(parameterTypesAndGeneric[1], \",\")));",
                "type": "ADD",
                "lineNo": 53
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 54
              },
              {
                "line": "Map<String, Object> paramMap = GsonUtils.getInstance().toObjectMap(body);",
                "type": "ADD",
                "lineNo": 55
              },
              {
                "line": "Object[] objects = paramMap.values().stream().map(each -> {",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "if (each instanceof JsonObject) {",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "return GsonUtils.getInstance().convertToMap(each.toString());",
                "type": "ADD",
                "lineNo": 58
              },
              {
                "line": "} else if (each instanceof JsonArray) {",
                "type": "ADD",
                "lineNo": 59
              },
              {
                "line": "if (genericTypes.isEmpty()) {",
                "type": "ADD",
                "lineNo": 60
              },
              {
                "line": "return GsonUtils.getInstance().fromList(each.toString(), Object.class);",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "String type = genericTypes.pop();",
                "type": "ADD",
                "lineNo": 63
              },
              {
                "line": "return convertToGenericObjects(type, each);",
                "type": "ADD",
                "lineNo": 64
              },
              {
                "line": "} else {",
                "type": "ADD",
                "lineNo": 65
              },
              {
                "line": "return each;",
                "type": "ADD",
                "lineNo": 66
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 67
              },
              {
                "line": "}).toArray();",
                "type": "ADD",
                "lineNo": 68
              },
              {
                "line": "return new ImmutablePair<>(parameters, objects);",
                "type": "ADD",
                "lineNo": 69
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.base.utils.RpcParamUtils.buildParameters(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.base.utils.RpcParamUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.base.utils.RpcParamUtils.buildParameters(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String body"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String parameterTypes"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "String[] parameterTypesAndGeneric"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.split(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.split(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '#'"
              },
              {
                "type": "CtLocalVariable",
                "value": "String[] parameters"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.split(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.split(String,String)"
              },
              {
                "type": "CtArrayRead",
                "value": "String[] parameterTypesAndGeneric"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] parameterTypesAndGeneric"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ','"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.web.rpc.DefaultSofaParamResolveServiceImpl.isSingleCustomizeType(String[])"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.web.rpc.DefaultSofaParamResolveServiceImpl.isSingleCustomizeType(String[])"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] parameters"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.base.utils.RpcParamUtils.buildSingleParameter(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.plugin.base.utils.RpcParamUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.base.utils.RpcParamUtils.buildSingleParameter(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String body"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.LinkedList genericTypes"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.LinkedList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.LinkedList.LinkedList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.LinkedList"
              },
              {
                "type": "CtFieldRead",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] parameterTypesAndGeneric"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "String[] parameterTypesAndGeneric"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.LinkedList.addAll(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.LinkedList genericTypes"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.LinkedList.addAll(Collection)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Arrays.asList(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Arrays"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Arrays.asList(Object[])"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.split(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.split(String,String)"
              },
              {
                "type": "CtArrayRead",
                "value": "String[] parameterTypesAndGeneric"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] parameterTypesAndGeneric"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ','"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.Map paramMap"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.toObjectMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.toObjectMap(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String body"
              },
              {
                "type": "CtLocalVariable",
                "value": "Object[] objects"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "Object[]"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.toArray()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.values()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map paramMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.values()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Object each"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object each"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.gson.JsonObject"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.gson.JsonObject"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.convertToMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.convertToMap(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.toString()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object each"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.toString()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object each"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.gson.JsonArray"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.gson.JsonArray"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.AbstractCollection.isEmpty()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.LinkedList genericTypes"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.AbstractCollection.isEmpty()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.fromList(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.fromList(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.toString()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object each"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.toString()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String type"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.LinkedList.pop()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.LinkedList genericTypes"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.LinkedList.pop()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.web.rpc.DefaultSofaParamResolveServiceImpl.convertToGenericObjects(String,Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.web.rpc.DefaultSofaParamResolveServiceImpl.convertToGenericObjects(String,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String type"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object each"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object each"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.toArray()"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.commons.lang3.tuple.ImmutablePair.ImmutablePair(Object,Object)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.commons.lang3.tuple.ImmutablePair"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] parameters"
              },
              {
                "type": "CtVariableRead",
                "value": "Object[] objects"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "* Convert to GenericObject.",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "* @param type generic type.",
                "type": "ADD",
                "lineNo": 75
              },
              {
                "line": "* @param param actual parameter.",
                "type": "ADD",
                "lineNo": 76
              },
              {
                "line": "* @return list of GenericObject.",
                "type": "ADD",
                "lineNo": 77
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": "@SuppressWarnings(\"all\")",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "private static List<GenericObject> convertToGenericObjects(final String type, final Object param) {",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "List<Map> mapList = GsonUtils.getInstance().fromList(param.toString(), Map.class);",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "return mapList.stream().map(map -> {",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "GenericObject genericObject = new GenericObject(type);",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "map.forEach((key, value) -> genericObject.putField((String) key, value));",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "return genericObject;",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "}).collect(Collectors.toList());",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "* only one parameter which is customized type.",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "* @param parameter parameter array.",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "* @return only one parameter and it's customized type return true otherwise return false.",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "private static boolean isSingleCustomizeType(final String[] parameter) {",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "return parameter.length == 1 && !parameter[0].startsWith(\"java\") && !parameter[0].startsWith(\"[Ljava\");",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 97
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.web.rpc.DefaultSofaParamResolveServiceImpl.convertToGenericObjects(String,Object)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.SuppressWarnings"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'all'"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alipay.hessian.generic.model.GenericObject"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String type"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Object param"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List mapList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.fromList(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.common.utils.GsonUtils.fromList(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.toString()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object param"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.toString()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "collect(java.util.stream.Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List mapList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Map map"
              },
              {
                "type": "CtLocalVariable",
                "value": "com.alipay.hessian.generic.model.GenericObject genericObject"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alipay.hessian.generic.model.GenericObject"
              },
              {
                "type": "CtConstructorCall",
                "value": "com.alipay.hessian.generic.model.GenericObject(java.lang.String)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alipay.hessian.generic.model.GenericObject"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String type"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map map"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Object key"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Object value"
              },
              {
                "type": "CtInvocation",
                "value": "putField(java.lang.String,java.lang.Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alipay.hessian.generic.model.GenericObject genericObject"
              },
              {
                "type": "CtExecutableReference",
                "value": "putField(java.lang.String,java.lang.Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object key"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object value"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alipay.hessian.generic.model.GenericObject genericObject"
              },
              {
                "type": "CtExecutableReference",
                "value": "collect(java.util.stream.Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.web.rpc.DefaultSofaParamResolveServiceImpl.isSingleCustomizeType(String[])"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtParameter",
                "value": "String[] parameter"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              },
              {
                "type": "CtFieldRead",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] parameter"
              },
              {
                "type": "CtParameterReference",
                "value": "String[] parameter"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.startsWith(String)"
              },
              {
                "type": "CtArrayRead",
                "value": "String[] parameter"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] parameter"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.startsWith(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'java'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.startsWith(String)"
              },
              {
                "type": "CtArrayRead",
                "value": "String[] parameter"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] parameter"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.startsWith(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '[Ljava'"
              }
            ]
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "7f472d7cb",
    "aCommit": "45da0168d",
    "changes": [
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/main/java/org/apache/shenyu/plugin/base/utils/ClientResponseUtils.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/main/java/org/apache/shenyu/plugin/base/utils/ResponseUtils.java",
        "name": "org.apache.shenyu.plugin.base.utils.ClientResponseUtils",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* ClientResponseUtils.",
                "type": "DELETE",
                "lineNo": 34
              }
            ],
            "targetChanges": [
              {
                "line": "* ResponseUtils.",
                "type": "ADD",
                "lineNo": 35
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public final class ClientResponseUtils {",
                "type": "DELETE",
                "lineNo": 36
              }
            ],
            "targetChanges": [
              {
                "line": "public final class ResponseUtils {",
                "type": "ADD",
                "lineNo": 37
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.base.utils.ClientResponseUtils"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private static final String CHUNKED = \"chunked\";",
                "type": "ADD",
                "lineNo": 39
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String CHUNKED"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'chunked'"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "* create CachedBodyOutputMessage.",
                "type": "ADD",
                "lineNo": 42
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 43
              },
              {
                "line": "* @param exchange ServerWebExchange",
                "type": "ADD",
                "lineNo": 44
              },
              {
                "line": "* @return CachedBodyOutputMessage.",
                "type": "ADD",
                "lineNo": 45
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 46
              },
              {
                "line": "public static CachedBodyOutputMessage newCachedBodyOutputMessage(final ServerWebExchange exchange) {",
                "type": "ADD",
                "lineNo": 47
              },
              {
                "line": "HttpHeaders headers = new HttpHeaders();",
                "type": "ADD",
                "lineNo": 48
              },
              {
                "line": "headers.putAll(exchange.getRequest().getHeaders());",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "headers.remove(HttpHeaders.CONTENT_LENGTH);",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "return new CachedBodyOutputMessage(exchange, headers);",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.newCachedBodyOutputMessage(ServerWebExchange)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.server.ServerWebExchange"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.springframework.http.HttpHeaders()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtInvocation",
                "value": "putAll()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtExecutableReference",
                "value": "putAll()"
              },
              {
                "type": "CtInvocation",
                "value": "getHeaders()"
              },
              {
                "type": "CtInvocation",
                "value": "getRequest()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRequest()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHeaders()"
              },
              {
                "type": "CtInvocation",
                "value": "remove()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtExecutableReference",
                "value": "remove()"
              },
              {
                "type": "CtTypeAccess",
                "value": "HttpHeaders.CONTENT_LENGTH"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.CachedBodyOutputMessage(ServerWebExchange,HttpHeaders)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Mono<DataBuffer> messageBody = DataBufferUtils.join(outputMessage.getBody());",
                "type": "DELETE",
                "lineNo": 61
              },
              {
                "line": "HttpHeaders headers = response.getHeaders();",
                "type": "DELETE",
                "lineNo": 62
              },
              {
                "line": "if (!headers.containsKey(HttpHeaders.TRANSFER_ENCODING)",
                "type": "DELETE",
                "lineNo": 63
              },
              {
                "line": "|| headers.containsKey(HttpHeaders.CONTENT_LENGTH)) {",
                "type": "DELETE",
                "lineNo": 64
              },
              {
                "line": "messageBody = messageBody.doOnNext(data -> headers.setContentLength(data.readableByteCount()));",
                "type": "DELETE",
                "lineNo": 65
              }
            ],
            "targetChanges": [
              {
                "line": "fixHeaders(response.getHeaders());",
                "type": "ADD",
                "lineNo": 77
              },
              {
                "line": "return DataBufferUtils.join(outputMessage.getBody());",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "* release source.",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "* @param outputMessage CachedBodyOutputMessage",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "* @param throwable Throwable",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "* @return Mono.",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "public static Mono<Void> release(final CachedBodyOutputMessage outputMessage, final Throwable throwable) {",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "if (outputMessage.getCache()) {",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "return outputMessage.getBody().map(DataBufferUtils::release).then(Mono.error(throwable));",
                "type": "ADD",
                "lineNo": 89
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "reactor.core.publisher.Mono messageBody"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.core.io.buffer.DataBuffer"
              },
              {
                "type": "CtInvocation",
                "value": "join(reactor.core.publisher.Flux)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.core.io.buffer.DataBufferUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "join(reactor.core.publisher.Flux)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getBody()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getBody()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtInvocation",
                "value": "getHeaders()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.server.reactive.ServerHttpResponse response"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHeaders()"
              },
              {
                "type": "CtInvocation",
                "value": "containsKey()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtExecutableReference",
                "value": "containsKey()"
              },
              {
                "type": "CtTypeAccess",
                "value": "HttpHeaders.TRANSFER_ENCODING"
              },
              {
                "type": "CtInvocation",
                "value": "containsKey()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtExecutableReference",
                "value": "containsKey()"
              },
              {
                "type": "CtTypeAccess",
                "value": "HttpHeaders.CONTENT_LENGTH"
              },
              {
                "type": "CtVariableWrite",
                "value": "reactor.core.publisher.Mono messageBody"
              },
              {
                "type": "CtInvocation",
                "value": "doOnNext()"
              },
              {
                "type": "CtVariableRead",
                "value": "reactor.core.publisher.Mono messageBody"
              },
              {
                "type": "CtExecutableReference",
                "value": "doOnNext()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> data"
              },
              {
                "type": "CtInvocation",
                "value": "setContentLength()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtExecutableReference",
                "value": "setContentLength()"
              },
              {
                "type": "CtInvocation",
                "value": "readableByteCount()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> data"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> data"
              },
              {
                "type": "CtExecutableReference",
                "value": "readableByteCount()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.fixHeaders(HttpHeaders)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.fixHeaders(HttpHeaders)"
              },
              {
                "type": "CtInvocation",
                "value": "getHeaders()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.server.reactive.ServerHttpResponse response"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHeaders()"
              },
              {
                "type": "CtInvocation",
                "value": "join(reactor.core.publisher.Flux)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.core.io.buffer.DataBufferUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "join(reactor.core.publisher.Flux)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getBody()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getBody()"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.release(CachedBodyOutputMessage,Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Throwable throwable"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Throwable"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getCache()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getCache()"
              },
              {
                "type": "CtInvocation",
                "value": "then()"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getBody()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getBody()"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "release()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils DataBufferUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "then()"
              },
              {
                "type": "CtInvocation",
                "value": "error(java.lang.Throwable)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.Throwable)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Throwable throwable"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return messageBody;",
                "type": "DELETE",
                "lineNo": 67
              }
            ],
            "targetChanges": [
              {
                "line": "return Mono.error(throwable);",
                "type": "ADD",
                "lineNo": 91
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "reactor.core.publisher.Mono messageBody"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "error(java.lang.Throwable)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.Throwable)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Throwable throwable"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "* ChunkedHeader.",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "* @param headers headers.",
                "type": "ADD",
                "lineNo": 97
              },
              {
                "line": "* @return chunked headers",
                "type": "ADD",
                "lineNo": 98
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 99
              },
              {
                "line": "public static HttpHeaders chunkedHeader(final HttpHeaders headers) {",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": "final HttpHeaders httpHeaders = new HttpHeaders();",
                "type": "ADD",
                "lineNo": 101
              },
              {
                "line": "httpHeaders.putAll(headers);",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "fixHeaders(httpHeaders);",
                "type": "ADD",
                "lineNo": 103
              },
              {
                "line": "return httpHeaders;",
                "type": "ADD",
                "lineNo": 104
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 105
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 107
              },
              {
                "line": "* fix headers.",
                "type": "ADD",
                "lineNo": 108
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 109
              },
              {
                "line": "* @param httpHeaders the headers",
                "type": "ADD",
                "lineNo": 110
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 111
              },
              {
                "line": "private static void fixHeaders(final HttpHeaders httpHeaders) {",
                "type": "ADD",
                "lineNo": 112
              },
              {
                "line": "httpHeaders.remove(HttpHeaders.CONTENT_LENGTH);",
                "type": "ADD",
                "lineNo": 113
              },
              {
                "line": "httpHeaders.set(HttpHeaders.TRANSFER_ENCODING, CHUNKED);",
                "type": "ADD",
                "lineNo": 114
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 115
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.chunkedHeader(HttpHeaders)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.http.HttpHeaders httpHeaders"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.springframework.http.HttpHeaders()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtInvocation",
                "value": "putAll(org.springframework.http.HttpHeaders)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders httpHeaders"
              },
              {
                "type": "CtExecutableReference",
                "value": "putAll(org.springframework.http.HttpHeaders)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.fixHeaders(HttpHeaders)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.fixHeaders(HttpHeaders)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders httpHeaders"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders httpHeaders"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.fixHeaders(HttpHeaders)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.http.HttpHeaders httpHeaders"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtInvocation",
                "value": "remove()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders httpHeaders"
              },
              {
                "type": "CtExecutableReference",
                "value": "remove()"
              },
              {
                "type": "CtTypeAccess",
                "value": "HttpHeaders.CONTENT_LENGTH"
              },
              {
                "type": "CtInvocation",
                "value": "set(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders httpHeaders"
              },
              {
                "type": "CtExecutableReference",
                "value": "set(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "HttpHeaders.TRANSFER_ENCODING"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CHUNKED"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/decorator/RequestDecorator.java",
        "aPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/decorator/CryptorRequestDecorator.java",
        "name": "org.apache.shenyu.plugin.cryptor.decorator.RequestDecorator",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class RequestDecorator extends ServerHttpRequestDecorator {",
                "type": "DELETE",
                "lineNo": 32
              }
            ],
            "targetChanges": [
              {
                "line": "public class CryptorRequestDecorator extends ServerHttpRequestDecorator {",
                "type": "ADD",
                "lineNo": 32
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.RequestDecorator"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.server.reactive.ServerHttpRequestDecorator"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.CryptorRequestDecorator"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.server.reactive.ServerHttpRequestDecorator"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public RequestDecorator(final ServerWebExchange exchange,",
                "type": "DELETE",
                "lineNo": 38
              },
              {
                "line": "final CachedBodyOutputMessage cachedBodyOutputMessage) {",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "public CryptorRequestDecorator(final ServerWebExchange exchange,",
                "type": "ADD",
                "lineNo": 38
              },
              {
                "line": "final CachedBodyOutputMessage cachedBodyOutputMessage) {",
                "type": "ADD",
                "lineNo": 39
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.RequestDecorator.RequestDecorator(ServerWebExchange,CachedBodyOutputMessage)"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.server.ServerWebExchange"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage cachedBodyOutputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.CryptorRequestDecorator.CryptorRequestDecorator(ServerWebExchange,CachedBodyOutputMessage)"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.server.ServerWebExchange"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage cachedBodyOutputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "HttpHeaders headers = new HttpHeaders();",
                "type": "DELETE",
                "lineNo": 54
              },
              {
                "line": "headers.putAll(exchange.getRequest().getHeaders());",
                "type": "DELETE",
                "lineNo": 55
              },
              {
                "line": "headers.remove(HttpHeaders.CONTENT_LENGTH);",
                "type": "DELETE",
                "lineNo": 56
              },
              {
                "line": "return HttpUtil.modifiedContentLength(headers);",
                "type": "DELETE",
                "lineNo": 57
              }
            ],
            "targetChanges": [
              {
                "line": "return ResponseUtils.chunkedHeader(this.exchange.getRequest().getHeaders());",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.springframework.http.HttpHeaders()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtInvocation",
                "value": "putAll()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtExecutableReference",
                "value": "putAll()"
              },
              {
                "type": "CtInvocation",
                "value": "getHeaders()"
              },
              {
                "type": "CtInvocation",
                "value": "getRequest()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRequest()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHeaders()"
              },
              {
                "type": "CtInvocation",
                "value": "remove()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtExecutableReference",
                "value": "remove()"
              },
              {
                "type": "CtTypeAccess",
                "value": "HttpHeaders.CONTENT_LENGTH"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.modifiedContentLength(HttpHeaders)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.modifiedContentLength(HttpHeaders)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.chunkedHeader(HttpHeaders)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.chunkedHeader(HttpHeaders)"
              },
              {
                "type": "CtInvocation",
                "value": "getHeaders()"
              },
              {
                "type": "CtInvocation",
                "value": "getRequest()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRequest()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHeaders()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/decorator/ResponseDecorator.java",
        "aPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/decorator/CryptorResponseDecorator.java",
        "name": "org.apache.shenyu.plugin.cryptor.decorator.ResponseDecorator",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class ResponseDecorator extends ServerHttpResponseDecorator {",
                "type": "DELETE",
                "lineNo": 44
              }
            ],
            "targetChanges": [
              {
                "line": "public class CryptorResponseDecorator extends ServerHttpResponseDecorator {",
                "type": "ADD",
                "lineNo": 45
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.ResponseDecorator"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.server.reactive.ServerHttpResponseDecorator"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.CryptorResponseDecorator"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.server.reactive.ServerHttpResponseDecorator"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public ResponseDecorator(final ServerWebExchange exchange,",
                "type": "DELETE",
                "lineNo": 50
              },
              {
                "line": "final CryptorRuleHandle ruleHandle) {",
                "type": "DELETE",
                "lineNo": 51
              }
            ],
            "targetChanges": [
              {
                "line": "public CryptorResponseDecorator(final ServerWebExchange exchange,",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "final CryptorRuleHandle ruleHandle) {",
                "type": "ADD",
                "lineNo": 52
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.ResponseDecorator.ResponseDecorator(ServerWebExchange,CryptorRuleHandle)"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.server.ServerWebExchange"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.CryptorResponseDecorator.CryptorResponseDecorator(ServerWebExchange,CryptorRuleHandle)"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.server.ServerWebExchange"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ClientResponse clientResponse = ClientResponseUtils.buildClientResponse(this.getDelegate(), body);",
                "type": "DELETE",
                "lineNo": 61
              }
            ],
            "targetChanges": [
              {
                "line": "ClientResponse clientResponse = ResponseUtils.buildClientResponse(this.getDelegate(), body);",
                "type": "ADD",
                "lineNo": 62
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.web.reactive.function.client.ClientResponse clientResponse"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.reactive.function.client.ClientResponse"
              },
              {
                "type": "CtInvocation",
                "value": "buildClientResponse(org.apache.shenyu.plugin.base.utils.ServerHttpResponse,org.reactivestreams.Publisher)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ClientResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "buildClientResponse(org.apache.shenyu.plugin.base.utils.ServerHttpResponse,org.reactivestreams.Publisher)"
              },
              {
                "type": "CtInvocation",
                "value": "getDelegate()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getDelegate()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.reactivestreams.Publisher body"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.reactive.function.client.ClientResponse"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.web.reactive.function.client.ClientResponse clientResponse"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.reactive.function.client.ClientResponse"
              },
              {
                "type": "CtInvocation",
                "value": "buildClientResponse(org.apache.shenyu.plugin.base.utils.ServerHttpResponse,org.reactivestreams.Publisher)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "buildClientResponse(org.apache.shenyu.plugin.base.utils.ServerHttpResponse,org.reactivestreams.Publisher)"
              },
              {
                "type": "CtInvocation",
                "value": "getDelegate()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getDelegate()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.reactivestreams.Publisher body"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.reactive.function.client.ClientResponse"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "CachedBodyOutputMessage outputMessage = HttpUtil.newCachedBodyOutputMessage(exchange);",
                "type": "DELETE",
                "lineNo": 65
              }
            ],
            "targetChanges": [
              {
                "line": "CachedBodyOutputMessage outputMessage = ResponseUtils.newCachedBodyOutputMessage(exchange);",
                "type": "ADD",
                "lineNo": 66
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.newCachedBodyOutputMessage(ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.newCachedBodyOutputMessage(ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.newCachedBodyOutputMessage(ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.newCachedBodyOutputMessage(ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Mono<DataBuffer> messageBody = ClientResponseUtils.fixBodyMessage(this.getDelegate(), outputMessage);",
                "type": "DELETE",
                "lineNo": 68
              }
            ],
            "targetChanges": [
              {
                "line": "Mono<DataBuffer> messageBody = ResponseUtils.fixBodyMessage(this.getDelegate(), outputMessage);",
                "type": "ADD",
                "lineNo": 69
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "Mono messageBody"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.core.io.buffer.DataBuffer"
              },
              {
                "type": "CtInvocation",
                "value": "fixBodyMessage()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ClientResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "fixBodyMessage()"
              },
              {
                "type": "CtInvocation",
                "value": "getDelegate()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getDelegate()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.core.io.buffer.DataBuffer"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "Mono messageBody"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.core.io.buffer.DataBuffer"
              },
              {
                "type": "CtInvocation",
                "value": "fixBodyMessage()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "fixBodyMessage()"
              },
              {
                "type": "CtInvocation",
                "value": "getDelegate()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getDelegate()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.core.io.buffer.DataBuffer"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "})).onErrorResume((Function<Throwable, Mono<Void>>) throwable -> HttpUtil.release(outputMessage, throwable));",
                "type": "DELETE",
                "lineNo": 71
              }
            ],
            "targetChanges": [
              {
                "line": "})).onErrorResume((Function<Throwable, Mono<Void>>) throwable -> ResponseUtils.release(outputMessage, throwable));",
                "type": "ADD",
                "lineNo": 72
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "onErrorResume(java.util.function.Function)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Function"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Throwable"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Throwable throwable"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.release(CachedBodyOutputMessage,Throwable)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.release(CachedBodyOutputMessage,Throwable)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Throwable throwable"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "onErrorResume(java.util.function.Function)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Function"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Throwable"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Throwable throwable"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.release(CachedBodyOutputMessage,Throwable)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.release(CachedBodyOutputMessage,Throwable)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Throwable throwable"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (parseBody == null) {",
                "type": "DELETE",
                "lineNo": 77
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.isNull(parseBody)) {",
                "type": "ADD",
                "lineNo": 78
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.String parseBody"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String parseBody"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (modifiedBody == null) {",
                "type": "DELETE",
                "lineNo": 81
              },
              {
                "line": "return HttpUtil.fail(ruleHandle.getWay(), exchange);",
                "type": "DELETE",
                "lineNo": 82
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.isNull(modifiedBody)) {",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "return CryptorUtil.fail(ruleHandle.getWay(), exchange);",
                "type": "ADD",
                "lineNo": 83
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.String modifiedBody"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.fail(String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.fail(String,ServerWebExchange)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String modifiedBody"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil.fail(String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil.fail(String,ServerWebExchange)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return HttpUtil.success(originalBody, modifiedBody, ruleHandle.getWay(), ruleHandle.getFieldNames());",
                "type": "DELETE",
                "lineNo": 84
              }
            ],
            "targetChanges": [
              {
                "line": "return CryptorUtil.success(originalBody, modifiedBody, ruleHandle.getWay(), ruleHandle.getFieldNames());",
                "type": "ADD",
                "lineNo": 85
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.success(String,String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.success(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String originalBody"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String modifiedBody"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getFieldNames()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getFieldNames()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil.success(String,String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil.success(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String originalBody"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String modifiedBody"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getFieldNames()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getFieldNames()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/request/CryptorRequestPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/request/CryptorRequestPlugin.java",
        "name": "org.apache.shenyu.plugin.cryptor.request.CryptorRequestPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "CachedBodyOutputMessage outputMessage = HttpUtil.newCachedBodyOutputMessage(exchange);",
                "type": "DELETE",
                "lineNo": 70
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.newCachedBodyOutputMessage(ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.newCachedBodyOutputMessage(ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "CachedBodyOutputMessage outputMessage = ResponseUtils.newCachedBodyOutputMessage(exchange);",
                "type": "ADD",
                "lineNo": 84
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.newCachedBodyOutputMessage(ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.newCachedBodyOutputMessage(ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ServerHttpRequestDecorator decorator = new RequestDecorator(exchange, outputMessage);",
                "type": "DELETE",
                "lineNo": 86
              }
            ],
            "targetChanges": [
              {
                "line": "ServerHttpRequestDecorator decorator = new CryptorRequestDecorator(exchange, outputMessage);",
                "type": "ADD",
                "lineNo": 87
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.http.server.reactive.ServerHttpRequestDecorator decorator"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.server.reactive.ServerHttpRequestDecorator"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.RequestDecorator()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.RequestDecorator"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.server.reactive.ServerHttpRequestDecorator"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.http.server.reactive.ServerHttpRequestDecorator decorator"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.server.reactive.ServerHttpRequestDecorator"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.CryptorRequestDecorator()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.CryptorRequestDecorator"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.server.reactive.ServerHttpRequestDecorator"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "})).onErrorResume((Function<Throwable, Mono<Void>>) throwable -> HttpUtil.release(outputMessage, throwable));",
                "type": "DELETE",
                "lineNo": 88
              }
            ],
            "targetChanges": [
              {
                "line": "})).onErrorResume((Function<Throwable, Mono<Void>>) throwable -> ResponseUtils.release(outputMessage, throwable));",
                "type": "ADD",
                "lineNo": 89
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "onErrorResume(java.util.function.Function)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Function"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Throwable"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Throwable throwable"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.release(CachedBodyOutputMessage,Throwable)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.release(CachedBodyOutputMessage,Throwable)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Throwable throwable"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "onErrorResume(java.util.function.Function)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Function"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Throwable"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Throwable throwable"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.release(CachedBodyOutputMessage,Throwable)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.release(CachedBodyOutputMessage,Throwable)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Throwable throwable"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (null == parseBody) {",
                "type": "DELETE",
                "lineNo": 105
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.isNull(parseBody)) {",
                "type": "ADD",
                "lineNo": 105
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String parseBody"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String parseBody"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (modifiedBody == null) {",
                "type": "DELETE",
                "lineNo": 111
              },
              {
                "line": "return HttpUtil.fail(ruleHandle.getWay(), exchange);",
                "type": "DELETE",
                "lineNo": 112
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.isNull(modifiedBody)) {",
                "type": "ADD",
                "lineNo": 111
              },
              {
                "line": "return CryptorUtil.fail(ruleHandle.getWay(), exchange);",
                "type": "ADD",
                "lineNo": 112
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.String modifiedBody"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.fail(String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.fail(String,ServerWebExchange)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String modifiedBody"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil.fail(String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil.fail(String,ServerWebExchange)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return HttpUtil.success(originalBody, modifiedBody, ruleHandle.getWay(), ruleHandle.getFieldNames());",
                "type": "DELETE",
                "lineNo": 114
              }
            ],
            "targetChanges": [
              {
                "line": "return CryptorUtil.success(originalBody, modifiedBody, ruleHandle.getWay(), ruleHandle.getFieldNames());",
                "type": "ADD",
                "lineNo": 114
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.success(String,String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.success(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String originalBody"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String modifiedBody"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getFieldNames()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getFieldNames()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil.success(String,String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil.success(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String originalBody"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String modifiedBody"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getWay()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getFieldNames()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle.getFieldNames()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/response/CryptorResponsePlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/response/CryptorResponsePlugin.java",
        "name": "org.apache.shenyu.plugin.cryptor.response.CryptorResponsePlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": ".response(new ResponseDecorator(exchange, ruleHandle)).build());",
                "type": "DELETE",
                "lineNo": 60
              }
            ],
            "targetChanges": [
              {
                "line": ".response(new CryptorResponseDecorator(exchange, ruleHandle)).build());",
                "type": "ADD",
                "lineNo": 60
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "response(org.apache.shenyu.plugin.cryptor.decorator.ResponseDecorator)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.ResponseDecorator.ResponseDecorator(ServerWebExchange,CryptorRuleHandle)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.ResponseDecorator"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "response(org.apache.shenyu.plugin.cryptor.decorator.CryptorResponseDecorator)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.CryptorResponseDecorator.CryptorResponseDecorator(ServerWebExchange,CryptorRuleHandle)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.cryptor.decorator.CryptorResponseDecorator"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.cryptor.dto.CryptorRuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/utils/HttpUtil.java",
        "aPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/utils/CryptorUtil.java",
        "name": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* http util.",
                "type": "DELETE",
                "lineNo": 36
              }
            ],
            "targetChanges": [
              {
                "line": "* cryptor util.",
                "type": "ADD",
                "lineNo": 33
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public class HttpUtil {",
                "type": "DELETE",
                "lineNo": 38
              }
            ],
            "targetChanges": [
              {
                "line": "public class CryptorUtil {",
                "type": "ADD",
                "lineNo": 35
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private static final String CHUNKED = \"chunked\";",
                "type": "DELETE",
                "lineNo": 40
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "java.lang.String CHUNKED"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'chunked'"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* change header.",
                "type": "DELETE",
                "lineNo": 43
              },
              {
                "line": "* @param headers headers",
                "type": "DELETE",
                "lineNo": 44
              },
              {
                "line": "* @return HttpHeaders.",
                "type": "DELETE",
                "lineNo": 45
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 46
              },
              {
                "line": "public static HttpHeaders modifiedContentLength(final HttpHeaders headers) {",
                "type": "DELETE",
                "lineNo": 47
              },
              {
                "line": "long contentLength = headers.getContentLength();",
                "type": "DELETE",
                "lineNo": 48
              },
              {
                "line": "HttpHeaders httpHeaders = new HttpHeaders();",
                "type": "DELETE",
                "lineNo": 49
              },
              {
                "line": "httpHeaders.putAll(headers);",
                "type": "DELETE",
                "lineNo": 50
              },
              {
                "line": "if (contentLength > 0) {",
                "type": "DELETE",
                "lineNo": 51
              },
              {
                "line": "httpHeaders.setContentLength(contentLength);",
                "type": "DELETE",
                "lineNo": 52
              },
              {
                "line": "} else {",
                "type": "DELETE",
                "lineNo": 53
              },
              {
                "line": "httpHeaders.set(HttpHeaders.TRANSFER_ENCODING, CHUNKED);",
                "type": "DELETE",
                "lineNo": 54
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 55
              },
              {
                "line": "return httpHeaders;",
                "type": "DELETE",
                "lineNo": 56
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 57
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 59
              },
              {
                "line": "* create CachedBodyOutputMessage.",
                "type": "DELETE",
                "lineNo": 60
              },
              {
                "line": "* @param exchange ServerWebExchange",
                "type": "DELETE",
                "lineNo": 61
              },
              {
                "line": "* @return CachedBodyOutputMessage.",
                "type": "DELETE",
                "lineNo": 62
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 63
              },
              {
                "line": "public static CachedBodyOutputMessage newCachedBodyOutputMessage(final ServerWebExchange exchange) {",
                "type": "DELETE",
                "lineNo": 64
              },
              {
                "line": "HttpHeaders headers = new HttpHeaders();",
                "type": "DELETE",
                "lineNo": 65
              },
              {
                "line": "headers.putAll(exchange.getRequest().getHeaders());",
                "type": "DELETE",
                "lineNo": 66
              },
              {
                "line": "headers.remove(HttpHeaders.CONTENT_LENGTH);",
                "type": "DELETE",
                "lineNo": 67
              },
              {
                "line": "return new CachedBodyOutputMessage(exchange, headers);",
                "type": "DELETE",
                "lineNo": 68
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 69
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 71
              },
              {
                "line": "* release source.",
                "type": "DELETE",
                "lineNo": 72
              },
              {
                "line": "* @param outputMessage CachedBodyOutputMessage",
                "type": "DELETE",
                "lineNo": 73
              },
              {
                "line": "* @param throwable Throwable",
                "type": "DELETE",
                "lineNo": 74
              },
              {
                "line": "* @return Mono.",
                "type": "DELETE",
                "lineNo": 75
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 76
              },
              {
                "line": "public static Mono<Void> release(final CachedBodyOutputMessage outputMessage, final Throwable throwable) {",
                "type": "DELETE",
                "lineNo": 77
              },
              {
                "line": "if (outputMessage.getCache()) {",
                "type": "DELETE",
                "lineNo": 78
              },
              {
                "line": "return outputMessage.getBody().map(DataBufferUtils::release).then(Mono.error(throwable));",
                "type": "DELETE",
                "lineNo": 79
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 80
              },
              {
                "line": "return Mono.error(throwable);",
                "type": "DELETE",
                "lineNo": 81
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 82
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 84
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.modifiedContentLength(HttpHeaders)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtLocalVariable",
                "value": "long contentLength"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtInvocation",
                "value": "getContentLength()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtExecutableReference",
                "value": "getContentLength()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.http.HttpHeaders httpHeaders"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.springframework.http.HttpHeaders()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtInvocation",
                "value": "putAll(org.springframework.http.HttpHeaders)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders httpHeaders"
              },
              {
                "type": "CtExecutableReference",
                "value": "putAll(org.springframework.http.HttpHeaders)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtVariableRead",
                "value": "long contentLength"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "setContentLength(long)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders httpHeaders"
              },
              {
                "type": "CtExecutableReference",
                "value": "setContentLength(long)"
              },
              {
                "type": "CtVariableRead",
                "value": "long contentLength"
              },
              {
                "type": "CtInvocation",
                "value": "set(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders httpHeaders"
              },
              {
                "type": "CtExecutableReference",
                "value": "set(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "HttpHeaders.TRANSFER_ENCODING"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CHUNKED"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders httpHeaders"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.newCachedBodyOutputMessage(ServerWebExchange)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.server.ServerWebExchange"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.springframework.http.HttpHeaders()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpHeaders"
              },
              {
                "type": "CtInvocation",
                "value": "putAll()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtExecutableReference",
                "value": "putAll()"
              },
              {
                "type": "CtInvocation",
                "value": "getHeaders()"
              },
              {
                "type": "CtInvocation",
                "value": "getRequest()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRequest()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHeaders()"
              },
              {
                "type": "CtInvocation",
                "value": "remove()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtExecutableReference",
                "value": "remove()"
              },
              {
                "type": "CtTypeAccess",
                "value": "HttpHeaders.CONTENT_LENGTH"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.CachedBodyOutputMessage(ServerWebExchange,HttpHeaders)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.HttpHeaders headers"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil.release(CachedBodyOutputMessage,Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Throwable throwable"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Throwable"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getCache()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getCache()"
              },
              {
                "type": "CtInvocation",
                "value": "then()"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getBody()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getBody()"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "release()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.cryptor.utils.HttpUtil DataBufferUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "then()"
              },
              {
                "type": "CtInvocation",
                "value": "error(java.lang.Throwable)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.Throwable)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Throwable throwable"
              },
              {
                "type": "CtInvocation",
                "value": "error(java.lang.Throwable)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.Throwable)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Throwable throwable"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-cryptor/src/test/java/org/apache/shenyu/plugin/cryptor/response/CryptorResponsePluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-cryptor/src/test/java/org/apache/shenyu/plugin/cryptor/response/CryptorResponsePluginTest.java",
        "name": "org.apache.shenyu.plugin.cryptor.response.CryptorResponsePluginTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(builder.response(any(ResponseDecorator.class))).thenReturn(builder);",
                "type": "DELETE",
                "lineNo": 101
              }
            ],
            "targetChanges": [
              {
                "line": "when(builder.response(any(CryptorResponseDecorator.class))).thenReturn(builder);",
                "type": "ADD",
                "lineNo": 101
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "response()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              },
              {
                "type": "CtExecutableReference",
                "value": "response()"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "response()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              },
              {
                "type": "CtExecutableReference",
                "value": "response()"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "when(builder.response(any(ResponseDecorator.class))).thenReturn(builder);",
                "type": "DELETE",
                "lineNo": 132
              }
            ],
            "targetChanges": [
              {
                "line": "when(builder.response(any(CryptorResponseDecorator.class))).thenReturn(builder);",
                "type": "ADD",
                "lineNo": 132
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "response()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              },
              {
                "type": "CtExecutableReference",
                "value": "response()"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "response()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              },
              {
                "type": "CtExecutableReference",
                "value": "response()"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "when(builder.response(any(ResponseDecorator.class))).thenReturn(builder);",
                "type": "DELETE",
                "lineNo": 162
              }
            ],
            "targetChanges": [
              {
                "line": "when(builder.response(any(CryptorResponseDecorator.class))).thenReturn(builder);",
                "type": "ADD",
                "lineNo": 162
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "response()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              },
              {
                "type": "CtExecutableReference",
                "value": "response()"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "response()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              },
              {
                "type": "CtExecutableReference",
                "value": "response()"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "when(builder.response(any(ResponseDecorator.class))).thenReturn(builder);",
                "type": "DELETE",
                "lineNo": 193
              }
            ],
            "targetChanges": [
              {
                "line": "when(builder.response(any(CryptorResponseDecorator.class))).thenReturn(builder);",
                "type": "ADD",
                "lineNo": 193
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "response()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              },
              {
                "type": "CtExecutableReference",
                "value": "response()"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "response()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              },
              {
                "type": "CtExecutableReference",
                "value": "response()"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(ServerWebExchange.Builder)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange$Builder builder"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-modify-response/src/main/java/org/apache/shenyu/plugin/modify/response/ModifyResponsePlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-modify-response/src/main/java/org/apache/shenyu/plugin/modify/response/ModifyResponsePlugin.java",
        "name": "org.apache.shenyu.plugin.modify.response.ModifyResponsePlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ClientResponse clientResponse = ClientResponseUtils.buildClientResponse(this.getDelegate(), body);",
                "type": "DELETE",
                "lineNo": 136
              }
            ],
            "targetChanges": [
              {
                "line": "ClientResponse clientResponse = ResponseUtils.buildClientResponse(this.getDelegate(), body);",
                "type": "ADD",
                "lineNo": 137
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.web.reactive.function.client.ClientResponse clientResponse"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.reactive.function.client.ClientResponse"
              },
              {
                "type": "CtInvocation",
                "value": "buildClientResponse(org.apache.shenyu.plugin.base.utils.ServerHttpResponse,org.reactivestreams.Publisher)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ClientResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "buildClientResponse(org.apache.shenyu.plugin.base.utils.ServerHttpResponse,org.reactivestreams.Publisher)"
              },
              {
                "type": "CtInvocation",
                "value": "getDelegate()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getDelegate()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.reactivestreams.Publisher body"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.reactive.function.client.ClientResponse"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.web.reactive.function.client.ClientResponse clientResponse"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.reactive.function.client.ClientResponse"
              },
              {
                "type": "CtInvocation",
                "value": "buildClientResponse(org.apache.shenyu.plugin.base.utils.ServerHttpResponse,org.reactivestreams.Publisher)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "buildClientResponse(org.apache.shenyu.plugin.base.utils.ServerHttpResponse,org.reactivestreams.Publisher)"
              },
              {
                "type": "CtInvocation",
                "value": "getDelegate()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getDelegate()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.reactivestreams.Publisher body"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.reactive.function.client.ClientResponse"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "CachedBodyOutputMessage outputMessage = new CachedBodyOutputMessage(exchange,",
                "type": "DELETE",
                "lineNo": 142
              },
              {
                "line": "exchange.getResponse().getHeaders());",
                "type": "DELETE",
                "lineNo": 143
              }
            ],
            "targetChanges": [
              {
                "line": "CachedBodyOutputMessage outputMessage = ResponseUtils.newCachedBodyOutputMessage(this.exchange);",
                "type": "ADD",
                "lineNo": 143
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.CachedBodyOutputMessage(ServerWebExchange,HttpHeaders)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtInvocation",
                "value": "getHeaders()"
              },
              {
                "type": "CtInvocation",
                "value": "getResponse()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getResponse()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHeaders()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.newCachedBodyOutputMessage(ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.newCachedBodyOutputMessage(ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Mono<DataBuffer> messageBody = ClientResponseUtils.fixBodyMessage(this.getDelegate(), outputMessage);",
                "type": "DELETE",
                "lineNo": 145
              }
            ],
            "targetChanges": [
              {
                "line": "Mono<DataBuffer> messageBody = ResponseUtils.fixBodyMessage(this.getDelegate(), outputMessage);",
                "type": "ADD",
                "lineNo": 145
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "Mono messageBody"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.core.io.buffer.DataBuffer"
              },
              {
                "type": "CtInvocation",
                "value": "fixBodyMessage()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ClientResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "fixBodyMessage()"
              },
              {
                "type": "CtInvocation",
                "value": "getDelegate()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getDelegate()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.core.io.buffer.DataBuffer"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "Mono messageBody"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.core.io.buffer.DataBuffer"
              },
              {
                "type": "CtInvocation",
                "value": "fixBodyMessage()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "fixBodyMessage()"
              },
              {
                "type": "CtInvocation",
                "value": "getDelegate()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getDelegate()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.core.io.buffer.DataBuffer"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "}));",
                "type": "DELETE",
                "lineNo": 148
              }
            ],
            "targetChanges": [
              {
                "line": "})).onErrorResume((Function<Throwable, Mono<Void>>) throwable -> ResponseUtils.release(outputMessage, throwable));",
                "type": "ADD",
                "lineNo": 148
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "onErrorResume(java.util.function.Function)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Function"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Throwable"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Throwable throwable"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.release(CachedBodyOutputMessage,Throwable)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.utils.ResponseUtils.release(CachedBodyOutputMessage,Throwable)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Throwable throwable"
              }
            ]
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "541bffb60",
    "aCommit": "88f203b6a",
    "changes": [
      {
        "bPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-alibaba-dubbo/src/main/java/org/apache/shenyu/plugin/alibaba/dubbo/AlibabaDubboPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-alibaba-dubbo/src/main/java/org/apache/shenyu/plugin/alibaba/dubbo/AlibabaDubboPlugin.java",
        "name": "org.apache.shenyu.plugin.alibaba.dubbo.AlibabaDubboPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "RpcContext context = RpcContext.getContext();",
                "type": "DELETE",
                "lineNo": 109
              },
              {
                "line": "rpcContext.forEach((k, v) -> context.setAttachment(k, v));",
                "type": "DELETE",
                "lineNo": 110
              }
            ],
            "targetChanges": [
              {
                "line": "rpcContext.forEach(RpcContext.getContext()::setAttachment);",
                "type": "ADD",
                "lineNo": 109
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "com.alibaba.dubbo.rpc.RpcContext context"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.dubbo.rpc.RpcContext"
              },
              {
                "type": "CtInvocation",
                "value": "getContext()"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.dubbo.rpc.RpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getContext()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map rpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String k"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String v"
              },
              {
                "type": "CtInvocation",
                "value": "setAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.dubbo.rpc.RpcContext context"
              },
              {
                "type": "CtExecutableReference",
                "value": "setAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String k"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String v"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map rpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "setAttachment()"
              },
              {
                "type": "CtInvocation",
                "value": "getContext()"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.dubbo.rpc.RpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getContext()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-general-context/src/main/java/org/apache/shenyu/plugin/general/context/GeneralContextPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-general-context/src/main/java/org/apache/shenyu/plugin/general/context/GeneralContextPlugin.java",
        "name": "org.apache.shenyu.plugin.general.context.GeneralContextPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "generalContextHandleMap.forEach((k, v) -> {",
                "type": "DELETE",
                "lineNo": 49
              },
              {
                "line": "Map<String, String> generalContextMapWithRpcType = new HashMap<>();",
                "type": "DELETE",
                "lineNo": 50
              }
            ],
            "targetChanges": [
              {
                "line": "generalContextHandleMap.forEach((rpcType, v) -> {",
                "type": "ADD",
                "lineNo": 49
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map generalContextHandleMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String k"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List v"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.Map generalContextMapWithRpcType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.HashMap.HashMap()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.HashMap"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map generalContextHandleMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List v"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "Map<String, String> generalContextMapWithRpcType = new HashMap<>();",
                "type": "ADD",
                "lineNo": 53
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Map generalContextMapWithRpcType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.HashMap.HashMap()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.HashMap"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "generalContextMap.put(k, generalContextMapWithRpcType);",
                "type": "DELETE",
                "lineNo": 70
              }
            ],
            "targetChanges": [
              {
                "line": "generalContextMap.put(rpcType, generalContextMapWithRpcType);",
                "type": "ADD",
                "lineNo": 70
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Map.put(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map generalContextMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.put(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String k"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map generalContextMapWithRpcType"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Map.put(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map generalContextMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.put(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map generalContextMapWithRpcType"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-general-context/src/test/java/org/apache/shenyu/plugin/general/context/GeneralContextPluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-general-context/src/test/java/org/apache/shenyu/plugin/general/context/GeneralContextPluginTest.java",
        "name": "org.apache.shenyu.plugin.general.context.GeneralContextPluginTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "shenyuGeneralContext = ((Map<String, Map<String, String>>) newExchange.getValue().getAttributes().get(Constants.GENERAL_CONTEXT)).get(PluginEnum.SOFA.getName());",
                "type": "ADD",
                "lineNo": 107
              },
              {
                "line": "assertNull(shenyuGeneralContext);",
                "type": "ADD",
                "lineNo": 108
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtVariableWrite",
                "value": "java.util.Map shenyuGeneralContext"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtInvocation",
                "value": "getValue()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.mockito.ArgumentCaptor newExchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GENERAL_CONTEXT"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String GENERAL_CONTEXT"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum SOFA"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum SOFA"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "assertNull(java.util.Map)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNull(java.util.Map)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map shenyuGeneralContext"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/GrpcPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/GrpcPlugin.java",
        "name": "org.apache.shenyu.plugin.grpc.GrpcPlugin",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "public static final Context.Key<Map<String, String>> RPC_CONTEXT_KEY = Context.key(\"shenyuRpcContext\");",
                "type": "ADD",
                "lineNo": 59
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "io.grpc.Context$Key RPC_CONTEXT_KEY"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.Context$Key"
              },
              {
                "type": "CtTypeReference",
                "value": "io.grpc.Context"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "key(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "io.grpc.Context"
              },
              {
                "type": "CtExecutableReference",
                "value": "key(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyuRpcContext'"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "Map<String, Map<String, String>> rpcContext = exchange.getAttribute(Constants.GENERAL_CONTEXT);",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "Optional.ofNullable(rpcContext).map(context -> context.get(PluginEnum.GRPC.getName())).ifPresent(",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "context -> Context.current().withValue(RPC_CONTEXT_KEY, context).attach());",
                "type": "ADD",
                "lineNo": 94
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Map rpcContext"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GENERAL_CONTEXT"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String GENERAL_CONTEXT"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map rpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Map context"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map context"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum GRPC"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum GRPC"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Map context"
              },
              {
                "type": "CtInvocation",
                "value": "attach()"
              },
              {
                "type": "CtInvocation",
                "value": "withValue(java.util.Map)"
              },
              {
                "type": "CtInvocation",
                "value": "current()"
              },
              {
                "type": "CtTypeAccess",
                "value": "io.grpc.Context"
              },
              {
                "type": "CtExecutableReference",
                "value": "current()"
              },
              {
                "type": "CtExecutableReference",
                "value": "withValue(java.util.Map)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.grpc.RPC_CONTEXT_KEY"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map context"
              },
              {
                "type": "CtExecutableReference",
                "value": "attach()"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "Context.current().detach(Context.ROOT);",
                "type": "ADD",
                "lineNo": 96
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "detach()"
              },
              {
                "type": "CtInvocation",
                "value": "current()"
              },
              {
                "type": "CtTypeAccess",
                "value": "io.grpc.Context"
              },
              {
                "type": "CtExecutableReference",
                "value": "current()"
              },
              {
                "type": "CtExecutableReference",
                "value": "detach()"
              },
              {
                "type": "CtTypeAccess",
                "value": "Context.ROOT"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/client/GrpcClientBuilder.java",
        "aPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/client/GrpcClientBuilder.java",
        "name": "org.apache.shenyu.plugin.grpc.client.GrpcClientBuilder",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": ".intercept(new ContextClientInterceptor())",
                "type": "ADD",
                "lineNo": 52
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "intercept(org.apache.shenyu.plugin.grpc.intercept.ContextClientInterceptor)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.grpc.intercept.ContextClientInterceptor.ContextClientInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.grpc.intercept.ContextClientInterceptor"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-motan/src/main/java/org/apache/shenyu/plugin/motan/proxy/MotanProxyService.java",
        "aPath": "shenyu-plugin/shenyu-plugin-motan/src/main/java/org/apache/shenyu/plugin/motan/proxy/MotanProxyService.java",
        "name": "org.apache.shenyu.plugin.motan.proxy.MotanProxyService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "RpcContext motanRpcContext = RpcContext.getContext();",
                "type": "DELETE",
                "lineNo": 62
              },
              {
                "line": "context.forEach((k, v) -> motanRpcContext.setRpcAttachment(k, v));",
                "type": "DELETE",
                "lineNo": 63
              }
            ],
            "targetChanges": [
              {
                "line": "context.forEach((k, v) -> RpcContext.getContext().setRpcAttachment(k, v));",
                "type": "ADD",
                "lineNo": 62
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "com.weibo.api.motan.rpc.RpcContext motanRpcContext"
              },
              {
                "type": "CtTypeReference",
                "value": "com.weibo.api.motan.rpc.RpcContext"
              },
              {
                "type": "CtInvocation",
                "value": "getContext()"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.weibo.api.motan.rpc.RpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getContext()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map context"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String k"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String v"
              },
              {
                "type": "CtInvocation",
                "value": "setRpcAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.weibo.api.motan.rpc.RpcContext motanRpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "setRpcAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String k"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String v"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map context"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String k"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String v"
              },
              {
                "type": "CtInvocation",
                "value": "setRpcAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getContext()"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.weibo.api.motan.rpc.RpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getContext()"
              },
              {
                "type": "CtExecutableReference",
                "value": "setRpcAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String k"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String v"
              }
            ]
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "83e9958f4",
    "aCommit": "6fee634e6",
    "changes": [
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/MapperConfig.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/MapperConfig.java",
        "name": "org.apache.shenyu.admin.config.MapperConfig",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* Add the plugin to the MyBatis plugin interceptor chain.",
                "type": "DELETE",
                "lineNo": 36
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 37
              },
              {
                "line": "* @return {@linkplain PostgreSQLQueryInterceptor}",
                "type": "DELETE",
                "lineNo": 38
              }
            ],
            "targetChanges": [
              {
                "line": "* The type PostgreSQL.",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "@Bean",
                "type": "DELETE",
                "lineNo": 40
              }
            ],
            "targetChanges": [
              {
                "line": "@Configuration",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              }
            ],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Configuration"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public PostgreSQLQueryInterceptor postgreSqlQueryInterceptor() {",
                "type": "DELETE",
                "lineNo": 42
              },
              {
                "line": "return new PostgreSQLQueryInterceptor();",
                "type": "DELETE",
                "lineNo": 43
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 44
              }
            ],
            "targetChanges": [
              {
                "line": "static class PostgreSQLConfig {",
                "type": "ADD",
                "lineNo": 42
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.config.MapperConfig.postgreSqlQueryInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLQueryInterceptor"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLQueryInterceptor.PostgreSQLQueryInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLQueryInterceptor"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 46
              },
              {
                "line": "* Add the plugin to the MyBatis plugin interceptor chain.",
                "type": "DELETE",
                "lineNo": 47
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 48
              },
              {
                "line": "* @return {@linkplain PostgreSQLPrepareInterceptor}",
                "type": "DELETE",
                "lineNo": 49
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 50
              },
              {
                "line": "@Bean",
                "type": "DELETE",
                "lineNo": 51
              },
              {
                "line": "@ConditionalOnProperty(name = \"shenyu.database.dialect\", havingValue = \"postgresql\")",
                "type": "DELETE",
                "lineNo": 52
              },
              {
                "line": "public PostgreSQLPrepareInterceptor postgreSqlPrepareInterceptor() {",
                "type": "DELETE",
                "lineNo": 53
              },
              {
                "line": "return new PostgreSQLPrepareInterceptor();",
                "type": "DELETE",
                "lineNo": 54
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 55
              }
            ],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 44
              },
              {
                "line": "* Add the plugin to the MyBatis plugin interceptor chain.",
                "type": "ADD",
                "lineNo": 45
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 46
              },
              {
                "line": "* @return {@linkplain PostgreSQLQueryInterceptor}",
                "type": "ADD",
                "lineNo": 47
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 48
              },
              {
                "line": "@Bean",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "@ConditionalOnMissingBean(PostgreSQLQueryInterceptor.class)",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "public PostgreSQLQueryInterceptor postgreSqlQueryInterceptor() {",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "return new PostgreSQLQueryInterceptor();",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 53
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.config.MapperConfig.postgreSqlPrepareInterceptor()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'postgresql'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu.database.dialect'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLPrepareInterceptor"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLPrepareInterceptor.PostgreSQLPrepareInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLPrepareInterceptor"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig.postgreSqlQueryInterceptor()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLQueryInterceptor"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLQueryInterceptor.PostgreSQLQueryInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLQueryInterceptor"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 57
              },
              {
                "line": "* Add the plugin to the MyBatis plugin interceptor chain.",
                "type": "DELETE",
                "lineNo": 58
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 59
              },
              {
                "line": "* @return {@linkplain OracleSQLPrepareInterceptor}",
                "type": "DELETE",
                "lineNo": 60
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 61
              },
              {
                "line": "@Bean",
                "type": "DELETE",
                "lineNo": 62
              },
              {
                "line": "@ConditionalOnProperty(name = \"shenyu.database.dialect\", havingValue = \"oracle\")",
                "type": "DELETE",
                "lineNo": 63
              },
              {
                "line": "public OracleSQLPrepareInterceptor oracleSqlPrepareInterceptor() {",
                "type": "DELETE",
                "lineNo": 64
              },
              {
                "line": "return new OracleSQLPrepareInterceptor();",
                "type": "DELETE",
                "lineNo": 65
              }
            ],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 55
              },
              {
                "line": "* Add the plugin to the MyBatis plugin interceptor chain.",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "* @return {@linkplain PostgreSQLPrepareInterceptor}",
                "type": "ADD",
                "lineNo": 58
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 59
              },
              {
                "line": "@Bean",
                "type": "ADD",
                "lineNo": 60
              },
              {
                "line": "@ConditionalOnMissingBean(PostgreSQLPrepareInterceptor.class)",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "public PostgreSQLPrepareInterceptor postgreSqlPrepareInterceptor() {",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "return new PostgreSQLPrepareInterceptor();",
                "type": "ADD",
                "lineNo": 63
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 64
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 66
              },
              {
                "line": "* Add the plugin to the MyBatis plugin interceptor chain.",
                "type": "ADD",
                "lineNo": 67
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 68
              },
              {
                "line": "* @return {@linkplain PostgreSqlUpdateInterceptor}",
                "type": "ADD",
                "lineNo": 69
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "@Bean",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "@ConditionalOnMissingBean(PostgreSqlUpdateInterceptor.class)",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "public PostgreSqlUpdateInterceptor postgreSqlUpdateInterceptor() {",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "return new PostgreSqlUpdateInterceptor();",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 75
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.config.MapperConfig.oracleSqlPrepareInterceptor()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'oracle'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu.database.dialect'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.oracle.OracleSQLPrepareInterceptor"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.admin.mybatis.oracle.OracleSQLPrepareInterceptor.OracleSQLPrepareInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.oracle.OracleSQLPrepareInterceptor"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig.postgreSqlPrepareInterceptor()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLPrepareInterceptor"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLPrepareInterceptor.PostgreSQLPrepareInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLPrepareInterceptor"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig.postgreSqlUpdateInterceptor()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor.PostgreSqlUpdateInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "* Add the plugin to the MyBatis plugin interceptor chain.",
                "type": "DELETE",
                "lineNo": 69
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 70
              },
              {
                "line": "* @return {@linkplain PostgreSqlUpdateInterceptor}",
                "type": "DELETE",
                "lineNo": 71
              }
            ],
            "targetChanges": [
              {
                "line": "* The type OracleSQL.",
                "type": "ADD",
                "lineNo": 79
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "@Bean",
                "type": "DELETE",
                "lineNo": 73
              }
            ],
            "targetChanges": [
              {
                "line": "@Configuration",
                "type": "ADD",
                "lineNo": 81
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              }
            ],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Configuration"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public PostgreSqlUpdateInterceptor oracleSqlUpdateInterceptor() {",
                "type": "DELETE",
                "lineNo": 75
              },
              {
                "line": "return new PostgreSqlUpdateInterceptor();",
                "type": "DELETE",
                "lineNo": 76
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 77
              }
            ],
            "targetChanges": [
              {
                "line": "static class OracleSQLConfig {",
                "type": "ADD",
                "lineNo": 83
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.config.MapperConfig.oracleSqlUpdateInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor.PostgreSqlUpdateInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.admin.config.MapperConfig$OracleSQLConfig"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 79
              },
              {
                "line": "* Add the plugin to the MyBatis plugin interceptor chain.",
                "type": "DELETE",
                "lineNo": 80
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 81
              },
              {
                "line": "* @return {@linkplain PostgreSqlUpdateInterceptor}",
                "type": "DELETE",
                "lineNo": 82
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 83
              },
              {
                "line": "@Bean",
                "type": "DELETE",
                "lineNo": 84
              },
              {
                "line": "@ConditionalOnProperty(name = \"shenyu.database.dialect\", havingValue = \"postgresql\")",
                "type": "DELETE",
                "lineNo": 85
              },
              {
                "line": "public PostgreSqlUpdateInterceptor postgreSqlUpdateInterceptor() {",
                "type": "DELETE",
                "lineNo": 86
              },
              {
                "line": "return new PostgreSqlUpdateInterceptor();",
                "type": "DELETE",
                "lineNo": 87
              }
            ],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "* Add the plugin to the MyBatis plugin interceptor chain.",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "* @return {@linkplain OracleSQLPrepareInterceptor}",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "@Bean",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "@ConditionalOnMissingBean(OracleSQLPrepareInterceptor.class)",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "public OracleSQLPrepareInterceptor oracleSqlPrepareInterceptor() {",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "return new OracleSQLPrepareInterceptor();",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "* Add the plugin to the MyBatis plugin interceptor chain.",
                "type": "ADD",
                "lineNo": 97
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 98
              },
              {
                "line": "* @return {@linkplain OracleSQLUpdateInterceptor}",
                "type": "ADD",
                "lineNo": 99
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": "@Bean",
                "type": "ADD",
                "lineNo": 101
              },
              {
                "line": "@ConditionalOnMissingBean(OracleSQLUpdateInterceptor.class)",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "public OracleSQLUpdateInterceptor oracleSqlUpdateInterceptor() {",
                "type": "ADD",
                "lineNo": 103
              },
              {
                "line": "return new OracleSQLUpdateInterceptor();",
                "type": "ADD",
                "lineNo": 104
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 105
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.config.MapperConfig.postgreSqlUpdateInterceptor()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'postgresql'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu.database.dialect'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor.PostgreSqlUpdateInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.config.MapperConfig$OracleSQLConfig.oracleSqlPrepareInterceptor()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.oracle.OracleSQLPrepareInterceptor"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.admin.mybatis.oracle.OracleSQLPrepareInterceptor.OracleSQLPrepareInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.oracle.OracleSQLPrepareInterceptor"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.config.MapperConfig$OracleSQLConfig.oracleSqlUpdateInterceptor()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.oracle.OracleSQLUpdateInterceptor"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.admin.mybatis.oracle.OracleSQLUpdateInterceptor.OracleSQLUpdateInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.oracle.OracleSQLUpdateInterceptor"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/config/MapperConfigTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/config/MapperConfigTest.java",
        "name": "org.apache.shenyu.admin.config.MapperConfigTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private MapperConfig mapperConfig;",
                "type": "DELETE",
                "lineNo": 35
              }
            ],
            "targetChanges": [
              {
                "line": "private MapperConfig.OracleSQLConfig oracleSQLConfig;",
                "type": "ADD",
                "lineNo": 35
              },
              {
                "line": "@InjectMocks",
                "type": "ADD",
                "lineNo": 37
              },
              {
                "line": "private MapperConfig.PostgreSQLConfig postgreSQLConfig;",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "org.apache.shenyu.admin.config.MapperConfig mapperConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.apache.shenyu.admin.config.MapperConfig$OracleSQLConfig oracleSQLConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig$OracleSQLConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig"
              },
              {
                "type": "CtField",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig postgreSQLConfig"
              },
              {
                "type": "CtAnnotation",
                "value": "org.mockito.InjectMocks"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "PostgreSQLQueryInterceptor postgreSQLQueryInterceptor = mapperConfig.postgreSqlQueryInterceptor();",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "PostgreSQLQueryInterceptor postgreSQLQueryInterceptor = postgreSQLConfig.postgreSqlQueryInterceptor();",
                "type": "ADD",
                "lineNo": 42
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLQueryInterceptor postgreSQLQueryInterceptor"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLQueryInterceptor"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.MapperConfig.postgreSqlQueryInterceptor()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.MapperConfig mapperConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig.postgreSqlQueryInterceptor()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLQueryInterceptor postgreSQLQueryInterceptor"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLQueryInterceptor"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig.postgreSqlQueryInterceptor()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig postgreSQLConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig.postgreSqlQueryInterceptor()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertNotNull(mapperConfig.postgreSqlPrepareInterceptor());",
                "type": "DELETE",
                "lineNo": 45
              }
            ],
            "targetChanges": [
              {
                "line": "assertNotNull(postgreSQLConfig.postgreSqlPrepareInterceptor());",
                "type": "ADD",
                "lineNo": 48
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLPrepareInterceptor)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLPrepareInterceptor)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.MapperConfig.postgreSqlPrepareInterceptor()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.MapperConfig mapperConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig.postgreSqlPrepareInterceptor()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLPrepareInterceptor)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSQLPrepareInterceptor)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig.postgreSqlPrepareInterceptor()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig postgreSQLConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig.postgreSqlPrepareInterceptor()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertNotNull(mapperConfig.oracleSqlPrepareInterceptor());",
                "type": "DELETE",
                "lineNo": 50
              }
            ],
            "targetChanges": [
              {
                "line": "assertNotNull(oracleSQLConfig.oracleSqlPrepareInterceptor());",
                "type": "ADD",
                "lineNo": 53
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.oracle.OracleSQLPrepareInterceptor)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.oracle.OracleSQLPrepareInterceptor)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.MapperConfig.oracleSqlPrepareInterceptor()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.MapperConfig mapperConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig.oracleSqlPrepareInterceptor()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.oracle.OracleSQLPrepareInterceptor)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.oracle.OracleSQLPrepareInterceptor)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.MapperConfig$OracleSQLConfig.oracleSqlPrepareInterceptor()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.MapperConfig$OracleSQLConfig oracleSQLConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig$OracleSQLConfig.oracleSqlPrepareInterceptor()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertNotNull(mapperConfig.oracleSqlUpdateInterceptor());",
                "type": "DELETE",
                "lineNo": 55
              }
            ],
            "targetChanges": [
              {
                "line": "assertNotNull(oracleSQLConfig.oracleSqlUpdateInterceptor());",
                "type": "ADD",
                "lineNo": 58
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.MapperConfig.oracleSqlUpdateInterceptor()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.MapperConfig mapperConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig.oracleSqlUpdateInterceptor()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.oracle.OracleSQLUpdateInterceptor)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.oracle.OracleSQLUpdateInterceptor)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.MapperConfig$OracleSQLConfig.oracleSqlUpdateInterceptor()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.MapperConfig$OracleSQLConfig oracleSQLConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig$OracleSQLConfig.oracleSqlUpdateInterceptor()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertNotNull(mapperConfig.postgreSqlUpdateInterceptor());",
                "type": "DELETE",
                "lineNo": 60
              }
            ],
            "targetChanges": [
              {
                "line": "assertNotNull(postgreSQLConfig.postgreSqlUpdateInterceptor());",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.MapperConfig.postgreSqlUpdateInterceptor()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.MapperConfig mapperConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig.postgreSqlUpdateInterceptor()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig.postgreSqlUpdateInterceptor()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig postgreSQLConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.MapperConfig$PostgreSQLConfig.postgreSqlUpdateInterceptor()"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "61cacddea",
    "aCommit": "ef4357d56",
    "changes": [
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/constant/Constants.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/constant/Constants.java",
        "name": "org.apache.shenyu.common.constant.Constants",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 441
              },
              {
                "line": "* dubbo group.",
                "type": "ADD",
                "lineNo": 442
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 443
              },
              {
                "line": "String GROUP = \"group\";",
                "type": "ADD",
                "lineNo": 444
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String GROUP"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'group'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-alibaba-dubbo/src/main/java/org/apache/shenyu/plugin/alibaba/dubbo/AlibabaDubboPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-alibaba-dubbo/src/main/java/org/apache/shenyu/plugin/alibaba/dubbo/AlibabaDubboPlugin.java",
        "name": "org.apache.shenyu.plugin.alibaba.dubbo.AlibabaDubboPlugin",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "RpcContext.getContext().setAttachment(Constants.DUBBO_SELECTOR_ID, selector.getId());",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "RpcContext.getContext().setAttachment(Constants.DUBBO_RULE_ID, rule.getId());",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "RpcContext.getContext().setAttachment(Constants.DUBBO_REMOTE_ADDRESS, Objects.requireNonNull(exchange.getRequest().getRemoteAddress()).getAddress().getHostAddress());",
                "type": "ADD",
                "lineNo": 83
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getContext()"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.dubbo.rpc.RpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getContext()"
              },
              {
                "type": "CtExecutableReference",
                "value": "setAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String DUBBO_SELECTOR_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String DUBBO_SELECTOR_ID"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selector"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtInvocation",
                "value": "setAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getContext()"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.dubbo.rpc.RpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getContext()"
              },
              {
                "type": "CtExecutableReference",
                "value": "setAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String DUBBO_RULE_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String DUBBO_RULE_ID"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData rule"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtInvocation",
                "value": "setAttachment(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getContext()"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.dubbo.rpc.RpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getContext()"
              },
              {
                "type": "CtExecutableReference",
                "value": "setAttachment(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String DUBBO_REMOTE_ADDRESS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String DUBBO_REMOTE_ADDRESS"
              },
              {
                "type": "CtInvocation",
                "value": "getHostAddress()"
              },
              {
                "type": "CtInvocation",
                "value": "getAddress()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.requireNonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.requireNonNull(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "getRemoteAddress()"
              },
              {
                "type": "CtInvocation",
                "value": "getRequest()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRequest()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRemoteAddress()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAddress()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHostAddress()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-alibaba-dubbo/src/main/java/org/apache/shenyu/plugin/alibaba/dubbo/cache/ApplicationConfigCache.java",
        "aPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-alibaba-dubbo/src/main/java/org/apache/shenyu/plugin/alibaba/dubbo/cache/ApplicationConfigCache.java",
        "name": "org.apache.shenyu.plugin.alibaba.dubbo.cache.ApplicationConfigCache",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "reference.setLoadbalance(\"gray\");",
                "type": "ADD",
                "lineNo": 157
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setLoadbalance(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.dubbo.config.ReferenceConfig reference"
              },
              {
                "type": "CtExecutableReference",
                "value": "setLoadbalance(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'gray'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (StringUtils.isNoneBlank(dubboParamExtInfo.getLoadbalance())) {",
                "type": "DELETE",
                "lineNo": 166
              },
              {
                "line": "reference.setLoadbalance(dubboParamExtInfo.getLoadbalance());",
                "type": "DELETE",
                "lineNo": 167
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 168
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.cache.ApplicationConfigCache$DubboParamExtInfo.getLoadbalance()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.cache.ApplicationConfigCache$DubboParamExtInfo dubboParamExtInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.cache.ApplicationConfigCache$DubboParamExtInfo.getLoadbalance()"
              },
              {
                "type": "CtInvocation",
                "value": "setLoadbalance(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.dubbo.config.ReferenceConfig reference"
              },
              {
                "type": "CtExecutableReference",
                "value": "setLoadbalance(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.cache.ApplicationConfigCache$DubboParamExtInfo.getLoadbalance()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.cache.ApplicationConfigCache$DubboParamExtInfo dubboParamExtInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.cache.ApplicationConfigCache$DubboParamExtInfo.getLoadbalance()"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-alibaba-dubbo/src/main/java/org/apache/shenyu/plugin/alibaba/dubbo/handler/AlibabaDubboPluginDataHandler.java",
        "aPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-alibaba-dubbo/src/main/java/org/apache/shenyu/plugin/alibaba/dubbo/handler/AlibabaDubboPluginDataHandler.java",
        "name": "org.apache.shenyu.plugin.alibaba.dubbo.handler.AlibabaDubboPluginDataHandler",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "public static final Supplier<CommonHandleCache<String, DubboRuleHandle>> RULE_CACHED_HANDLE = new BeanHolder<>(CommonHandleCache::new);",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "public static final Supplier<CommonHandleCache<String, List<DubboUpstream>>> SELECTOR_CACHED_HANDLE = new BeanHolder<>(CommonHandleCache::new);",
                "type": "ADD",
                "lineNo": 51
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.util.function.Supplier RULE_CACHED_HANDLE"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.base.utils.BeanHolder.BeanHolder(Supplier)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.utils.BeanHolder"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.CommonHandleCache()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.CommonHandleCache()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache"
              },
              {
                "type": "CtField",
                "value": "java.util.function.Supplier SELECTOR_CACHED_HANDLE"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.base.utils.BeanHolder.BeanHolder(Supplier)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.utils.BeanHolder"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.CommonHandleCache()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.CommonHandleCache()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "public void handlerSelector(final SelectorData selectorData) {",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "List<DubboUpstream> dubboUpstreams = GsonUtils.getInstance().fromList(selectorData.getHandle(), DubboUpstream.class);",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "if (CollectionUtils.isEmpty(dubboUpstreams)) {",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "return;",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 75
              },
              {
                "line": "List<DubboUpstream> graySelectorHandle = new ArrayList<>();",
                "type": "ADD",
                "lineNo": 76
              },
              {
                "line": "for (DubboUpstream each : dubboUpstreams) {",
                "type": "ADD",
                "lineNo": 77
              },
              {
                "line": "if (StringUtils.isNotBlank(each.getUpstreamUrl()) && Objects.nonNull(each.isGray()) && each.isGray()) {",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": "graySelectorHandle.add(each);",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "if (CollectionUtils.isNotEmpty(graySelectorHandle)) {",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "SELECTOR_CACHED_HANDLE.get().cachedHandle(selectorData.getId(), graySelectorHandle);",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "UpstreamCacheManager.getInstance().submit(selectorData.getId(), convertUpstreamList(graySelectorHandle));",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "public void removeSelector(final SelectorData selectorData) {",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "SELECTOR_CACHED_HANDLE.get().removeHandle(selectorData.getId());",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "UpstreamCacheManager.getInstance().removeByKey(selectorData.getId());",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "public void handlerRule(final RuleData ruleData) {",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "RULE_CACHED_HANDLE.get().cachedHandle(ruleData.getId(), GsonUtils.getInstance().fromJson(ruleData.getHandle(), DubboRuleHandle.class));",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 97
              },
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 99
              },
              {
                "line": "public void removeRule(final RuleData ruleData) {",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": "RULE_CACHED_HANDLE.get().removeHandle(ruleData.getId());",
                "type": "ADD",
                "lineNo": 101
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 104
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.handler.AlibabaDubboPluginDataHandler.handlerSelector(SelectorData)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.SelectorData"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List dubboUpstreams"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromList(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromList(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getHandle()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List dubboUpstreams"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List graySelectorHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream each"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List dubboUpstreams"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream each"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.isGray()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream each"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.isGray()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.isGray()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream each"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.isGray()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List graySelectorHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream each"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List graySelectorHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.function.Supplier SELECTOR_CACHED_HANDLE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List graySelectorHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.submit(String,List)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.submit(String,List)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.handler.AlibabaDubboPluginDataHandler.convertUpstreamList(List)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.handler.AlibabaDubboPluginDataHandler.convertUpstreamList(List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List graySelectorHandle"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.handler.AlibabaDubboPluginDataHandler.removeSelector(SelectorData)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.SelectorData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.removeHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.function.Supplier SELECTOR_CACHED_HANDLE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.removeHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.removeByKey(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.removeByKey(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.handler.AlibabaDubboPluginDataHandler.handlerRule(RuleData)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.RuleData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.function.Supplier RULE_CACHED_HANDLE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getHandle()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.handler.AlibabaDubboPluginDataHandler.removeRule(RuleData)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.RuleData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.removeHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.function.Supplier RULE_CACHED_HANDLE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.removeHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private List<Upstream> convertUpstreamList(final List<DubboUpstream> handleList) {",
                "type": "ADD",
                "lineNo": 109
              },
              {
                "line": "return handleList.stream().map(u -> Upstream.builder()",
                "type": "ADD",
                "lineNo": 110
              },
              {
                "line": ".protocol(u.getProtocol())",
                "type": "ADD",
                "lineNo": 111
              },
              {
                "line": ".url(u.getUpstreamUrl())",
                "type": "ADD",
                "lineNo": 112
              },
              {
                "line": ".weight(u.getWeight())",
                "type": "ADD",
                "lineNo": 113
              },
              {
                "line": ".status(u.isStatus())",
                "type": "ADD",
                "lineNo": 114
              },
              {
                "line": ".timestamp(u.getTimestamp())",
                "type": "ADD",
                "lineNo": 115
              },
              {
                "line": ".warmup(u.getWarmup())",
                "type": "ADD",
                "lineNo": 116
              },
              {
                "line": ".group(u.getGroup())",
                "type": "ADD",
                "lineNo": 117
              },
              {
                "line": ".version(u.getVersion())",
                "type": "ADD",
                "lineNo": 118
              },
              {
                "line": ".build()).collect(Collectors.toList());",
                "type": "ADD",
                "lineNo": 119
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 120
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.handler.AlibabaDubboPluginDataHandler.convertUpstreamList(List)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List handleList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List handleList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream u"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.version(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.group(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.warmup(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.timestamp(long)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.status(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.weight(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.url(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.protocol(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream.builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.protocol(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.getProtocol()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.getProtocol()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.url(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.weight(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.getWeight()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.getWeight()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.status(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.isStatus()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.isStatus()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.timestamp(long)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.getTimestamp()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.getTimestamp()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.warmup(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.getWarmup()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.getWarmup()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.group(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.getGroup()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.getGroup()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.version(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.getVersion()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.getVersion()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.build()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-alibaba-dubbo/src/test/java/org/apache/shenyu/plugin/alibaba/dubbo/AlibabaDubboPluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-alibaba-dubbo/src/test/java/org/apache/shenyu/plugin/alibaba/dubbo/AlibabaDubboPluginTest.java",
        "name": "org.apache.shenyu.plugin.alibaba.dubbo.AlibabaDubboPluginTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "final ServerWebExchange exchange = MockServerWebExchange.from(MockServerHttpRequest.get(\"localhost\").build());",
                "type": "DELETE",
                "lineNo": 105
              }
            ],
            "targetChanges": [
              {
                "line": "final ServerWebExchange exchange = MockServerWebExchange.from(MockServerHttpRequest.get(\"localhost\").remoteAddress(new InetSocketAddress(\"127.0.0.1\", 20880)).build());",
                "type": "ADD",
                "lineNo": 107
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.server.ServerWebExchange"
              },
              {
                "type": "CtInvocation",
                "value": "from()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.mock.web.server.MockServerWebExchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "from()"
              },
              {
                "type": "CtInvocation",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.mock.http.server.reactive.MockServerHttpRequest"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'localhost'"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.server.ServerWebExchange"
              },
              {
                "type": "CtInvocation",
                "value": "from()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.mock.web.server.MockServerWebExchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "from()"
              },
              {
                "type": "CtInvocation",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "remoteAddress(java.net.InetSocketAddress)"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.mock.http.server.reactive.MockServerHttpRequest"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'localhost'"
              },
              {
                "type": "CtExecutableReference",
                "value": "remoteAddress(java.net.InetSocketAddress)"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.net.InetSocketAddress.InetSocketAddress(String,int)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.net.InetSocketAddress"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1'"
              },
              {
                "type": "CtLiteral",
                "value": "int '20880'"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "final ServerWebExchange exchange = MockServerWebExchange.from(MockServerHttpRequest.get(\"localhost\").build());",
                "type": "DELETE",
                "lineNo": 122
              }
            ],
            "targetChanges": [
              {
                "line": "final ServerWebExchange exchange = MockServerWebExchange.from(MockServerHttpRequest.get(\"localhost\").remoteAddress(new InetSocketAddress(\"127.0.0.1\", 20880)).build());",
                "type": "ADD",
                "lineNo": 124
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.server.ServerWebExchange"
              },
              {
                "type": "CtInvocation",
                "value": "from()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.mock.web.server.MockServerWebExchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "from()"
              },
              {
                "type": "CtInvocation",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.mock.http.server.reactive.MockServerHttpRequest"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'localhost'"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.server.ServerWebExchange"
              },
              {
                "type": "CtInvocation",
                "value": "from()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.mock.web.server.MockServerWebExchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "from()"
              },
              {
                "type": "CtInvocation",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "remoteAddress(java.net.InetSocketAddress)"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.mock.http.server.reactive.MockServerHttpRequest"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'localhost'"
              },
              {
                "type": "CtExecutableReference",
                "value": "remoteAddress(java.net.InetSocketAddress)"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.net.InetSocketAddress.InetSocketAddress(String,int)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.net.InetSocketAddress"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1'"
              },
              {
                "type": "CtLiteral",
                "value": "int '20880'"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/proxy/ApacheDubboGrayLoadBalance.java",
        "aPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/proxy/ApacheDubboGrayLoadBalance.java",
        "name": "org.apache.shenyu.plugin.apache.dubbo.proxy.ApacheDubboGrayLoadBalance",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return upstream.getGroup().equals(eachUrl.getParameter(CommonConstants.GROUP_KEY));",
                "type": "DELETE",
                "lineNo": 68
              }
            ],
            "targetChanges": [
              {
                "line": "return upstream.getGroup().equals(eachUrl.getParameter(Constants.GROUP));",
                "type": "ADD",
                "lineNo": 67
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "equals()"
              },
              {
                "type": "CtInvocation",
                "value": "getGroup()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream upstream"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream upstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "getGroup()"
              },
              {
                "type": "CtExecutableReference",
                "value": "equals()"
              },
              {
                "type": "CtInvocation",
                "value": "getParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.common.URL eachUrl"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.dubbo.common.URL eachUrl"
              },
              {
                "type": "CtExecutableReference",
                "value": "getParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> CommonConstants.GROUP_KEY"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "equals()"
              },
              {
                "type": "CtInvocation",
                "value": "getGroup()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream upstream"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream upstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "getGroup()"
              },
              {
                "type": "CtExecutableReference",
                "value": "equals()"
              },
              {
                "type": "CtInvocation",
                "value": "getParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.common.URL eachUrl"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.dubbo.common.URL eachUrl"
              },
              {
                "type": "CtExecutableReference",
                "value": "getParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.GROUP"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return upstream.getVersion().equals(eachUrl.getParameter(CommonConstants.VERSION_KEY));",
                "type": "DELETE",
                "lineNo": 74
              }
            ],
            "targetChanges": [
              {
                "line": "return upstream.getVersion().equals(eachUrl.getParameter(Constants.VERSION));",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "equals()"
              },
              {
                "type": "CtInvocation",
                "value": "getVersion()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream upstream"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream upstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "getVersion()"
              },
              {
                "type": "CtExecutableReference",
                "value": "equals()"
              },
              {
                "type": "CtInvocation",
                "value": "getParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.common.URL eachUrl"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.dubbo.common.URL eachUrl"
              },
              {
                "type": "CtExecutableReference",
                "value": "getParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> CommonConstants.VERSION_KEY"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "equals()"
              },
              {
                "type": "CtInvocation",
                "value": "getVersion()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream upstream"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream upstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "getVersion()"
              },
              {
                "type": "CtExecutableReference",
                "value": "equals()"
              },
              {
                "type": "CtInvocation",
                "value": "getParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.common.URL eachUrl"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.dubbo.common.URL eachUrl"
              },
              {
                "type": "CtExecutableReference",
                "value": "getParameter()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.VERSION"
              }
            ]
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "be2c3ff1c",
    "aCommit": "09b236e16",
    "changes": [
      {
        "bPath": "shenyu-sync-data-center/shenyu-sync-data-zookeeper/src/main/java/org/apache/shenyu/sync/data/zookeeper/ZookeeperClient.java",
        "aPath": "shenyu-sync-data-center/shenyu-sync-data-zookeeper/src/main/java/org/apache/shenyu/sync/data/zookeeper/ZookeeperClient.java",
        "name": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class ZookeeperClient {",
                "type": "DELETE",
                "lineNo": 40
              }
            ],
            "targetChanges": [
              {
                "line": "public class ZookeeperClient implements AutoCloseable {",
                "type": "ADD",
                "lineNo": 41
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.AutoCloseable"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 85
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "throw new ShenyuException(e);",
                "type": "DELETE",
                "lineNo": 204
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.error(\"zookeeper get child error=\", e);",
                "type": "ADD",
                "lineNo": 206
              },
              {
                "line": "return Collections.emptyList();",
                "type": "ADD",
                "lineNo": 207
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Throwable)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Throwable)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'zookeeper get child error='"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collections.emptyList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collections.emptyList()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-sync-data-center/shenyu-sync-data-zookeeper/src/main/java/org/apache/shenyu/sync/data/zookeeper/ZookeeperSyncDataService.java",
        "aPath": "shenyu-sync-data-center/shenyu-sync-data-zookeeper/src/main/java/org/apache/shenyu/sync/data/zookeeper/ZookeeperSyncDataService.java",
        "name": "org.apache.shenyu.sync.data.zookeeper.ZookeeperSyncDataService",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "if (!zkClient.getChildren(path).isEmpty()) {",
                "type": "ADD",
                "lineNo": 227
              },
              {
                "line": "return;",
                "type": "ADD",
                "lineNo": 228
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 229
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.List.isEmpty()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient.getChildren(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient zkClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient.getChildren(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.isEmpty()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "if (!zkClient.getChildren(path).isEmpty()) {",
                "type": "ADD",
                "lineNo": 296
              },
              {
                "line": "return;",
                "type": "ADD",
                "lineNo": 297
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 298
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.List.isEmpty()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient.getChildren(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient zkClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient.getChildren(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.isEmpty()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-sync-data-center/shenyu-sync-data-zookeeper/src/test/java/org/apache/shenyu/sync/data/zookeeper/ZookeeperClientTest.java",
        "aPath": "shenyu-sync-data-center/shenyu-sync-data-zookeeper/src/test/java/org/apache/shenyu/sync/data/zookeeper/ZookeeperClientTest.java",
        "name": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClientTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertThrows(ShenyuException.class, () -> client.getChildren(\"/test\"));",
                "type": "DELETE",
                "lineNo": 147
              }
            ],
            "targetChanges": [
              {
                "line": "assertTrue(client.getChildren(\"/test\").isEmpty());",
                "type": "ADD",
                "lineNo": 147
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertThrows(java.lang.Class,java.lang.Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThrows(java.lang.Class,java.lang.Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "getChildren()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient client"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient client"
              },
              {
                "type": "CtExecutableReference",
                "value": "getChildren()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/test'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertTrue(boolean)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertTrue(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.isEmpty()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient.getChildren(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient client"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.zookeeper.ZookeeperClient.getChildren(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/test'"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.isEmpty()"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "40ce7cb25",
    "aCommit": "dc31e2ae1",
    "changes": [
      {
        "bPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/Resilience4JPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/Resilience4JPlugin.java",
        "name": "org.apache.shenyu.plugin.resilience4j.Resilience4JPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assert shenyuContext != null;",
                "type": "DELETE",
                "lineNo": 61
              }
            ],
            "targetChanges": [
              {
                "line": "Objects.requireNonNull(shenyuContext);",
                "type": "ADD",
                "lineNo": 61
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.requireNonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.requireNonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/build/Resilience4JBuilder.java",
        "aPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/build/Resilience4JBuilder.java",
        "name": "org.apache.shenyu.plugin.resilience4j.build.Resilience4JBuilder",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": ".limitRefreshPeriod(Duration.ofNanos(handle.getLimitRefreshPeriod() * 1000000)).build();",
                "type": "DELETE",
                "lineNo": 64
              }
            ],
            "targetChanges": [
              {
                "line": ".limitRefreshPeriod(Duration.ofNanos(handle.getLimitRefreshPeriod() * 1000000L)).build();",
                "type": "ADD",
                "lineNo": 64
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "limitRefreshPeriod(java.time.Duration)"
              },
              {
                "type": "CtInvocation",
                "value": "java.time.Duration.ofNanos(long)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.time.Duration"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.time.Duration.ofNanos(long)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.Resilience4JHandle.getLimitRefreshPeriod()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.Resilience4JHandle handle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.Resilience4JHandle.getLimitRefreshPeriod()"
              },
              {
                "type": "CtLiteral",
                "value": "int '1000000'"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "limitRefreshPeriod(java.time.Duration)"
              },
              {
                "type": "CtInvocation",
                "value": "java.time.Duration.ofNanos(long)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.time.Duration"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.time.Duration.ofNanos(long)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.Resilience4JHandle.getLimitRefreshPeriod()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.Resilience4JHandle handle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.Resilience4JHandle.getLimitRefreshPeriod()"
              },
              {
                "type": "CtLiteral",
                "value": "long '1000000'"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/conf/Resilience4JConf.java",
        "aPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/conf/Resilience4JConf.java",
        "name": "org.apache.shenyu.plugin.resilience4j.conf.Resilience4JConf",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "@SuppressWarnings(\"unused\")",
                "type": "ADD",
                "lineNo": 27
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "java.lang.SuppressWarnings"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'unused'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/executor/RateLimiterExecutor.java",
        "aPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/executor/RateLimiterExecutor.java",
        "name": "org.apache.shenyu.plugin.resilience4j.executor.RateLimiterExecutor",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (Objects.nonNull(fallback)) {",
                "type": "DELETE",
                "lineNo": 38
              },
              {
                "line": "return to.onErrorResume(fallback);",
                "type": "DELETE",
                "lineNo": 39
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 40
              },
              {
                "line": "return to;",
                "type": "DELETE",
                "lineNo": 41
              }
            ],
            "targetChanges": [
              {
                "line": "return Optional.ofNullable(fallback)",
                "type": "ADD",
                "lineNo": 39
              },
              {
                "line": ".map(to::onErrorResume)",
                "type": "ADD",
                "lineNo": 40
              },
              {
                "line": ".orElse(to);",
                "type": "ADD",
                "lineNo": 41
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Function fallback"
              },
              {
                "type": "CtInvocation",
                "value": "onErrorResume(java.util.function.Function)"
              },
              {
                "type": "CtVariableRead",
                "value": "reactor.core.publisher.Mono to"
              },
              {
                "type": "CtExecutableReference",
                "value": "onErrorResume(java.util.function.Function)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Function fallback"
              },
              {
                "type": "CtVariableRead",
                "value": "reactor.core.publisher.Mono to"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "orElse(reactor.core.publisher.Mono)"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Function fallback"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "onErrorResume()"
              },
              {
                "type": "CtVariableRead",
                "value": "reactor.core.publisher.Mono to"
              },
              {
                "type": "CtExecutableReference",
                "value": "orElse(reactor.core.publisher.Mono)"
              },
              {
                "type": "CtVariableRead",
                "value": "reactor.core.publisher.Mono to"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/handler/Resilience4JHandler.java",
        "aPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/handler/Resilience4JHandler.java",
        "name": "org.apache.shenyu.plugin.resilience4j.handler.Resilience4JHandler",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public static final Supplier<CommonHandleCache<String, Resilience4JHandle>> CACHED_HANDLE = new BeanHolder(CommonHandleCache::new);",
                "type": "DELETE",
                "lineNo": 38
              }
            ],
            "targetChanges": [
              {
                "line": "public static final Supplier<CommonHandleCache<String, Resilience4JHandle>> CACHED_HANDLE = new BeanHolder<>(CommonHandleCache::new);",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "java.util.function.Supplier CACHED_HANDLE"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.Resilience4JHandle"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.base.utils.BeanHolder.BeanHolder(Supplier)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.utils.BeanHolder"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.CommonHandleCache()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.CommonHandleCache()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.util.function.Supplier CACHED_HANDLE"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.Resilience4JHandle"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.base.utils.BeanHolder.BeanHolder(Supplier)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.utils.BeanHolder"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.CommonHandleCache()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.CommonHandleCache()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/test/java/org/apache/shenyu/plugin/resilience4j/executor/CombinedExecutorTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/test/java/org/apache/shenyu/plugin/resilience4j/executor/CombinedExecutorTest.java",
        "name": "org.apache.shenyu.plugin.resilience4j.executor.CombinedExecutorTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "Mono mono = Mono.just(\"ERROR\");",
                "type": "DELETE",
                "lineNo": 54
              }
            ],
            "targetChanges": [
              {
                "line": "Mono<String> mono = Mono.just(\"ERROR\");",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "reactor.core.publisher.Mono mono"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtInvocation",
                "value": "just(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "just(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ERROR'"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "reactor.core.publisher.Mono mono"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "just(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "just(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ERROR'"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "StepVerifier.create(combinedExecutor.run(Mono.error(new RuntimeException()), throwable -> Mono.error(throwable), conf))",
                "type": "DELETE",
                "lineNo": 69
              }
            ],
            "targetChanges": [
              {
                "line": "StepVerifier.create(combinedExecutor.run(Mono.error(new RuntimeException()), Mono::error, conf))",
                "type": "ADD",
                "lineNo": 69
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "verify()"
              },
              {
                "type": "CtInvocation",
                "value": "expectError(java.lang.Class)"
              },
              {
                "type": "CtInvocation",
                "value": "expectSubscription()"
              },
              {
                "type": "CtInvocation",
                "value": "create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.test.StepVerifier"
              },
              {
                "type": "CtExecutableReference",
                "value": "create()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.CombinedExecutor.run(Mono,Function,Resilience4JConf)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.CombinedExecutor combinedExecutor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.CombinedExecutor.run(Mono,Function,Resilience4JConf)"
              },
              {
                "type": "CtInvocation",
                "value": "error(java.lang.RuntimeException)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.RuntimeException)"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.lang.RuntimeException.RuntimeException()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.RuntimeException"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtInvocation",
                "value": "error()"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "error()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.resilience4j.conf.Resilience4JConf conf"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "verify()"
              },
              {
                "type": "CtInvocation",
                "value": "expectError(java.lang.Class)"
              },
              {
                "type": "CtInvocation",
                "value": "expectSubscription()"
              },
              {
                "type": "CtInvocation",
                "value": "create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.test.StepVerifier"
              },
              {
                "type": "CtExecutableReference",
                "value": "create()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.CombinedExecutor.run(Mono,Function,Resilience4JConf)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.CombinedExecutor combinedExecutor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.CombinedExecutor.run(Mono,Function,Resilience4JConf)"
              },
              {
                "type": "CtInvocation",
                "value": "error(java.lang.RuntimeException)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.RuntimeException)"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.lang.RuntimeException.RuntimeException()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.RuntimeException"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "error()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.CombinedExecutorTest Mono"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.resilience4j.conf.Resilience4JConf conf"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/test/java/org/apache/shenyu/plugin/resilience4j/executor/RateLimiterExecutorTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/test/java/org/apache/shenyu/plugin/resilience4j/executor/RateLimiterExecutorTest.java",
        "name": "org.apache.shenyu.plugin.resilience4j.executor.RateLimiterExecutorTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "Mono mono = Mono.just(\"ERROR\");",
                "type": "DELETE",
                "lineNo": 50
              }
            ],
            "targetChanges": [
              {
                "line": "Mono<String> mono = Mono.just(\"ERROR\");",
                "type": "ADD",
                "lineNo": 50
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "reactor.core.publisher.Mono mono"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtInvocation",
                "value": "just(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "just(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ERROR'"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "reactor.core.publisher.Mono mono"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "just(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "just(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ERROR'"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "StepVerifier.create(ratelimiterExecutor.run(Mono.error(new RuntimeException()), throwable -> Mono.error(throwable), conf))",
                "type": "DELETE",
                "lineNo": 62
              }
            ],
            "targetChanges": [
              {
                "line": "StepVerifier.create(ratelimiterExecutor.run(Mono.error(new RuntimeException()), Mono::error, conf))",
                "type": "ADD",
                "lineNo": 62
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "expectError(java.lang.Class)"
              },
              {
                "type": "CtInvocation",
                "value": "expectSubscription()"
              },
              {
                "type": "CtInvocation",
                "value": "create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.test.StepVerifier"
              },
              {
                "type": "CtExecutableReference",
                "value": "create()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.RateLimiterExecutor.run(Mono,Function,Resilience4JConf)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.RateLimiterExecutor ratelimiterExecutor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.RateLimiterExecutor.run(Mono,Function,Resilience4JConf)"
              },
              {
                "type": "CtInvocation",
                "value": "error(java.lang.RuntimeException)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.RuntimeException)"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.lang.RuntimeException.RuntimeException()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.RuntimeException"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtInvocation",
                "value": "error()"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "error()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.resilience4j.conf.Resilience4JConf conf"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "verify()"
              },
              {
                "type": "CtInvocation",
                "value": "expectError(java.lang.Class)"
              },
              {
                "type": "CtInvocation",
                "value": "expectSubscription()"
              },
              {
                "type": "CtInvocation",
                "value": "create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.test.StepVerifier"
              },
              {
                "type": "CtExecutableReference",
                "value": "create()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.RateLimiterExecutor.run(Mono,Function,Resilience4JConf)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.RateLimiterExecutor ratelimiterExecutor"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.RateLimiterExecutor.run(Mono,Function,Resilience4JConf)"
              },
              {
                "type": "CtInvocation",
                "value": "error(java.lang.RuntimeException)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.RuntimeException)"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.lang.RuntimeException.RuntimeException()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.RuntimeException"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "error()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.resilience4j.executor.RateLimiterExecutorTest Mono"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.resilience4j.conf.Resilience4JConf conf"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".expectError(RuntimeException.class);",
                "type": "DELETE",
                "lineNo": 64
              }
            ],
            "targetChanges": [
              {
                "line": ".expectError(RuntimeException.class)",
                "type": "ADD",
                "lineNo": 64
              },
              {
                "line": ".verify();",
                "type": "ADD",
                "lineNo": 65
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "expectError(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "expectError(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "verify()"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "792dd3e5f",
    "aCommit": "1fb1d2898",
    "changes": [
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/DataBaseConfiguration.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/DataBaseConfiguration.java",
        "name": "org.apache.shenyu.admin.config.DataBaseConfiguration",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* @param dbScript the db script",
                "type": "DELETE",
                "lineNo": 38
              }
            ],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "@Value(\"${shenyu.database.init_enable:true}\") final Boolean initEnable,",
                "type": "DELETE",
                "lineNo": 45
              },
              {
                "line": "@Value(\"${shenyu.database.db_script}\") final String dbScript) {",
                "type": "DELETE",
                "lineNo": 46
              }
            ],
            "targetChanges": [
              {
                "line": "@Value(\"${shenyu.database.init_enable:true}\") final Boolean initEnable) {",
                "type": "ADD",
                "lineNo": 44
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtParameter",
                "value": "java.lang.Boolean initEnable"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.beans.factory.annotation.Value"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '${shenyu.database.init_enable:true}'"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String dbScript"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.beans.factory.annotation.Value"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '${shenyu.database.db_script}'"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtParameter",
                "value": "java.lang.Boolean initEnable"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.beans.factory.annotation.Value"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '${shenyu.database.init_enable:true}'"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Boolean"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "dataSourceProperties.setDbScript(dbScript);",
                "type": "DELETE",
                "lineNo": 51
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.setDbScript(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties dataSourceProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.setDbScript(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String dbScript"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/MapperConfig.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/MapperConfig.java",
        "name": "org.apache.shenyu.admin.config.MapperConfig",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 44
              },
              {
                "line": "* Add the plugin to the MyBatis plugin interceptor chain.",
                "type": "ADD",
                "lineNo": 45
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 46
              },
              {
                "line": "* @return {@linkplain PostgreSqlUpdateInterceptor}",
                "type": "ADD",
                "lineNo": 47
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 48
              },
              {
                "line": "@Bean",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "@ConditionalOnProperty(name = \"shenyu.database.dialect\", havingValue = \"postgresql\")",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "public PostgreSqlUpdateInterceptor postgreSqlUpdateInterceptor() {",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "return new PostgreSqlUpdateInterceptor();",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 53
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.config.MapperConfig.postgreSqlUpdateInterceptor()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'postgresql'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu.database.dialect'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor.PostgreSqlUpdateInterceptor()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.mybatis.pg.interceptor.PostgreSqlUpdateInterceptor"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/properties/DataBaseProperties.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/properties/DataBaseProperties.java",
        "name": "org.apache.shenyu.admin.config.properties.DataBaseProperties",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private String dbScript;",
                "type": "DELETE",
                "lineNo": 36
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "java.lang.String dbScript"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 92
              },
              {
                "line": "* Gets the value of dbScript.",
                "type": "DELETE",
                "lineNo": 93
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 94
              },
              {
                "line": "* @return the value of dbScript",
                "type": "DELETE",
                "lineNo": 95
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 96
              },
              {
                "line": "public String getDbScript() {",
                "type": "DELETE",
                "lineNo": 97
              },
              {
                "line": "return dbScript;",
                "type": "DELETE",
                "lineNo": 98
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 99
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 101
              },
              {
                "line": "* Sets the dbScript.",
                "type": "DELETE",
                "lineNo": 102
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 103
              },
              {
                "line": "* @param dbScript dbScript",
                "type": "DELETE",
                "lineNo": 104
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 105
              },
              {
                "line": "public void setDbScript(final String dbScript) {",
                "type": "DELETE",
                "lineNo": 106
              },
              {
                "line": "this.dbScript = dbScript;",
                "type": "DELETE",
                "lineNo": 107
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 108
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.getDbScript()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String dbScript"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.setDbScript(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String dbScript"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String dbScript"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String dbScript"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/spring/LocalDataSourceLoader.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/spring/LocalDataSourceLoader.java",
        "name": "org.apache.shenyu.admin.spring.LocalDataSourceLoader",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@DependsOn(value = \"postgreSqlLoader\")",
                "type": "DELETE",
                "lineNo": 40
              },
              {
                "line": "public class LocalDataSourceLoader extends ScriptLoader implements InstantiationAwareBeanPostProcessor {",
                "type": "DELETE",
                "lineNo": 41
              }
            ],
            "targetChanges": [
              {
                "line": "@ConditionalOnExpression(\"'${shenyu.database.dialect}' == 'mysql' or '${shenyu.database.dialect}' == 'h2'\")",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "public class LocalDataSourceLoader implements InstantiationAwareBeanPostProcessor {",
                "type": "ADD",
                "lineNo": 50
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.admin.spring.LocalDataSourceLoader"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.DependsOn"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'postgreSqlLoader'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.spring.ScriptLoader"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.admin.spring.LocalDataSourceLoader"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnExpression"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''${shenyu.database.dialect}' == 'mysql' or '${shenyu.database.dialect}' == 'h2''"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private static final String PRE_FIX = \"file:\";",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String PRE_FIX"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'file:'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "super.execute(connection, dataBaseProperties.getInitScript());",
                "type": "DELETE",
                "lineNo": 63
              }
            ],
            "targetChanges": [
              {
                "line": "this.execute(connection, dataBaseProperties.getInitScript());",
                "type": "ADD",
                "lineNo": 74
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.spring.ScriptLoader.execute(Connection,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.spring.ScriptLoader.execute(Connection,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.sql.Connection connection"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.getInitScript()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties dataBaseProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.getInitScript()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.spring.LocalDataSourceLoader.execute(Connection,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.spring.LocalDataSourceLoader.execute(Connection,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.sql.Connection connection"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.getInitScript()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties dataBaseProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.getInitScript()"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "protected void execute(final Connection conn, final String script) throws Exception {",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "ScriptRunner runner = new ScriptRunner(conn);",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "// doesn't print logger",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "runner.setLogWriter(null);",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "runner.setAutoCommit(true);",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "Resources.setCharset(StandardCharsets.UTF_8);",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "List<String> initScripts = Splitter.on(\";\").splitToList(script);",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "for (String sqlScript : initScripts) {",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "if (sqlScript.startsWith(PRE_FIX)) {",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "String sqlFile = sqlScript.substring(PRE_FIX.length());",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "try (Reader fileReader = getResourceAsReader(sqlFile)) {",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "LOG.info(\"execute shenyu schema sql: {}\", sqlFile);",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "runner.runScript(fileReader);",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "} else {",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "try (Reader fileReader = Resources.getResourceAsReader(sqlScript)) {",
                "type": "ADD",
                "lineNo": 97
              },
              {
                "line": "LOG.info(\"execute shenyu schema sql: {}\", sqlScript);",
                "type": "ADD",
                "lineNo": 98
              },
              {
                "line": "runner.runScript(fileReader);",
                "type": "ADD",
                "lineNo": 99
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 101
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "} finally {",
                "type": "ADD",
                "lineNo": 103
              },
              {
                "line": "runner.closeConnection();",
                "type": "ADD",
                "lineNo": 104
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 105
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 106
              },
              {
                "line": "private static Reader getResourceAsReader(final String resource) throws IOException {",
                "type": "ADD",
                "lineNo": 108
              },
              {
                "line": "return new InputStreamReader(new FileInputStream(resource), StandardCharsets.UTF_8);",
                "type": "ADD",
                "lineNo": 109
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 110
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.spring.LocalDataSourceLoader.execute(Connection,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.sql.Connection conn"
              },
              {
                "type": "CtTypeReference",
                "value": "java.sql.Connection"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String script"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.ibatis.jdbc.ScriptRunner runner"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.ibatis.jdbc.ScriptRunner"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.ibatis.jdbc.ScriptRunner(java.sql.Connection)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.ibatis.jdbc.ScriptRunner"
              },
              {
                "type": "CtVariableRead",
                "value": "java.sql.Connection conn"
              },
              {
                "type": "CtInvocation",
                "value": "setLogWriter(<unknown>)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.ibatis.jdbc.ScriptRunner runner"
              },
              {
                "type": "CtExecutableReference",
                "value": "setLogWriter(<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "setAutoCommit(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.ibatis.jdbc.ScriptRunner runner"
              },
              {
                "type": "CtExecutableReference",
                "value": "setAutoCommit(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "setCharset(java.nio.charset.Charset)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.ibatis.io.Resources"
              },
              {
                "type": "CtExecutableReference",
                "value": "setCharset(java.nio.charset.Charset)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.nio.charset.StandardCharsets"
              },
              {
                "type": "CtFieldReference",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List initScripts"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.base.Splitter.splitToList(CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "com.google.common.base.Splitter.on(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.common.base.Splitter"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.base.Splitter.on(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ';'"
              },
              {
                "type": "CtExecutableReference",
                "value": "com.google.common.base.Splitter.splitToList(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String script"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String sqlScript"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List initScripts"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.startsWith(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String sqlScript"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.startsWith(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PRE_FIX"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String sqlFile"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.substring(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String sqlScript"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.substring(int)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.length()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PRE_FIX"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.length()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.io.Reader fileReader"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.Reader"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.spring.LocalDataSourceLoader.getResourceAsReader(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.spring.LocalDataSourceLoader.getResourceAsReader(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String sqlFile"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'execute shenyu schema sql: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String sqlFile"
              },
              {
                "type": "CtInvocation",
                "value": "runScript(java.io.Reader)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.ibatis.jdbc.ScriptRunner runner"
              },
              {
                "type": "CtExecutableReference",
                "value": "runScript(java.io.Reader)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.io.Reader fileReader"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.io.Reader fileReader"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.Reader"
              },
              {
                "type": "CtInvocation",
                "value": "getResourceAsReader(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.ibatis.io.Resources"
              },
              {
                "type": "CtExecutableReference",
                "value": "getResourceAsReader(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String sqlScript"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'execute shenyu schema sql: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String sqlScript"
              },
              {
                "type": "CtInvocation",
                "value": "runScript(java.io.Reader)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.ibatis.jdbc.ScriptRunner runner"
              },
              {
                "type": "CtExecutableReference",
                "value": "runScript(java.io.Reader)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.io.Reader fileReader"
              },
              {
                "type": "CtInvocation",
                "value": "closeConnection()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.ibatis.jdbc.ScriptRunner runner"
              },
              {
                "type": "CtExecutableReference",
                "value": "closeConnection()"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.spring.LocalDataSourceLoader.getResourceAsReader(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.Reader"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String resource"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.IOException"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.io.InputStreamReader.InputStreamReader(InputStream,Charset)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.InputStreamReader"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.io.FileInputStream.FileInputStream(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.FileInputStream"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String resource"
              },
              {
                "type": "CtFieldRead",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.nio.charset.StandardCharsets"
              },
              {
                "type": "CtFieldReference",
                "value": "java.nio.charset.Charset UTF_8"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/spring/PostgreSqlLoader.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/spring/PostgreSqlLoader.java",
        "name": "org.apache.shenyu.admin.spring.PostgreSqlLoader",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class PostgreSqlLoader extends ScriptLoader implements InstantiationAwareBeanPostProcessor {",
                "type": "DELETE",
                "lineNo": 40
              }
            ],
            "targetChanges": [
              {
                "line": "@ConditionalOnProperty(name = \"shenyu.database.dialect\", havingValue = \"postgresql\")",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "public class PostgreSqlLoader implements InstantiationAwareBeanPostProcessor {",
                "type": "ADD",
                "lineNo": 50
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.admin.spring.PostgreSqlLoader"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.spring.ScriptLoader"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.admin.spring.PostgreSqlLoader"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'postgresql'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu.database.dialect'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if ((bean instanceof DataSourceProperties) && dataBaseProperties.getDialect().equals(\"postgresql\")) {",
                "type": "DELETE",
                "lineNo": 49
              }
            ],
            "targetChanges": [
              {
                "line": "if ((bean instanceof DataSourceProperties) && dataBaseProperties.getInitEnable()) {",
                "type": "ADD",
                "lineNo": 59
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object bean"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.getDialect()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties dataBaseProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.getDialect()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'postgresql'"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object bean"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.getInitEnable()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties dataBaseProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.getInitEnable()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "String jdbcUrl = StringUtils.replace(properties.getUrl(), \"/shenyu\", \"/postgres\");",
                "type": "DELETE",
                "lineNo": 60
              },
              {
                "line": "Connection connection = DriverManager.getConnection(jdbcUrl, properties.getUsername(), properties.getPassword());",
                "type": "DELETE",
                "lineNo": 61
              },
              {
                "line": "super.execute(connection, dataBaseProperties.getDbScript());",
                "type": "DELETE",
                "lineNo": 62
              }
            ],
            "targetChanges": [
              {
                "line": "String jdbcUrl = StringUtils.replace(properties.getUrl(), \"/shenyu\", \"/\");",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "Connection conn = DriverManager.getConnection(jdbcUrl, properties.getUsername(), properties.getPassword());",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "this.execute(properties, conn);",
                "type": "ADD",
                "lineNo": 72
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String jdbcUrl"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.replace(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.replace(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "getUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties properties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getUrl()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/shenyu'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/postgres'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.sql.Connection connection"
              },
              {
                "type": "CtTypeReference",
                "value": "java.sql.Connection"
              },
              {
                "type": "CtInvocation",
                "value": "java.sql.DriverManager.getConnection(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.sql.DriverManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.sql.DriverManager.getConnection(String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String jdbcUrl"
              },
              {
                "type": "CtInvocation",
                "value": "getUsername()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties properties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getUsername()"
              },
              {
                "type": "CtInvocation",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties properties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPassword()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.spring.ScriptLoader.execute(Connection,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.spring.ScriptLoader.execute(Connection,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.sql.Connection connection"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.getDbScript()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties dataBaseProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.getDbScript()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String jdbcUrl"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.replace(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.replace(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "getUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties properties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getUrl()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/shenyu'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.sql.Connection conn"
              },
              {
                "type": "CtTypeReference",
                "value": "java.sql.Connection"
              },
              {
                "type": "CtInvocation",
                "value": "java.sql.DriverManager.getConnection(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.sql.DriverManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.sql.DriverManager.getConnection(String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String jdbcUrl"
              },
              {
                "type": "CtInvocation",
                "value": "getUsername()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties properties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getUsername()"
              },
              {
                "type": "CtInvocation",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties properties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPassword()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.spring.PostgreSqlLoader.execute(DataSourceProperties,Connection)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.spring.PostgreSqlLoader.execute(DataSourceProperties,Connection)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties properties"
              },
              {
                "type": "CtVariableRead",
                "value": "java.sql.Connection conn"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private void execute(final DataSourceProperties properties, final Connection conn) throws IOException, SQLException {",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "ScriptRunner runner = new ScriptRunner(conn);",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "// doesn't print logger",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "runner.setLogWriter(null);",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "// doesn't print error",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "runner.setErrorLogWriter(null);",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "runner.setAutoCommit(false);",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "runner.setSendFullScript(true);",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "Resources.setCharset(StandardCharsets.UTF_8);",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "Reader read = this.fillInfoToSqlFile(properties.getUsername(), properties.getPassword());",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "runner.runScript(read);",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "conn.commit();",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "} finally {",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "runner.closeConnection();",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "conn.close();",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "private Reader fillInfoToSqlFile(final String userName, final String password) throws IOException {",
                "type": "ADD",
                "lineNo": 98
              },
              {
                "line": "final BufferedReader reader = new BufferedReader(Resources.getResourceAsReader(dataBaseProperties.getInitScript()));",
                "type": "ADD",
                "lineNo": 99
              },
              {
                "line": "final StringBuilder builder = new StringBuilder();",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": "String str;",
                "type": "ADD",
                "lineNo": 101
              },
              {
                "line": "while ((str = reader.readLine()) != null) {",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "builder.append(str.replace(\"_user TEXT := 'userName'\", \"_user TEXT := '\" + userName + \"'\")",
                "type": "ADD",
                "lineNo": 103
              },
              {
                "line": ".replace(\"_password TEXT := 'password'\", \"_password TEXT := '\" + password + \"'\"))",
                "type": "ADD",
                "lineNo": 104
              },
              {
                "line": ".append(System.lineSeparator());",
                "type": "ADD",
                "lineNo": 105
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 106
              },
              {
                "line": "reader.close();",
                "type": "ADD",
                "lineNo": 107
              },
              {
                "line": "return new StringReader(builder.toString());",
                "type": "ADD",
                "lineNo": 108
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 109
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.spring.PostgreSqlLoader.execute(DataSourceProperties,Connection)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties properties"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
              },
              {
                "type": "CtParameter",
                "value": "java.sql.Connection conn"
              },
              {
                "type": "CtTypeReference",
                "value": "java.sql.Connection"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.IOException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.sql.SQLException"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.ibatis.jdbc.ScriptRunner runner"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.ibatis.jdbc.ScriptRunner"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.ibatis.jdbc.ScriptRunner(java.sql.Connection)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.ibatis.jdbc.ScriptRunner"
              },
              {
                "type": "CtVariableRead",
                "value": "java.sql.Connection conn"
              },
              {
                "type": "CtInvocation",
                "value": "setLogWriter(<unknown>)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.ibatis.jdbc.ScriptRunner runner"
              },
              {
                "type": "CtExecutableReference",
                "value": "setLogWriter(<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "setErrorLogWriter(<unknown>)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.ibatis.jdbc.ScriptRunner runner"
              },
              {
                "type": "CtExecutableReference",
                "value": "setErrorLogWriter(<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "setAutoCommit(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.ibatis.jdbc.ScriptRunner runner"
              },
              {
                "type": "CtExecutableReference",
                "value": "setAutoCommit(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'false'"
              },
              {
                "type": "CtInvocation",
                "value": "setSendFullScript(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.ibatis.jdbc.ScriptRunner runner"
              },
              {
                "type": "CtExecutableReference",
                "value": "setSendFullScript(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "setCharset(java.nio.charset.Charset)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.ibatis.io.Resources"
              },
              {
                "type": "CtExecutableReference",
                "value": "setCharset(java.nio.charset.Charset)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.nio.charset.StandardCharsets"
              },
              {
                "type": "CtFieldReference",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.io.Reader read"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.Reader"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.spring.PostgreSqlLoader.fillInfoToSqlFile(String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.spring.PostgreSqlLoader.fillInfoToSqlFile(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "getUsername()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties properties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getUsername()"
              },
              {
                "type": "CtInvocation",
                "value": "getPassword()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties properties"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPassword()"
              },
              {
                "type": "CtInvocation",
                "value": "runScript(java.io.Reader)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.ibatis.jdbc.ScriptRunner runner"
              },
              {
                "type": "CtExecutableReference",
                "value": "runScript(java.io.Reader)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.io.Reader read"
              },
              {
                "type": "CtInvocation",
                "value": "java.sql.Connection.commit()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.sql.Connection conn"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.sql.Connection.commit()"
              },
              {
                "type": "CtInvocation",
                "value": "closeConnection()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.ibatis.jdbc.ScriptRunner runner"
              },
              {
                "type": "CtExecutableReference",
                "value": "closeConnection()"
              },
              {
                "type": "CtInvocation",
                "value": "java.sql.Connection.close()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.sql.Connection conn"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.sql.Connection.close()"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.spring.PostgreSqlLoader.fillInfoToSqlFile(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.Reader"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String userName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String password"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.IOException"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.io.BufferedReader reader"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.BufferedReader"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.io.BufferedReader.BufferedReader(Reader)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.BufferedReader"
              },
              {
                "type": "CtInvocation",
                "value": "getResourceAsReader(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.ibatis.io.Resources"
              },
              {
                "type": "CtExecutableReference",
                "value": "getResourceAsReader(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.getInitScript()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties dataBaseProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties.getInitScript()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.StringBuilder builder"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.StringBuilder"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.lang.StringBuilder.StringBuilder()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.StringBuilder"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String str"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtVariableWrite",
                "value": "java.lang.String str"
              },
              {
                "type": "CtInvocation",
                "value": "java.io.BufferedReader.readLine()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.io.BufferedReader reader"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.io.BufferedReader.readLine()"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.StringBuilder.append(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.StringBuilder.append(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.StringBuilder builder"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.StringBuilder.append(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.replace(CharSequence,CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.replace(CharSequence,CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String str"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.replace(CharSequence,CharSequence)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '_user TEXT := 'userName''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '_user TEXT := ''"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String userName"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '''"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.replace(CharSequence,CharSequence)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '_password TEXT := 'password''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '_password TEXT := ''"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String password"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '''"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.StringBuilder.append(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.System.lineSeparator()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.System"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.System.lineSeparator()"
              },
              {
                "type": "CtInvocation",
                "value": "java.io.BufferedReader.close()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.io.BufferedReader reader"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.io.BufferedReader.close()"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.io.StringReader.StringReader(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.StringReader"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.StringBuilder.toString()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.StringBuilder builder"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.StringBuilder.toString()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/config/DataBaseConfigurationTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/config/DataBaseConfigurationTest.java",
        "name": "org.apache.shenyu.admin.config.DataBaseConfigurationTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "DataBaseProperties dataBaseProperties = dataBaseConfiguration.dataBaseProperties(dialect, initScript, true, \"\");",
                "type": "DELETE",
                "lineNo": 37
              }
            ],
            "targetChanges": [
              {
                "line": "DataBaseProperties dataBaseProperties = dataBaseConfiguration.dataBaseProperties(dialect, initScript, true);",
                "type": "ADD",
                "lineNo": 37
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties dataBaseProperties"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.DataBaseConfiguration.dataBaseProperties(String,String,Boolean,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.config.DataBaseConfiguration dataBaseConfiguration"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.DataBaseConfiguration.dataBaseProperties(String,String,Boolean,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String dialect"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String initScript"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties dataBaseProperties"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.config.properties.DataBaseProperties"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.DataBaseConfiguration.dataBaseProperties(String,String,Boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.config.DataBaseConfiguration dataBaseConfiguration"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.DataBaseConfiguration.dataBaseProperties(String,String,Boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String dialect"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String initScript"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "f3385719a",
    "aCommit": "7667c46dc",
    "changes": [
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/DataSyncConfiguration.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/DataSyncConfiguration.java",
        "name": "org.apache.shenyu.admin.config.DataSyncConfiguration",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return new ConsulClient(consulProperties.getUrl());",
                "type": "DELETE",
                "lineNo": 312
              }
            ],
            "targetChanges": [
              {
                "line": "String url = consulProperties.getUrl();",
                "type": "ADD",
                "lineNo": 315
              },
              {
                "line": "if (StringUtils.isBlank(url)) {",
                "type": "ADD",
                "lineNo": 316
              },
              {
                "line": "throw new ShenyuException(\"sync.consul.url can not be null.\");",
                "type": "ADD",
                "lineNo": 317
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 318
              },
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 319
              },
              {
                "line": "URL consulUrl = new URL(url);",
                "type": "ADD",
                "lineNo": 320
              },
              {
                "line": "return consulUrl.getPort() < 0 ? new ConsulClient(consulUrl.getHost()) : new ConsulClient(consulUrl.getHost(), consulUrl.getPort());",
                "type": "ADD",
                "lineNo": 321
              },
              {
                "line": "} catch (MalformedURLException e) {",
                "type": "ADD",
                "lineNo": 322
              },
              {
                "line": "throw new ShenyuException(\"sync.consul.url formatter is not incorrect.\");",
                "type": "ADD",
                "lineNo": 323
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 324
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructorCall",
                "value": "com.ecwid.consul.v1.ConsulClient(java.lang.String)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.ecwid.consul.v1.ConsulClient"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.properties.ConsulProperties.getUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.config.properties.ConsulProperties consulProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.properties.ConsulProperties.getUrl()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String url"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.properties.ConsulProperties.getUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.config.properties.ConsulProperties consulProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.properties.ConsulProperties.getUrl()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String url"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'sync.consul.url can not be null.'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.net.URL consulUrl"
              },
              {
                "type": "CtTypeReference",
                "value": "java.net.URL"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.net.URL.URL(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.net.URL"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String url"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URL.getPort()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.net.URL consulUrl"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URL.getPort()"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtConstructorCall",
                "value": "com.ecwid.consul.v1.ConsulClient(java.lang.String)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.ecwid.consul.v1.ConsulClient"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URL.getHost()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.net.URL consulUrl"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URL.getHost()"
              },
              {
                "type": "CtConstructorCall",
                "value": "com.ecwid.consul.v1.ConsulClient(java.lang.String,int)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.ecwid.consul.v1.ConsulClient"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URL.getHost()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.net.URL consulUrl"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URL.getHost()"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URL.getPort()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.net.URL consulUrl"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URL.getPort()"
              },
              {
                "type": "CtCatchVariable",
                "value": "java.net.MalformedURLException e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.net.MalformedURLException"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'sync.consul.url formatter is not incorrect.'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/config/DataSyncConfigurationTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/config/DataSyncConfigurationTest.java",
        "name": "org.apache.shenyu.admin.config.DataSyncConfigurationTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(consulProperties.getUrl()).thenReturn(\"127.0.0.1\");",
                "type": "DELETE",
                "lineNo": 216
              }
            ],
            "targetChanges": [
              {
                "line": "when(consulProperties.getUrl()).thenReturn(\"http://127.0.0.1:8500\");",
                "type": "ADD",
                "lineNo": 216
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.properties.ConsulProperties.getUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.config.properties.ConsulProperties consulProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.properties.ConsulProperties.getUrl()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.config.properties.ConsulProperties.getUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.config.properties.ConsulProperties consulProperties"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.config.properties.ConsulProperties.getUrl()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http://127.0.0.1:8500'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-spring-boot-starter/shenyu-spring-boot-starter-sync-data-center/shenyu-spring-boot-starter-sync-data-consul/src/main/java/org/apache/shenyu/springboot/sync/data/consul/ConsulSyncDataConfiguration.java",
        "aPath": "shenyu-spring-boot-starter/shenyu-spring-boot-starter-sync-data-center/shenyu-spring-boot-starter-sync-data-consul/src/main/java/org/apache/shenyu/springboot/sync/data/consul/ConsulSyncDataConfiguration.java",
        "name": "org.apache.shenyu.springboot.sync.data.consul.ConsulSyncDataConfiguration",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return new ConsulClient(consulConfig.getUrl());",
                "type": "DELETE",
                "lineNo": 96
              }
            ],
            "targetChanges": [
              {
                "line": "String url = consulConfig.getUrl();",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": "if (StringUtils.isBlank(url)) {",
                "type": "ADD",
                "lineNo": 101
              },
              {
                "line": "throw new ShenyuException(\"sync.consul.url can not be null.\");",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 103
              },
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 104
              },
              {
                "line": "URL consulUrl = new URL(url);",
                "type": "ADD",
                "lineNo": 105
              },
              {
                "line": "return consulUrl.getPort() < 0 ? new ConsulClient(consulUrl.getHost()) : new ConsulClient(consulUrl.getHost(), consulUrl.getPort());",
                "type": "ADD",
                "lineNo": 106
              },
              {
                "line": "} catch (MalformedURLException e) {",
                "type": "ADD",
                "lineNo": 107
              },
              {
                "line": "throw new ShenyuException(\"sync.consul.url formatter is not incorrect.\");",
                "type": "ADD",
                "lineNo": 108
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 109
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructorCall",
                "value": "com.ecwid.consul.v1.ConsulClient(java.lang.String)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.ecwid.consul.v1.ConsulClient"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.consul.config.ConsulConfig.getUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.sync.data.consul.config.ConsulConfig consulConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.consul.config.ConsulConfig.getUrl()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String url"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.consul.config.ConsulConfig.getUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.sync.data.consul.config.ConsulConfig consulConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.consul.config.ConsulConfig.getUrl()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String url"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'sync.consul.url can not be null.'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.net.URL consulUrl"
              },
              {
                "type": "CtTypeReference",
                "value": "java.net.URL"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.net.URL.URL(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.net.URL"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String url"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URL.getPort()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.net.URL consulUrl"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URL.getPort()"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtConstructorCall",
                "value": "com.ecwid.consul.v1.ConsulClient(java.lang.String)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.ecwid.consul.v1.ConsulClient"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URL.getHost()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.net.URL consulUrl"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URL.getHost()"
              },
              {
                "type": "CtConstructorCall",
                "value": "com.ecwid.consul.v1.ConsulClient(java.lang.String,int)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.ecwid.consul.v1.ConsulClient"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URL.getHost()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.net.URL consulUrl"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URL.getHost()"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URL.getPort()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.net.URL consulUrl"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URL.getPort()"
              },
              {
                "type": "CtCatchVariable",
                "value": "java.net.MalformedURLException e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.net.MalformedURLException"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'sync.consul.url formatter is not incorrect.'"
              }
            ]
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "aa5e6d8b1",
    "aCommit": "fe4bfaf01",
    "changes": [
      {
        "bPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/RateLimiterPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/RateLimiterPlugin.java",
        "name": "org.apache.shenyu.plugin.ratelimiter.RateLimiterPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return chain.execute(exchange);",
                "type": "DELETE",
                "lineNo": 79
              }
            ],
            "targetChanges": [
              {
                "line": "return chain.execute(exchange).doFinally(signalType -> {",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "RateLimiterAlgorithm<?> rateLimiterAlgorithm = RateLimiterAlgorithmFactory.newInstance(limiterHandle.getAlgorithmName());",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "rateLimiterAlgorithm.callback(rateLimiterAlgorithm.getScript(), response.getKeys(), null);",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 84
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "execute()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain chain"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain chain"
              },
              {
                "type": "CtExecutableReference",
                "value": "execute()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "doFinally()"
              },
              {
                "type": "CtInvocation",
                "value": "execute()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain chain"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain chain"
              },
              {
                "type": "CtExecutableReference",
                "value": "execute()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "doFinally()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> signalType"
              },
              {
                "type": "CtLocalVariable",
                "value": "RateLimiterAlgorithm rateLimiterAlgorithm"
              },
              {
                "type": "CtTypeReference",
                "value": "RateLimiterAlgorithm"
              },
              {
                "type": "CtInvocation",
                "value": "newInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.ratelimiter.algorithm.RateLimiterAlgorithmFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "newInstance()"
              },
              {
                "type": "CtInvocation",
                "value": "getAlgorithmName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.RateLimiterHandle limiterHandle"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RateLimiterHandle limiterHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAlgorithmName()"
              },
              {
                "type": "CtInvocation",
                "value": "callback()"
              },
              {
                "type": "CtVariableRead",
                "value": "RateLimiterAlgorithm rateLimiterAlgorithm"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "RateLimiterAlgorithm rateLimiterAlgorithm"
              },
              {
                "type": "CtTypeReference",
                "value": "RateLimiterAlgorithm"
              },
              {
                "type": "CtExecutableReference",
                "value": "callback()"
              },
              {
                "type": "CtInvocation",
                "value": "getScript()"
              },
              {
                "type": "CtVariableRead",
                "value": "RateLimiterAlgorithm rateLimiterAlgorithm"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "RateLimiterAlgorithm rateLimiterAlgorithm"
              },
              {
                "type": "CtTypeReference",
                "value": "RateLimiterAlgorithm"
              },
              {
                "type": "CtExecutableReference",
                "value": "getScript()"
              },
              {
                "type": "CtInvocation",
                "value": "getKeys()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> response"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> response"
              },
              {
                "type": "CtExecutableReference",
                "value": "getKeys()"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/executor/RedisRateLimiter.java",
        "aPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/executor/RedisRateLimiter.java",
        "name": "org.apache.shenyu.plugin.ratelimiter.executor.RedisRateLimiter",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return new RateLimiterResponse(allowed, tokensLeft);",
                "type": "DELETE",
                "lineNo": 68
              }
            ],
            "targetChanges": [
              {
                "line": "return new RateLimiterResponse(allowed, tokensLeft, keys);",
                "type": "ADD",
                "lineNo": 68
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse"
              },
              {
                "type": "CtVariableRead",
                "value": "boolean allowed"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "boolean allowed"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Long tokensLeft"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.Long tokensLeft"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse"
              },
              {
                "type": "CtVariableRead",
                "value": "boolean allowed"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "boolean allowed"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Long tokensLeft"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.Long tokensLeft"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List keys"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.util.List keys"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".doOnError(throwable -> LOG.error(\"Error occurred while judging if user is allowed by RedisRateLimiter:{}\", throwable.getMessage()))",
                "type": "DELETE",
                "lineNo": 70
              },
              {
                "line": ".doFinally(signalType -> rateLimiterAlgorithm.callback(script, keys, scriptArgs));",
                "type": "DELETE",
                "lineNo": 71
              }
            ],
            "targetChanges": [
              {
                "line": ".doOnError(throwable -> {",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "rateLimiterAlgorithm.callback(rateLimiterAlgorithm.getScript(), keys, scriptArgs);",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "LOG.error(\"Error occurred while judging if user is allowed by RedisRateLimiter:{}\", throwable.getMessage());",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "doOnError()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtInvocation",
                "value": "error()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtFieldReference",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtExecutableReference",
                "value": "error()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Error occurred while judging if user is allowed by RedisRateLimiter:{}'"
              },
              {
                "type": "CtInvocation",
                "value": "getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMessage()"
              },
              {
                "type": "CtExecutableReference",
                "value": "doFinally()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> signalType"
              },
              {
                "type": "CtInvocation",
                "value": "callback()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.ratelimiter.algorithm.RateLimiterAlgorithm rateLimiterAlgorithm"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.plugin.ratelimiter.algorithm.RateLimiterAlgorithm rateLimiterAlgorithm"
              },
              {
                "type": "CtExecutableReference",
                "value": "callback()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.data.redis.core.script.RedisScript script"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.springframework.data.redis.core.script.RedisScript script"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List keys"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.util.List keys"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List scriptArgs"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.util.List scriptArgs"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "doOnError()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtInvocation",
                "value": "callback()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.ratelimiter.algorithm.RateLimiterAlgorithm rateLimiterAlgorithm"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.plugin.ratelimiter.algorithm.RateLimiterAlgorithm rateLimiterAlgorithm"
              },
              {
                "type": "CtExecutableReference",
                "value": "callback()"
              },
              {
                "type": "CtInvocation",
                "value": "getScript()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.ratelimiter.algorithm.RateLimiterAlgorithm rateLimiterAlgorithm"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.plugin.ratelimiter.algorithm.RateLimiterAlgorithm rateLimiterAlgorithm"
              },
              {
                "type": "CtExecutableReference",
                "value": "getScript()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List keys"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.util.List keys"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List scriptArgs"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.util.List scriptArgs"
              },
              {
                "type": "CtInvocation",
                "value": "error()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtFieldReference",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtExecutableReference",
                "value": "error()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Error occurred while judging if user is allowed by RedisRateLimiter:{}'"
              },
              {
                "type": "CtInvocation",
                "value": "getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMessage()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/response/RateLimiterResponse.java",
        "aPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/response/RateLimiterResponse.java",
        "name": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "private final List<String> keys;",
                "type": "ADD",
                "lineNo": 34
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.util.List keys"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "* @param keys the redis keys",
                "type": "ADD",
                "lineNo": 41
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public RateLimiterResponse(final boolean allowed, final long tokensRemaining) {",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "public RateLimiterResponse(final boolean allowed, final long tokensRemaining, final List<String> keys) {",
                "type": "ADD",
                "lineNo": 43
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse.RateLimiterResponse(boolean,long)"
              },
              {
                "type": "CtParameter",
                "value": "boolean allowed"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtParameter",
                "value": "long tokensRemaining"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse.RateLimiterResponse(boolean,long,List)"
              },
              {
                "type": "CtParameter",
                "value": "boolean allowed"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtParameter",
                "value": "long tokensRemaining"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List keys"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "this.keys = keys;",
                "type": "ADD",
                "lineNo": 46
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtFieldWrite",
                "value": "java.util.List keys"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List keys"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 68
              },
              {
                "line": "* get redis keys.",
                "type": "ADD",
                "lineNo": 69
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "* @return getKeys",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "public List<String> getKeys() {",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "return keys;",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 75
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse.getKeys()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.List keys"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/test/java/org/apache/shenyu/plugin/ratelimiter/RateLimiterPluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/test/java/org/apache/shenyu/plugin/ratelimiter/RateLimiterPluginTest.java",
        "name": "org.apache.shenyu.plugin.ratelimiter.RateLimiterPluginTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "Mono.just(new RateLimiterResponse(true, 1)));",
                "type": "DELETE",
                "lineNo": 88
              }
            ],
            "targetChanges": [
              {
                "line": "Mono.just(new RateLimiterResponse(true, 1, null)));",
                "type": "ADD",
                "lineNo": 88
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "just(org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "just(org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse.RateLimiterResponse(boolean,long)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "just(org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "just(org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse.RateLimiterResponse(boolean,long,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Mono.just(new RateLimiterResponse(false, 1)));",
                "type": "DELETE",
                "lineNo": 100
              }
            ],
            "targetChanges": [
              {
                "line": "Mono.just(new RateLimiterResponse(false, 1, null)));",
                "type": "ADD",
                "lineNo": 100
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "just(org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "just(org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse.RateLimiterResponse(boolean,long)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'false'"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "just(org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse)"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "just(org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse.RateLimiterResponse(boolean,long,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.ratelimiter.response.RateLimiterResponse"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'false'"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "5ab507eac",
    "aCommit": "12527b4f2",
    "changes": [
      {
        "bPath": "soul-common/src/main/java/org/dromara/soul/common/constant/Constants.java",
        "aPath": "soul-common/src/main/java/org/dromara/soul/common/constant/Constants.java",
        "name": "org.dromara.soul.common.constant.Constants",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* The constant DUBBO_PARAMS.",
                "type": "DELETE",
                "lineNo": 148
              }
            ],
            "targetChanges": [
              {
                "line": "* The constant PARAM_TRANSFORM.",
                "type": "ADD",
                "lineNo": 148
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "String DUBBO_PARAMS = \"dubbo_params\";",
                "type": "DELETE",
                "lineNo": 150
              }
            ],
            "targetChanges": [
              {
                "line": "String PARAM_TRANSFORM = \"param_transform\";",
                "type": "ADD",
                "lineNo": 150
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "java.lang.String DUBBO_PARAMS"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'dubbo_params'"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String PARAM_TRANSFORM"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'param_transform'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "* The constant SOFA_PARAMS.",
                "type": "DELETE",
                "lineNo": 153
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 154
              },
              {
                "line": "String SOFA_PARAMS = \"sofa_params\";",
                "type": "DELETE",
                "lineNo": 155
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 157
              },
              {
                "line": "* The constant TARS_PARAMS.",
                "type": "DELETE",
                "lineNo": 158
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 159
              },
              {
                "line": "String TARS_PARAMS = \"tars_params\";",
                "type": "DELETE",
                "lineNo": 160
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 162
              },
              {
                "line": "* The constant GRPC_PARAMS.",
                "type": "DELETE",
                "lineNo": 163
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 164
              },
              {
                "line": "String GRPC_PARAMS = \"grpc_params\";",
                "type": "DELETE",
                "lineNo": 165
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 167
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "java.lang.String SOFA_PARAMS"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'sofa_params'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String TARS_PARAMS"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'tars_params'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String GRPC_PARAMS"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'grpc_params'"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-common/src/main/java/org/dromara/soul/common/enums/PluginEnum.java",
        "aPath": "soul-common/src/main/java/org/dromara/soul/common/enums/PluginEnum.java",
        "name": "org.dromara.soul.common.enums.PluginEnum",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "* Param transform plugin enum.",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 101
              },
              {
                "line": "PARAM_TRANSFORM(58, 0, \"paramTransform\"),",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 104
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtEnumValue",
                "value": "org.dromara.soul.common.enums.PluginEnum PARAM_TRANSFORM"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.common.enums.PluginEnum.PluginEnum()"
              },
              {
                "type": "CtLiteral",
                "value": "int '58'"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'paramTransform'"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-plugin/soul-plugin-alibaba-dubbo/src/main/java/org/dromara/soul/plugin/alibaba/dubbo/AlibabaDubboPlugin.java",
        "aPath": "soul-plugin/soul-plugin-alibaba-dubbo/src/main/java/org/dromara/soul/plugin/alibaba/dubbo/AlibabaDubboPlugin.java",
        "name": "org.dromara.soul.plugin.alibaba.dubbo.AlibabaDubboPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "String body = exchange.getAttribute(Constants.DUBBO_PARAMS);",
                "type": "DELETE",
                "lineNo": 64
              }
            ],
            "targetChanges": [
              {
                "line": "String param = exchange.getAttribute(Constants.PARAM_TRANSFORM);",
                "type": "ADD",
                "lineNo": 64
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String body"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String DUBBO_PARAMS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String DUBBO_PARAMS"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String param"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PARAM_TRANSFORM"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String PARAM_TRANSFORM"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (StringUtils.isNoneBlank(metaData.getParameterTypes()) && StringUtils.isBlank(body)) {",
                "type": "DELETE",
                "lineNo": 75
              }
            ],
            "targetChanges": [
              {
                "line": "if (StringUtils.isNoneBlank(metaData.getParameterTypes()) && StringUtils.isBlank(param)) {",
                "type": "ADD",
                "lineNo": 75
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtInvocation",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String body"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtInvocation",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String param"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Object result = alibabaDubboProxyService.genericInvoker(body, metaData);",
                "type": "DELETE",
                "lineNo": 80
              }
            ],
            "targetChanges": [
              {
                "line": "Object result = alibabaDubboProxyService.genericInvoker(param, metaData);",
                "type": "ADD",
                "lineNo": 80
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Object result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.alibaba.dubbo.proxy.AlibabaDubboProxyService.genericInvoker(String,MetaData)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.plugin.alibaba.dubbo.proxy.AlibabaDubboProxyService alibabaDubboProxyService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.alibaba.dubbo.proxy.AlibabaDubboProxyService.genericInvoker(String,MetaData)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String body"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Object result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.alibaba.dubbo.proxy.AlibabaDubboProxyService.genericInvoker(String,MetaData)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.plugin.alibaba.dubbo.proxy.AlibabaDubboProxyService alibabaDubboProxyService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.alibaba.dubbo.proxy.AlibabaDubboProxyService.genericInvoker(String,MetaData)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String param"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-plugin/soul-plugin-apache-dubbo/src/main/java/org/dromara/soul/plugin/apache/dubbo/ApacheDubboPlugin.java",
        "aPath": "soul-plugin/soul-plugin-apache-dubbo/src/main/java/org/dromara/soul/plugin/apache/dubbo/ApacheDubboPlugin.java",
        "name": "org.dromara.soul.plugin.apache.dubbo.ApacheDubboPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "String body = exchange.getAttribute(Constants.DUBBO_PARAMS);",
                "type": "DELETE",
                "lineNo": 63
              }
            ],
            "targetChanges": [
              {
                "line": "String param = exchange.getAttribute(Constants.PARAM_TRANSFORM);",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String body"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String DUBBO_PARAMS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String DUBBO_PARAMS"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String param"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PARAM_TRANSFORM"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String PARAM_TRANSFORM"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (StringUtils.isNoneBlank(metaData.getParameterTypes()) && StringUtils.isBlank(body)) {",
                "type": "DELETE",
                "lineNo": 74
              }
            ],
            "targetChanges": [
              {
                "line": "if (StringUtils.isNoneBlank(metaData.getParameterTypes()) && StringUtils.isBlank(param)) {",
                "type": "ADD",
                "lineNo": 74
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtInvocation",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String body"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtInvocation",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String param"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "final Mono<Object> result = dubboProxyService.genericInvoker(body, metaData, exchange);",
                "type": "DELETE",
                "lineNo": 79
              }
            ],
            "targetChanges": [
              {
                "line": "final Mono<Object> result = dubboProxyService.genericInvoker(param, metaData, exchange);",
                "type": "ADD",
                "lineNo": 79
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "reactor.core.publisher.Mono result"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.apache.dubbo.proxy.ApacheDubboProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.plugin.apache.dubbo.proxy.ApacheDubboProxyService dubboProxyService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.apache.dubbo.proxy.ApacheDubboProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String body"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "reactor.core.publisher.Mono result"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.apache.dubbo.proxy.ApacheDubboProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.plugin.apache.dubbo.proxy.ApacheDubboProxyService dubboProxyService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.apache.dubbo.proxy.ApacheDubboProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String param"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-plugin/soul-plugin-apache-dubbo/src/test/java/org/dromara/soul/plugin/apache/dubbo/ApacheDubboPluginTest.java",
        "aPath": "soul-plugin/soul-plugin-apache-dubbo/src/test/java/org/dromara/soul/plugin/apache/dubbo/ApacheDubboPluginTest.java",
        "name": "org.dromara.soul.plugin.apache.dubbo.ApacheDubboPluginTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.DUBBO_PARAMS, \"{key:value}\");",
                "type": "DELETE",
                "lineNo": 80
              }
            ],
            "targetChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.PARAM_TRANSFORM, \"{key:value}\");",
                "type": "ADD",
                "lineNo": 80
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String DUBBO_PARAMS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String DUBBO_PARAMS"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{key:value}'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PARAM_TRANSFORM"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String PARAM_TRANSFORM"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{key:value}'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.DUBBO_PARAMS, \"{key:value}\");",
                "type": "DELETE",
                "lineNo": 103
              }
            ],
            "targetChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.PARAM_TRANSFORM, \"{key:value}\");",
                "type": "ADD",
                "lineNo": 103
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String DUBBO_PARAMS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String DUBBO_PARAMS"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{key:value}'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PARAM_TRANSFORM"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String PARAM_TRANSFORM"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{key:value}'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "soul-plugin/soul-plugin-grpc/src/main/java/org/dromara/soul/plugin/grpc/GrpcPlugin.java",
        "aPath": "soul-plugin/soul-plugin-grpc/src/main/java/org/dromara/soul/plugin/grpc/GrpcPlugin.java",
        "name": "org.dromara.soul.plugin.grpc.GrpcPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "String body = exchange.getAttribute(Constants.GRPC_PARAMS);",
                "type": "DELETE",
                "lineNo": 57
              }
            ],
            "targetChanges": [
              {
                "line": "String param = exchange.getAttribute(Constants.PARAM_TRANSFORM);",
                "type": "ADD",
                "lineNo": 57
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String body"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String GRPC_PARAMS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String GRPC_PARAMS"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String param"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PARAM_TRANSFORM"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String PARAM_TRANSFORM"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (StringUtils.isNoneBlank(metaData.getParameterTypes()) && StringUtils.isBlank(body)) {",
                "type": "DELETE",
                "lineNo": 68
              }
            ],
            "targetChanges": [
              {
                "line": "if (StringUtils.isNoneBlank(metaData.getParameterTypes()) && StringUtils.isBlank(param)) {",
                "type": "ADD",
                "lineNo": 68
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtInvocation",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String body"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtInvocation",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String param"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "CompletableFuture<SoulGrpcResponse> result = client.call(metaData, CallOptions.DEFAULT, body);",
                "type": "DELETE",
                "lineNo": 80
              }
            ],
            "targetChanges": [
              {
                "line": "CompletableFuture<SoulGrpcResponse> result = client.call(metaData, CallOptions.DEFAULT, param);",
                "type": "ADD",
                "lineNo": 80
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.concurrent.CompletableFuture result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.grpc.proto.SoulGrpcResponse"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.grpc.client.SoulGrpcClient.call(MetaData,CallOptions,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.plugin.grpc.client.SoulGrpcClient client"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.grpc.client.SoulGrpcClient.call(MetaData,CallOptions,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtTypeAccess",
                "value": "CallOptions.DEFAULT"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String body"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.concurrent.CompletableFuture result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.grpc.proto.SoulGrpcResponse"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.grpc.client.SoulGrpcClient.call(MetaData,CallOptions,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.plugin.grpc.client.SoulGrpcClient client"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.grpc.client.SoulGrpcClient.call(MetaData,CallOptions,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtTypeAccess",
                "value": "CallOptions.DEFAULT"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String param"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-plugin/soul-plugin-grpc/src/main/java/org/dromara/soul/plugin/grpc/cache/ApplicationConfigCache.java",
        "aPath": "soul-plugin/soul-plugin-grpc/src/main/java/org/dromara/soul/plugin/grpc/cache/ApplicationConfigCache.java",
        "name": "org.dromara.soul.plugin.grpc.cache.ApplicationConfigCache",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (Objects.nonNull(divideUpstream.getWeight())) {",
                "type": "DELETE",
                "lineNo": 142
              },
              {
                "line": "instance.setWeight(divideUpstream.getWeight());",
                "type": "DELETE",
                "lineNo": 143
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 144
              }
            ],
            "targetChanges": [
              {
                "line": "instance.setWeight(divideUpstream.getWeight());",
                "type": "ADD",
                "lineNo": 142
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "getWeight()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.convert.DivideUpstream divideUpstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "getWeight()"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.grpc.resolver.SoulServiceInstance.setWeight(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.plugin.grpc.resolver.SoulServiceInstance instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.grpc.resolver.SoulServiceInstance.setWeight(int)"
              },
              {
                "type": "CtInvocation",
                "value": "getWeight()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.convert.DivideUpstream divideUpstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "getWeight()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.grpc.resolver.SoulServiceInstance.setWeight(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.plugin.grpc.resolver.SoulServiceInstance instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.grpc.resolver.SoulServiceInstance.setWeight(int)"
              },
              {
                "type": "CtInvocation",
                "value": "getWeight()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.convert.DivideUpstream divideUpstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "getWeight()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-plugin/soul-plugin-sofa/src/main/java/org/dromara/soul/plugin/sofa/SofaPlugin.java",
        "aPath": "soul-plugin/soul-plugin-sofa/src/main/java/org/dromara/soul/plugin/sofa/SofaPlugin.java",
        "name": "org.dromara.soul.plugin.sofa.SofaPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "String body = exchange.getAttribute(Constants.SOFA_PARAMS);",
                "type": "DELETE",
                "lineNo": 62
              }
            ],
            "targetChanges": [
              {
                "line": "String param = exchange.getAttribute(Constants.PARAM_TRANSFORM);",
                "type": "ADD",
                "lineNo": 62
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String body"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String SOFA_PARAMS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String SOFA_PARAMS"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String param"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PARAM_TRANSFORM"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String PARAM_TRANSFORM"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (StringUtils.isNoneBlank(metaData.getParameterTypes()) && StringUtils.isBlank(body)) {",
                "type": "DELETE",
                "lineNo": 73
              }
            ],
            "targetChanges": [
              {
                "line": "if (StringUtils.isNoneBlank(metaData.getParameterTypes()) && StringUtils.isBlank(param)) {",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtInvocation",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String body"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtInvocation",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "getParameterTypes()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String param"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "final Mono<Object> result = sofaProxyService.genericInvoker(body, metaData, exchange);",
                "type": "DELETE",
                "lineNo": 78
              }
            ],
            "targetChanges": [
              {
                "line": "final Mono<Object> result = sofaProxyService.genericInvoker(param, metaData, exchange);",
                "type": "ADD",
                "lineNo": 78
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "reactor.core.publisher.Mono result"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.sofa.proxy.SofaProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.plugin.sofa.proxy.SofaProxyService sofaProxyService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.sofa.proxy.SofaProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String body"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "reactor.core.publisher.Mono result"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.sofa.proxy.SofaProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.plugin.sofa.proxy.SofaProxyService sofaProxyService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.sofa.proxy.SofaProxyService.genericInvoker(String,MetaData,ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String param"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.common.dto.MetaData metaData"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-plugin/soul-plugin-sofa/src/main/java/org/dromara/soul/plugin/sofa/param/SofaBodyParamPlugin.java",
        "aPath": "soul-plugin/soul-plugin-base/src/main/java/org/dromara/soul/plugin/base/ParamTransformPlugin.java",
        "name": "org.dromara.soul.plugin.sofa.param.SofaBodyParamPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* The type Body param plugin.",
                "type": "DELETE",
                "lineNo": 40
              }
            ],
            "targetChanges": [
              {
                "line": "* The param transform plugin.",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* @author tydhot",
                "type": "DELETE",
                "lineNo": 42
              }
            ],
            "targetChanges": [
              {
                "line": "* @author xiaoyu",
                "type": "ADD",
                "lineNo": 42
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public class SofaBodyParamPlugin implements SoulPlugin {",
                "type": "DELETE",
                "lineNo": 44
              }
            ],
            "targetChanges": [
              {
                "line": "public class ParamTransformPlugin implements SoulPlugin {",
                "type": "ADD",
                "lineNo": 44
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.dromara.soul.plugin.sofa.param.SofaBodyParamPlugin"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.api.SoulPlugin"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.dromara.soul.plugin.base.ParamTransformPlugin"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.api.SoulPlugin"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "* Instantiates a new Body param plugin.",
                "type": "DELETE",
                "lineNo": 49
              }
            ],
            "targetChanges": [
              {
                "line": "* Instantiates a new param transform plugin.",
                "type": "ADD",
                "lineNo": 49
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public SofaBodyParamPlugin() {",
                "type": "DELETE",
                "lineNo": 51
              }
            ],
            "targetChanges": [
              {
                "line": "public ParamTransformPlugin() {",
                "type": "ADD",
                "lineNo": 51
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructor",
                "value": "org.dromara.soul.plugin.sofa.param.SofaBodyParamPlugin.SofaBodyParamPlugin()"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.dromara.soul.plugin.base.ParamTransformPlugin.ParamTransformPlugin()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (Objects.nonNull(soulContext) && RpcTypeEnum.SOFA.getName().equals(soulContext.getRpcType())) {",
                "type": "DELETE",
                "lineNo": 59
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.nonNull(soulContext)) {",
                "type": "ADD",
                "lineNo": 59
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.plugin.api.context.SoulContext soulContext"
              },
              {
                "type": "CtInvocation",
                "value": "equals()"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum SOFA"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum SOFA"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "equals()"
              },
              {
                "type": "CtInvocation",
                "value": "getRpcType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.plugin.api.context.SoulContext soulContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRpcType()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.plugin.api.context.SoulContext soulContext"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return PluginEnum.SOFA.getCode() - 1;",
                "type": "DELETE",
                "lineNo": 75
              }
            ],
            "targetChanges": [
              {
                "line": "return PluginEnum.PARAM_TRANSFORM.getCode();",
                "type": "ADD",
                "lineNo": 75
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "getCode()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.enums.PluginEnum SOFA"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.common.enums.PluginEnum SOFA"
              },
              {
                "type": "CtExecutableReference",
                "value": "getCode()"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "getCode()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.enums.PluginEnum PARAM_TRANSFORM"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.common.enums.PluginEnum PARAM_TRANSFORM"
              },
              {
                "type": "CtExecutableReference",
                "value": "getCode()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return \"sofa-body-param\";",
                "type": "DELETE",
                "lineNo": 80
              }
            ],
            "targetChanges": [
              {
                "line": "return PluginEnum.PARAM_TRANSFORM.getName();",
                "type": "ADD",
                "lineNo": 80
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'sofa-body-param'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.enums.PluginEnum PARAM_TRANSFORM"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.common.enums.PluginEnum PARAM_TRANSFORM"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.SOFA_PARAMS, body);",
                "type": "DELETE",
                "lineNo": 87
              }
            ],
            "targetChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.PARAM_TRANSFORM, body);",
                "type": "ADD",
                "lineNo": 87
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "put()"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.SOFA_PARAMS"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> body"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> body"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "put()"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.PARAM_TRANSFORM"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> body"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> body"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.SOFA_PARAMS, HttpParamConverter.toMap(() -> map));",
                "type": "DELETE",
                "lineNo": 96
              }
            ],
            "targetChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.PARAM_TRANSFORM, HttpParamConverter.toMap(() -> map));",
                "type": "ADD",
                "lineNo": 96
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "put()"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.SOFA_PARAMS"
              },
              {
                "type": "CtInvocation",
                "value": "toMap()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.HttpParamConverter"
              },
              {
                "type": "CtExecutableReference",
                "value": "toMap()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> map"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> map"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "put()"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.PARAM_TRANSFORM"
              },
              {
                "type": "CtInvocation",
                "value": "toMap()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.utils.HttpParamConverter"
              },
              {
                "type": "CtExecutableReference",
                "value": "toMap()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> map"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> map"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.SOFA_PARAMS,",
                "type": "DELETE",
                "lineNo": 102
              }
            ],
            "targetChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.PARAM_TRANSFORM,",
                "type": "ADD",
                "lineNo": 102
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String SOFA_PARAMS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String SOFA_PARAMS"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PARAM_TRANSFORM"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String PARAM_TRANSFORM"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 107
              },
              {
                "line": "public Boolean skip(final ServerWebExchange exchange) {",
                "type": "ADD",
                "lineNo": 108
              },
              {
                "line": "SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT);",
                "type": "ADD",
                "lineNo": 109
              },
              {
                "line": "assert soulContext != null;",
                "type": "ADD",
                "lineNo": 110
              },
              {
                "line": "String rpcType = soulContext.getRpcType();",
                "type": "ADD",
                "lineNo": 111
              },
              {
                "line": "return !Objects.equals(rpcType, RpcTypeEnum.DUBBO.getName())",
                "type": "ADD",
                "lineNo": 112
              },
              {
                "line": "&& !Objects.equals(rpcType, RpcTypeEnum.GRPC.getName())",
                "type": "ADD",
                "lineNo": 113
              },
              {
                "line": "&& !Objects.equals(rpcType, RpcTypeEnum.TARS.getName())",
                "type": "ADD",
                "lineNo": 114
              },
              {
                "line": "&& !Objects.equals(rpcType, RpcTypeEnum.SOFA.getName());",
                "type": "ADD",
                "lineNo": 115
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 116
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.plugin.base.ParamTransformPlugin.skip(ServerWebExchange)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.web.server.ServerWebExchange"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.dromara.soul.plugin.api.context.SoulContext soulContext"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.api.context.SoulContext"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String CONTEXT"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String CONTEXT"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.plugin.api.context.SoulContext soulContext"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getRpcType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.dromara.soul.plugin.api.context.SoulContext soulContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRpcType()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum DUBBO"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum DUBBO"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum GRPC"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum GRPC"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum TARS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum TARS"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum SOFA"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.common.enums.RpcTypeEnum SOFA"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-plugin/soul-plugin-tars/src/main/java/org/dromara/soul/plugin/tars/TarsPlugin.java",
        "aPath": "soul-plugin/soul-plugin-tars/src/main/java/org/dromara/soul/plugin/tars/TarsPlugin.java",
        "name": "org.dromara.soul.plugin.tars.TarsPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@SuppressWarnings(\"unchecked\")",
                "type": "DELETE",
                "lineNo": 59
              }
            ],
            "targetChanges": [
              {
                "line": "@SuppressWarnings({\"unchecked\", \"rawtypes\"})",
                "type": "ADD",
                "lineNo": 59
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "java.lang.SuppressWarnings"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'unchecked'"
              }
            ],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "java.lang.SuppressWarnings"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'unchecked'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'rawtypes'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "String body = exchange.getAttribute(Constants.TARS_PARAMS);",
                "type": "DELETE",
                "lineNo": 61
              }
            ],
            "targetChanges": [
              {
                "line": "String body = exchange.getAttribute(Constants.PARAM_TRANSFORM);",
                "type": "ADD",
                "lineNo": 61
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String body"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String TARS_PARAMS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String TARS_PARAMS"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String body"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PARAM_TRANSFORM"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String PARAM_TRANSFORM"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-alibaba-dubbo/src/test/java/org/dromara/soul/spring/boot/starter/plugin/alibaba/dubbo/AlibabaDubboPluginConfigurationTest.java",
        "aPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-alibaba-dubbo/src/test/java/org/dromara/soul/spring/boot/starter/plugin/alibaba/dubbo/AlibabaDubboPluginConfigurationTest.java",
        "name": "org.dromara.soul.spring.boot.starter.plugin.alibaba.dubbo.AlibabaDubboPluginConfigurationTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private DubboParamPlugin dubboParamPlugin;",
                "type": "DELETE",
                "lineNo": 57
              },
              {
                "line": "@Autowired(required = false)",
                "type": "DELETE",
                "lineNo": 59
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin dubboParamPlugin"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.beans.factory.annotation.Autowired"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'false'"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "assertThat(dubboParamPlugin.getOrder(), is(PluginEnum.DUBBO.getCode() - 1));",
                "type": "DELETE",
                "lineNo": 72
              },
              {
                "line": "assertThat(dubboParamPlugin.named(), is(\"dubbo-body-param\"));",
                "type": "DELETE",
                "lineNo": 73
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertThat(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin.getOrder()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin dubboParamPlugin"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin.getOrder()"
              },
              {
                "type": "CtInvocation",
                "value": "is(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "getCode()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtExecutableReference",
                "value": "getCode()"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin.named()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin dubboParamPlugin"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin.named()"
              },
              {
                "type": "CtInvocation",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'dubbo-body-param'"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-apache-dubbo/src/test/java/org/dromara/soul/spring/boot/starter/plugin/apache/dubbo/ApacheDubboPluginConfigurationTest.java",
        "aPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-apache-dubbo/src/test/java/org/dromara/soul/spring/boot/starter/plugin/apache/dubbo/ApacheDubboPluginConfigurationTest.java",
        "name": "org.dromara.soul.spring.boot.starter.plugin.apache.dubbo.ApacheDubboPluginConfigurationTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private DubboParamPlugin dubboParamPlugin;",
                "type": "DELETE",
                "lineNo": 57
              },
              {
                "line": "@Autowired(required = false)",
                "type": "DELETE",
                "lineNo": 59
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin dubboParamPlugin"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.beans.factory.annotation.Autowired"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'false'"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public void testBodyParamPluginConfiguration() {",
                "type": "DELETE",
                "lineNo": 76
              },
              {
                "line": "assertNotNull(dubboParamPlugin);",
                "type": "DELETE",
                "lineNo": 77
              },
              {
                "line": "assertThat(dubboParamPlugin.named(), is(\"dubbo-body-param\"));",
                "type": "DELETE",
                "lineNo": 78
              },
              {
                "line": "assertThat(dubboParamPlugin.getOrder(), is(PluginEnum.DUBBO.getCode() - 1));",
                "type": "DELETE",
                "lineNo": 79
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 80
              },
              {
                "line": "@Test",
                "type": "DELETE",
                "lineNo": 82
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.spring.boot.starter.plugin.apache.dubbo.ApacheDubboPluginConfigurationTest.testBodyParamPluginConfiguration()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin dubboParamPlugin"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(java.lang.String,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin.named()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin dubboParamPlugin"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin.named()"
              },
              {
                "type": "CtInvocation",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'dubbo-body-param'"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat(int,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat(int,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin.getOrder()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin dubboParamPlugin"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin.getOrder()"
              },
              {
                "type": "CtInvocation",
                "value": "is(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "is(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "getCode()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.dromara.soul.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.dromara.soul.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtExecutableReference",
                "value": "getCode()"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtAnnotation",
                "value": "org.junit.Test"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-dubbo-common/src/main/java/org/dromara/soul/spring/boot/plugin/dubbo/common/DubboCommonConfiguration.java",
        "aPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-dubbo-common/src/main/java/org/dromara/soul/spring/boot/plugin/dubbo/common/DubboCommonConfiguration.java",
        "name": "org.dromara.soul.spring.boot.plugin.dubbo.common.DubboCommonConfiguration",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* Dubbo param plugin soul plugin.",
                "type": "DELETE",
                "lineNo": 51
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 52
              },
              {
                "line": "* @return the soul plugin",
                "type": "DELETE",
                "lineNo": 53
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 54
              },
              {
                "line": "@Bean",
                "type": "DELETE",
                "lineNo": 55
              },
              {
                "line": "public SoulPlugin dubboParamPlugin() {",
                "type": "DELETE",
                "lineNo": 56
              },
              {
                "line": "return new DubboParamPlugin();",
                "type": "DELETE",
                "lineNo": 57
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 58
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 60
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.spring.boot.plugin.dubbo.common.DubboCommonConfiguration.dubboParamPlugin()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.api.SoulPlugin"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin.DubboParamPlugin()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.dubbo.common.param.DubboParamPlugin"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-grpc/src/main/java/org/dromara/soul/spring/boot/starter/plugin/grpc/GrpcPluginConfiguration.java",
        "aPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-grpc/src/main/java/org/dromara/soul/spring/boot/starter/plugin/grpc/GrpcPluginConfiguration.java",
        "name": "org.dromara.soul.spring.boot.starter.plugin.grpc.GrpcPluginConfiguration",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* Body param plugin soul plugin.",
                "type": "DELETE",
                "lineNo": 51
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 52
              },
              {
                "line": "* @return the soul plugin",
                "type": "DELETE",
                "lineNo": 53
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 54
              },
              {
                "line": "@Bean",
                "type": "DELETE",
                "lineNo": 55
              },
              {
                "line": "public SoulPlugin grpcBodyParamPlugin() {",
                "type": "DELETE",
                "lineNo": 56
              },
              {
                "line": "return new GrpcBodyParamPlugin();",
                "type": "DELETE",
                "lineNo": 57
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 58
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 60
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.spring.boot.starter.plugin.grpc.GrpcPluginConfiguration.grpcBodyParamPlugin()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.api.SoulPlugin"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.plugin.grpc.param.GrpcBodyParamPlugin.GrpcBodyParamPlugin()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.grpc.param.GrpcBodyParamPlugin"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-sofa/src/main/java/org/dromara/soul/spring/boot/starter/plugin/sofa/SofaPluginConfiguration.java",
        "aPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-sofa/src/main/java/org/dromara/soul/spring/boot/starter/plugin/sofa/SofaPluginConfiguration.java",
        "name": "org.dromara.soul.spring.boot.starter.plugin.sofa.SofaPluginConfiguration",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* Body param plugin soul plugin.",
                "type": "DELETE",
                "lineNo": 62
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 63
              },
              {
                "line": "* @return the soul plugin",
                "type": "DELETE",
                "lineNo": 64
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 65
              },
              {
                "line": "@Bean",
                "type": "DELETE",
                "lineNo": 66
              },
              {
                "line": "public SoulPlugin sofaBodyParamPlugin() {",
                "type": "DELETE",
                "lineNo": 67
              },
              {
                "line": "return new SofaBodyParamPlugin();",
                "type": "DELETE",
                "lineNo": 68
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 69
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 71
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.spring.boot.starter.plugin.sofa.SofaPluginConfiguration.sofaBodyParamPlugin()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.api.SoulPlugin"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.plugin.sofa.param.SofaBodyParamPlugin.SofaBodyParamPlugin()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.sofa.param.SofaBodyParamPlugin"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-sofa/src/test/java/org/dromara/soul/spring/boot/starter/plugin/sofa/SofaPluginConfigurationTest.java",
        "aPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-sofa/src/test/java/org/dromara/soul/spring/boot/starter/plugin/sofa/SofaPluginConfigurationTest.java",
        "name": "org.dromara.soul.spring.boot.starter.plugin.sofa.SofaPluginConfigurationTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertThat(context).hasSingleBean(SofaBodyParamPlugin.class);",
                "type": "DELETE",
                "lineNo": 49
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "hasSingleBean()"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat()"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> context"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> context"
              },
              {
                "type": "CtExecutableReference",
                "value": "hasSingleBean()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-tars/src/main/java/org/dromara/soul/spring/boot/starter/plugin/tars/TarsPluginConfiguration.java",
        "aPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-tars/src/main/java/org/dromara/soul/spring/boot/starter/plugin/tars/TarsPluginConfiguration.java",
        "name": "org.dromara.soul.spring.boot.starter.plugin.tars.TarsPluginConfiguration",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* Body param plugin soul plugin.",
                "type": "DELETE",
                "lineNo": 55
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 56
              },
              {
                "line": "* @return the soul plugin",
                "type": "DELETE",
                "lineNo": 57
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 58
              },
              {
                "line": "@Bean",
                "type": "DELETE",
                "lineNo": 59
              },
              {
                "line": "public SoulPlugin tarsBodyParamPlugin() {",
                "type": "DELETE",
                "lineNo": 60
              },
              {
                "line": "return new BodyParamPlugin();",
                "type": "DELETE",
                "lineNo": 61
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 62
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 64
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.spring.boot.starter.plugin.tars.TarsPluginConfiguration.tarsBodyParamPlugin()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.api.SoulPlugin"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.plugin.tars.param.BodyParamPlugin.BodyParamPlugin()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.tars.param.BodyParamPlugin"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-tars/src/test/java/org/dromara/soul/spring/boot/starter/plugin/tars/TarsPluginConfigurationTest.java",
        "aPath": "soul-spring-boot-starter/soul-spring-boot-starter-plugin/soul-spring-boot-starter-plugin-tars/src/test/java/org/dromara/soul/spring/boot/starter/plugin/tars/TarsPluginConfigurationTest.java",
        "name": "org.dromara.soul.spring.boot.starter.plugin.tars.TarsPluginConfigurationTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertThat(context).hasSingleBean(BodyParamPlugin.class);",
                "type": "DELETE",
                "lineNo": 51
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "hasSingleBean()"
              },
              {
                "type": "CtInvocation",
                "value": "assertThat()"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertThat()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> context"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> context"
              },
              {
                "type": "CtExecutableReference",
                "value": "hasSingleBean()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "soul-web/src/main/java/org/dromara/soul/web/configuration/SoulConfiguration.java",
        "aPath": "soul-web/src/main/java/org/dromara/soul/web/configuration/SoulConfiguration.java",
        "name": "org.dromara.soul.web.configuration.SoulConfiguration",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "* Param transform plugin soul plugin.",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "* @return the soul plugin",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "@Bean",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "public SoulPlugin paramTransformPlugin() {",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "return new ParamTransformPlugin();",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 97
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 99
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.dromara.soul.web.configuration.SoulConfiguration.paramTransformPlugin()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.api.SoulPlugin"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.dromara.soul.plugin.base.ParamTransformPlugin.ParamTransformPlugin()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.dromara.soul.plugin.base.ParamTransformPlugin"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "soul-web/src/test/java/org/dromara/soul/web/handler/SoulWebHandlerTest.java",
        "aPath": "soul-web/src/test/java/org/dromara/soul/web/handler/SoulWebHandlerTest.java",
        "name": "org.dromara.soul.web.handler.SoulWebHandlerTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.DUBBO_PARAMS, \"{key:value}\");",
                "type": "DELETE",
                "lineNo": 63
              }
            ],
            "targetChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.PARAM_TRANSFORM, \"{key:value}\");",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String DUBBO_PARAMS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String DUBBO_PARAMS"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{key:value}'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PARAM_TRANSFORM"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.dromara.soul.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String PARAM_TRANSFORM"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{key:value}'"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "bf61e5e08",
    "aCommit": "4ea79fa2f",
    "changes": [
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/ConsulServerConfiguration.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/config/ConsulServerConfiguration.java",
        "name": "org.apache.shenyu.admin.config.ConsulServerConfiguration",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return new ConsulClient(config.getServerLists());",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "final String serverList = config.getServerLists();",
                "type": "ADD",
                "lineNo": 41
              },
              {
                "line": "if (StringUtils.isBlank(serverList)) {",
                "type": "ADD",
                "lineNo": 42
              },
              {
                "line": "throw new ShenyuException(\"serverList can not be null.\");",
                "type": "ADD",
                "lineNo": 43
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 44
              },
              {
                "line": "final String[] addresses = serverList.split(\":\");",
                "type": "ADD",
                "lineNo": 45
              },
              {
                "line": "if (addresses.length != 2) {",
                "type": "ADD",
                "lineNo": 46
              },
              {
                "line": "throw new ShenyuException(\"serverList formatter is not incorrect.\");",
                "type": "ADD",
                "lineNo": 47
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 48
              },
              {
                "line": "return new ConsulClient(addresses[0], Integer.parseInt(addresses[1]));",
                "type": "ADD",
                "lineNo": 49
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructorCall",
                "value": "com.ecwid.consul.v1.ConsulClient(java.lang.String)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.ecwid.consul.v1.ConsulClient"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.getServerLists()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.getServerLists()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String serverList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.getServerLists()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.getServerLists()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serverList"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'serverList can not be null.'"
              },
              {
                "type": "CtLocalVariable",
                "value": "String[] addresses"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.split(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serverList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.split(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ':'"
              },
              {
                "type": "CtFieldRead",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] addresses"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "String[] addresses"
              },
              {
                "type": "CtLiteral",
                "value": "int '2'"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'serverList formatter is not incorrect.'"
              },
              {
                "type": "CtConstructorCall",
                "value": "com.ecwid.consul.v1.ConsulClient(java.lang.String,int)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.ecwid.consul.v1.ConsulClient"
              },
              {
                "type": "CtArrayRead",
                "value": "String[] addresses"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] addresses"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Integer.parseInt(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Integer.parseInt(String)"
              },
              {
                "type": "CtArrayRead",
                "value": "String[] addresses"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] addresses"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/config/ConsulServerConfigurationTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/config/ConsulServerConfigurationTest.java",
        "name": "org.apache.shenyu.admin.config.ConsulServerConfigurationTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "when(config.getServerLists()).thenReturn(\"127.0.0.1:8500\");",
                "type": "ADD",
                "lineNo": 60
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.getServerLists()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.getServerLists()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1:8500'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client-server/shenyu-register-client-server-consul/src/main/java/org/apache/shenyu/register/client/server/consul/ConsulClientServerRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-client-server/shenyu-register-client-server-consul/src/main/java/org/apache/shenyu/register/client/server/consul/ConsulClientServerRegisterRepository.java",
        "name": "org.apache.shenyu.register.client.server.consul.ConsulClientServerRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "consulClient = new ConsulClient(config.getServerLists());",
                "type": "DELETE",
                "lineNo": 67
              }
            ],
            "targetChanges": [
              {
                "line": "final String serverList = config.getServerLists();",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "if (StringUtils.isBlank(serverList)) {",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "throw new ShenyuException(\"serverList can not be null.\");",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "final String[] addresses = splitAndCheckAddress(serverList);",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "consulClient = new ConsulClient(addresses[0], Integer.parseInt(addresses[1]));",
                "type": "ADD",
                "lineNo": 75
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtFieldWrite",
                "value": "com.ecwid.consul.v1.ConsulClient consulClient"
              },
              {
                "type": "CtConstructorCall",
                "value": "com.ecwid.consul.v1.ConsulClient(java.lang.String)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.ecwid.consul.v1.ConsulClient"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.getServerLists()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.getServerLists()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String serverList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.getServerLists()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.getServerLists()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serverList"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'serverList can not be null.'"
              },
              {
                "type": "CtLocalVariable",
                "value": "String[] addresses"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.client.server.consul.ConsulClientServerRegisterRepository.splitAndCheckAddress(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.client.server.consul.ConsulClientServerRegisterRepository.splitAndCheckAddress(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serverList"
              },
              {
                "type": "CtFieldWrite",
                "value": "com.ecwid.consul.v1.ConsulClient consulClient"
              },
              {
                "type": "CtConstructorCall",
                "value": "com.ecwid.consul.v1.ConsulClient(java.lang.String,int)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.ecwid.consul.v1.ConsulClient"
              },
              {
                "type": "CtArrayRead",
                "value": "String[] addresses"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] addresses"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Integer.parseInt(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Integer.parseInt(String)"
              },
              {
                "type": "CtArrayRead",
                "value": "String[] addresses"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] addresses"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private String[] splitAndCheckAddress(final String serverList) {",
                "type": "ADD",
                "lineNo": 109
              },
              {
                "line": "final String[] addresses = serverList.split(\":\");",
                "type": "ADD",
                "lineNo": 110
              },
              {
                "line": "if (addresses.length != 2) {",
                "type": "ADD",
                "lineNo": 111
              },
              {
                "line": "throw new ShenyuException(\"serverList formatter is not incorrect.\");",
                "type": "ADD",
                "lineNo": 112
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 113
              },
              {
                "line": "return addresses;",
                "type": "ADD",
                "lineNo": 114
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 115
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.client.server.consul.ConsulClientServerRegisterRepository.splitAndCheckAddress(String)"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String serverList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "String[] addresses"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.split(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serverList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.split(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ':'"
              },
              {
                "type": "CtFieldRead",
                "value": "int length"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] addresses"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "String[] addresses"
              },
              {
                "type": "CtLiteral",
                "value": "int '2'"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'serverList formatter is not incorrect.'"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] addresses"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client-server/shenyu-register-client-server-consul/src/test/java/org/apache/shenyu/register/client/server/consul/ConsulServerRegisterRepositoryTest.java",
        "aPath": "shenyu-register-center/shenyu-register-client-server/shenyu-register-client-server-consul/src/test/java/org/apache/shenyu/register/client/server/consul/ConsulServerRegisterRepositoryTest.java",
        "name": "org.apache.shenyu.register.client.server.consul.ConsulServerRegisterRepositoryTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": ".host(\"127.0.0.1\").rpcType(RpcTypeEnum.DUBBO.getName()).build();",
                "type": "DELETE",
                "lineNo": 110
              }
            ],
            "targetChanges": [
              {
                "line": ".host(\"127.0.0.1:8500\").rpcType(RpcTypeEnum.DUBBO.getName()).build();",
                "type": "ADD",
                "lineNo": 110
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "host()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1'"
              },
              {
                "type": "CtExecutableReference",
                "value": "rpcType()"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> RpcTypeEnum.DUBBO"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "host()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1:8500'"
              },
              {
                "type": "CtExecutableReference",
                "value": "rpcType()"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> RpcTypeEnum.DUBBO"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "final ShenyuRegisterCenterConfig shenyuRegisterCenterConfig = mock(ShenyuRegisterCenterConfig.class);",
                "type": "DELETE",
                "lineNo": 128
              }
            ],
            "targetChanges": [
              {
                "line": "ShenyuRegisterCenterConfig shenyuRegisterCenterConfig = new ShenyuRegisterCenterConfig();",
                "type": "ADD",
                "lineNo": 128
              },
              {
                "line": "shenyuRegisterCenterConfig.setServerLists(\"127.0.0.1:8500\");",
                "type": "ADD",
                "lineNo": 129
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig shenyuRegisterCenterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig shenyuRegisterCenterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.ShenyuRegisterCenterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.setServerLists(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig shenyuRegisterCenterConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.setServerLists(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1:8500'"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "4800386d9",
    "aCommit": "fc2bc20aa",
    "changes": [
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/AbstractShenyuClientRegisterServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/AbstractShenyuClientRegisterServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "if (CollectionUtils.isEmpty(upstreamList)) {",
                "type": "ADD",
                "lineNo": 227
              },
              {
                "line": "return true;",
                "type": "ADD",
                "lineNo": 228
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 229
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.collections4.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.collections4.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.collections4.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List upstreamList"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/service/register/AbstractShenyuClientRegisterServiceImplTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/service/register/AbstractShenyuClientRegisterServiceImplTest.java",
        "name": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImplTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertFalse(abstractShenyuClientRegisterService.doSubmit(\"Selector_Id\", new ArrayList<>()));",
                "type": "DELETE",
                "lineNo": 170
              }
            ],
            "targetChanges": [
              {
                "line": "assertTrue(abstractShenyuClientRegisterService.doSubmit(\"Selector_Id\", new ArrayList<>()));",
                "type": "ADD",
                "lineNo": 169
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertFalse(boolean)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertFalse(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.doSubmit(String,List)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImplTest$MockAbstractShenyuClientRegisterServiceImpl abstractShenyuClientRegisterService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.doSubmit(String,List)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Selector_Id'"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertTrue(boolean)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertTrue(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.doSubmit(String,List)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImplTest$MockAbstractShenyuClientRegisterServiceImpl abstractShenyuClientRegisterService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.doSubmit(String,List)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Selector_Id'"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-client/shenyu-client-core/src/main/java/org/apache/shenyu/client/core/client/AbstractContextRefreshedEventListener.java",
        "aPath": "shenyu-client/shenyu-client-core/src/main/java/org/apache/shenyu/client/core/client/AbstractContextRefreshedEventListener.java",
        "name": "org.apache.shenyu.client.core.client.AbstractContextRefreshedEventListener",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": ".state(ApiStateEnum.PUBLISHED.getState())",
                "type": "DELETE",
                "lineNo": 206
              }
            ],
            "targetChanges": [
              {
                "line": ".state(ApiStateEnum.UNPUBLISHED.getState())",
                "type": "ADD",
                "lineNo": 206
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "state(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.ApiStateEnum.getState()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.ApiStateEnum PUBLISHED"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.ApiStateEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.ApiStateEnum PUBLISHED"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.ApiStateEnum.getState()"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "state(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.ApiStateEnum.getState()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.ApiStateEnum UNPUBLISHED"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.ApiStateEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.ApiStateEnum UNPUBLISHED"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.ApiStateEnum.getState()"
              }
            ]
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "3d8798be9",
    "aCommit": "b5bc26d21",
    "changes": [
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/shiro/bean/StatelessAuthFilter.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/shiro/bean/StatelessAuthFilter.java",
        "name": "org.apache.shenyu.admin.shiro.bean.StatelessAuthFilter",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "StatelessToken token = new StatelessToken(tokenValue);",
                "type": "DELETE",
                "lineNo": 67
              }
            ],
            "targetChanges": [
              {
                "line": "BearerToken token = new BearerToken(tokenValue);",
                "type": "ADD",
                "lineNo": 68
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.shiro.bean.StatelessToken token"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.shiro.bean.StatelessToken"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.admin.shiro.bean.StatelessToken.StatelessToken(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.shiro.bean.StatelessToken"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String tokenValue"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shiro.authc.BearerToken token"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shiro.authc.BearerToken"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shiro.authc.BearerToken(java.lang.String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shiro.authc.BearerToken"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String tokenValue"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/shiro/config/ShiroRealm.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/shiro/config/ShiroRealm.java",
        "name": "org.apache.shenyu.admin.shiro.config.ShiroRealm",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return token instanceof StatelessToken;",
                "type": "DELETE",
                "lineNo": 62
              }
            ],
            "targetChanges": [
              {
                "line": "return token instanceof BearerToken;",
                "type": "ADD",
                "lineNo": 62
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "org.apache.shiro.authc.AuthenticationToken token"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.shiro.bean.StatelessToken"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.shiro.bean.StatelessToken"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableRead",
                "value": "org.apache.shiro.authc.AuthenticationToken token"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shiro.authc.BearerToken"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shiro.authc.BearerToken"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/shiro/config/ShiroRealmTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/shiro/config/ShiroRealmTest.java",
        "name": "org.apache.shenyu.admin.shiro.config.ShiroRealmTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "StatelessToken token = mock(StatelessToken.class);",
                "type": "DELETE",
                "lineNo": 69
              }
            ],
            "targetChanges": [
              {
                "line": "BearerToken token = mock(BearerToken.class);",
                "type": "ADD",
                "lineNo": 69
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.shiro.bean.StatelessToken token"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.shiro.bean.StatelessToken"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shiro.authc.BearerToken token"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shiro.authc.BearerToken"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "20576a278",
    "aCommit": "942435610",
    "changes": [
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/constant/Constants.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/constant/Constants.java",
        "name": "org.apache.shenyu.common.constant.Constants",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* RESPONSE_MONO.",
                "type": "ADD",
                "lineNo": 151
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 152
              },
              {
                "line": "String RESPONSE_MONO = \"RESPONSE_MONO\";",
                "type": "ADD",
                "lineNo": 153
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 155
              },
              {
                "line": "* WATCHER_HTTP_STATUS.",
                "type": "ADD",
                "lineNo": 156
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 157
              },
              {
                "line": "String WATCHER_HTTP_STATUS = \"WATCHER_HTTP_STATUS\";",
                "type": "ADD",
                "lineNo": 158
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 160
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String RESPONSE_MONO"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'RESPONSE_MONO'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String WATCHER_HTTP_STATUS"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'WATCHER_HTTP_STATUS'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-httpclient/src/main/java/org/apache/shenyu/plugin/httpclient/NettyHttpClientPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-httpclient/src/main/java/org/apache/shenyu/plugin/httpclient/NettyHttpClientPlugin.java",
        "name": "org.apache.shenyu.plugin.httpclient.NettyHttpClientPlugin",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "// watcher httpStatus",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "final Consumer<HttpStatus> consumer = exchange.getAttribute(Constants.WATCHER_HTTP_STATUS);",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "Optional.ofNullable(consumer).ifPresent(c -> c.accept(response.getStatusCode()));",
                "type": "ADD",
                "lineNo": 83
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "Consumer consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "Consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.WATCHER_HTTP_STATUS"
              },
              {
                "type": "CtInvocation",
                "value": "ifPresent()"
              },
              {
                "type": "CtInvocation",
                "value": "ofNullable()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "ofNullable()"
              },
              {
                "type": "CtVariableRead",
                "value": "Consumer consumer"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "Consumer consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "Consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              },
              {
                "type": "CtExecutableReference",
                "value": "ifPresent()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> c"
              },
              {
                "type": "CtInvocation",
                "value": "accept()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> c"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> c"
              },
              {
                "type": "CtExecutableReference",
                "value": "accept()"
              },
              {
                "type": "CtInvocation",
                "value": "getStatusCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.server.reactive.ServerHttpResponse response"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.springframework.http.server.reactive.ServerHttpResponse response"
              },
              {
                "type": "CtExecutableReference",
                "value": "getStatusCode()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-response/src/main/java/org/apache/shenyu/plugin/response/strategy/NettyClientMessageWriter.java",
        "aPath": "shenyu-plugin/shenyu-plugin-response/src/main/java/org/apache/shenyu/plugin/response/strategy/NettyClientMessageWriter.java",
        "name": "org.apache.shenyu.plugin.response.strategy.NettyClientMessageWriter",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return isStreamingMediaType(contentType)",
                "type": "DELETE",
                "lineNo": 65
              }
            ],
            "targetChanges": [
              {
                "line": "Mono<Void> responseMono = isStreamingMediaType(contentType)",
                "type": "ADD",
                "lineNo": 69
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isStreamingMediaType()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isStreamingMediaType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.MediaType contentType"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.springframework.http.MediaType contentType"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "Mono responseMono"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              },
              {
                "type": "CtInvocation",
                "value": "isStreamingMediaType()"
              },
              {
                "type": "CtExecutableReference",
                "value": "isStreamingMediaType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.MediaType contentType"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.springframework.http.MediaType contentType"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.RESPONSE_MONO, responseMono);",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "// watcher httpStatus",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "final Consumer<HttpStatus> consumer = exchange.getAttribute(Constants.WATCHER_HTTP_STATUS);",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "Optional.ofNullable(consumer).ifPresent(c -> c.accept(response.getStatusCode()));",
                "type": "ADD",
                "lineNo": 75
              },
              {
                "line": "return responseMono;",
                "type": "ADD",
                "lineNo": 76
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "put()"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.RESPONSE_MONO"
              },
              {
                "type": "CtVariableRead",
                "value": "Mono responseMono"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "Mono responseMono"
              },
              {
                "type": "CtLocalVariable",
                "value": "Consumer consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "Consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.WATCHER_HTTP_STATUS"
              },
              {
                "type": "CtInvocation",
                "value": "ifPresent()"
              },
              {
                "type": "CtInvocation",
                "value": "ofNullable()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "ofNullable()"
              },
              {
                "type": "CtVariableRead",
                "value": "Consumer consumer"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "Consumer consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "Consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              },
              {
                "type": "CtExecutableReference",
                "value": "ifPresent()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> c"
              },
              {
                "type": "CtInvocation",
                "value": "accept()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> c"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> c"
              },
              {
                "type": "CtExecutableReference",
                "value": "accept()"
              },
              {
                "type": "CtInvocation",
                "value": "getStatusCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.server.reactive.ServerHttpResponse response"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.springframework.http.server.reactive.ServerHttpResponse response"
              },
              {
                "type": "CtExecutableReference",
                "value": "getStatusCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "Mono responseMono"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "Mono responseMono"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-response/src/main/java/org/apache/shenyu/plugin/response/strategy/RPCMessageWriter.java",
        "aPath": "shenyu-plugin/shenyu-plugin-response/src/main/java/org/apache/shenyu/plugin/response/strategy/RPCMessageWriter.java",
        "name": "org.apache.shenyu.plugin.response.strategy.RPCMessageWriter",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return WebFluxResultUtils.result(exchange, result);",
                "type": "DELETE",
                "lineNo": 46
              }
            ],
            "targetChanges": [
              {
                "line": "Mono<Void> responseMono = WebFluxResultUtils.result(exchange, result);",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "exchange.getAttributes().put(Constants.RESPONSE_MONO, responseMono);",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "// watcher httpStatus",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "final Consumer<HttpStatus> consumer = exchange.getAttribute(Constants.WATCHER_HTTP_STATUS);",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "Optional.ofNullable(consumer).ifPresent(c -> c.accept(exchange.getResponse().getStatusCode()));",
                "type": "ADD",
                "lineNo": 53
              },
              {
                "line": "return responseMono;",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "result()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.api.utils.WebFluxResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "result()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object result"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.Object result"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "Mono responseMono"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              },
              {
                "type": "CtInvocation",
                "value": "result()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.api.utils.WebFluxResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "result()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object result"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.Object result"
              },
              {
                "type": "CtInvocation",
                "value": "put()"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.RESPONSE_MONO"
              },
              {
                "type": "CtVariableRead",
                "value": "Mono responseMono"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "Mono responseMono"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              },
              {
                "type": "CtLocalVariable",
                "value": "Consumer consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "Consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.WATCHER_HTTP_STATUS"
              },
              {
                "type": "CtInvocation",
                "value": "ifPresent()"
              },
              {
                "type": "CtInvocation",
                "value": "ofNullable()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "ofNullable()"
              },
              {
                "type": "CtVariableRead",
                "value": "Consumer consumer"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "Consumer consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "Consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              },
              {
                "type": "CtExecutableReference",
                "value": "ifPresent()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> c"
              },
              {
                "type": "CtInvocation",
                "value": "accept()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> c"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> c"
              },
              {
                "type": "CtExecutableReference",
                "value": "accept()"
              },
              {
                "type": "CtInvocation",
                "value": "getStatusCode()"
              },
              {
                "type": "CtInvocation",
                "value": "getResponse()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getResponse()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getStatusCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "Mono responseMono"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "Mono responseMono"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-response/src/main/java/org/apache/shenyu/plugin/response/strategy/WebClientMessageWriter.java",
        "aPath": "shenyu-plugin/shenyu-plugin-response/src/main/java/org/apache/shenyu/plugin/response/strategy/WebClientMessageWriter.java",
        "name": "org.apache.shenyu.plugin.response.strategy.WebClientMessageWriter",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return clientResponse.bodyToMono(byte[].class)",
                "type": "DELETE",
                "lineNo": 82
              }
            ],
            "targetChanges": [
              {
                "line": "Mono<Void> responseMono = clientResponse.bodyToMono(byte[].class)",
                "type": "ADD",
                "lineNo": 86
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "doOnCancel()"
              },
              {
                "type": "CtInvocation",
                "value": "flatMap()"
              },
              {
                "type": "CtInvocation",
                "value": "bodyToMono()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.reactive.function.client.ClientResponse clientResponse"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.springframework.web.reactive.function.client.ClientResponse clientResponse"
              },
              {
                "type": "CtExecutableReference",
                "value": "bodyToMono()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "Mono responseMono"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              },
              {
                "type": "CtInvocation",
                "value": "doOnCancel()"
              },
              {
                "type": "CtInvocation",
                "value": "flatMap()"
              },
              {
                "type": "CtInvocation",
                "value": "bodyToMono()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.reactive.function.client.ClientResponse clientResponse"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.springframework.web.reactive.function.client.ClientResponse clientResponse"
              },
              {
                "type": "CtExecutableReference",
                "value": "bodyToMono()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              },
              {
                "type": "CtTypeReference",
                "value": "Mono"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Void"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.RESPONSE_MONO, responseMono);",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "// watcher httpStatus",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "final Consumer<HttpStatus> consumer = exchange.getAttribute(Constants.WATCHER_HTTP_STATUS);",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "Optional.ofNullable(consumer).ifPresent(c -> c.accept(response.getStatusCode()));",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "return responseMono;",
                "type": "ADD",
                "lineNo": 93
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "put()"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.RESPONSE_MONO"
              },
              {
                "type": "CtVariableRead",
                "value": "Mono responseMono"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "Mono responseMono"
              },
              {
                "type": "CtLocalVariable",
                "value": "Consumer consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "Consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> Constants.WATCHER_HTTP_STATUS"
              },
              {
                "type": "CtInvocation",
                "value": "ifPresent()"
              },
              {
                "type": "CtInvocation",
                "value": "ofNullable()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "ofNullable()"
              },
              {
                "type": "CtVariableRead",
                "value": "Consumer consumer"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "Consumer consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "Consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              },
              {
                "type": "CtExecutableReference",
                "value": "ifPresent()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> c"
              },
              {
                "type": "CtInvocation",
                "value": "accept()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> c"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> c"
              },
              {
                "type": "CtExecutableReference",
                "value": "accept()"
              },
              {
                "type": "CtInvocation",
                "value": "getStatusCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.http.server.reactive.ServerHttpResponse response"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.springframework.http.server.reactive.ServerHttpResponse response"
              },
              {
                "type": "CtExecutableReference",
                "value": "getStatusCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "Mono responseMono"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "Mono responseMono"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-sentinel/src/main/java/org/apache/shenyu/plugin/sentinel/SentinelPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-sentinel/src/main/java/org/apache/shenyu/plugin/sentinel/SentinelPlugin.java",
        "name": "org.apache.shenyu.plugin.sentinel.SentinelPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return chain.execute(exchange).doOnSuccess(v -> {",
                "type": "DELETE",
                "lineNo": 56
              },
              {
                "line": "HttpStatus status = exchange.getResponse().getStatusCode();",
                "type": "DELETE",
                "lineNo": 57
              }
            ],
            "targetChanges": [
              {
                "line": "exchange.getAttributes().put(Constants.WATCHER_HTTP_STATUS, (Consumer<HttpStatus>) status -> {",
                "type": "ADD",
                "lineNo": 58
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "onErrorResume()"
              },
              {
                "type": "CtInvocation",
                "value": "transform(com.alibaba.csp.sentinel.adapter.reactor.SentinelReactorTransformer)"
              },
              {
                "type": "CtInvocation",
                "value": "doOnSuccess()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain.execute(ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain chain"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain.execute(ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "doOnSuccess()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> v"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.springframework.http.HttpStatus status"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              },
              {
                "type": "CtInvocation",
                "value": "getStatusCode()"
              },
              {
                "type": "CtInvocation",
                "value": "getResponse()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getResponse()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getStatusCode()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String,java.util.function.Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String,java.util.function.Consumer)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String WATCHER_HTTP_STATUS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String WATCHER_HTTP_STATUS"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Consumer"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.http.HttpStatus"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.http.HttpStatus status"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "exchange.getResponse().setStatusCode(null);",
                "type": "DELETE",
                "lineNo": 59
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "setStatusCode()"
              },
              {
                "type": "CtInvocation",
                "value": "getResponse()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtParameterReference",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getResponse()"
              },
              {
                "type": "CtExecutableReference",
                "value": "setStatusCode()"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "}).transform(new SentinelReactorTransformer<>(resourceName)).onErrorResume(throwable ->",
                "type": "DELETE",
                "lineNo": 62
              }
            ],
            "targetChanges": [
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "return chain.execute(exchange).transform(new SentinelReactorTransformer<>(resourceName)).onErrorResume(throwable ->",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "transform(com.alibaba.csp.sentinel.adapter.reactor.SentinelReactorTransformer)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.sentinel.SentinelReactorTransformer<>(java.lang.String)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.csp.sentinel.adapter.reactor.SentinelReactorTransformer"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String resourceName"
              },
              {
                "type": "CtExecutableReference",
                "value": "onErrorResume()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> throwable"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "onErrorResume()"
              },
              {
                "type": "CtInvocation",
                "value": "transform(com.alibaba.csp.sentinel.adapter.reactor.SentinelReactorTransformer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain.execute(ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain chain"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain.execute(ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "transform(com.alibaba.csp.sentinel.adapter.reactor.SentinelReactorTransformer)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.sentinel.SentinelReactorTransformer<>(java.lang.String)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.csp.sentinel.adapter.reactor.SentinelReactorTransformer"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String resourceName"
              },
              {
                "type": "CtExecutableReference",
                "value": "onErrorResume()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> throwable"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-sentinel/src/main/java/org/apache/shenyu/plugin/sentinel/fallback/SentinelFallbackHandler.java",
        "aPath": "shenyu-plugin/shenyu-plugin-sentinel/src/main/java/org/apache/shenyu/plugin/sentinel/fallback/SentinelFallbackHandler.java",
        "name": "org.apache.shenyu.plugin.sentinel.fallback.SentinelFallbackHandler",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "} else if (throwable instanceof SentinelPlugin.SentinelFallbackException) {",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "return exchange.getAttribute(Constants.RESPONSE_MONO);",
                "type": "ADD",
                "lineNo": 51
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.Throwable throwable"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.sentinel.SentinelPlugin$SentinelFallbackException"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.sentinel.SentinelPlugin$SentinelFallbackException"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.sentinel.SentinelPlugin"
              },
              {
                "type": "CtInvocation",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttribute(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String RESPONSE_MONO"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String RESPONSE_MONO"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-sentinel/src/test/java/org/apache/shenyu/plugin/sentinel/SentinelPluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-sentinel/src/test/java/org/apache/shenyu/plugin/sentinel/SentinelPluginTest.java",
        "name": "org.apache.shenyu.plugin.sentinel.SentinelPluginTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "StepVerifier.create(sentinelPlugin.doExecute(exchange, chain, selectorData, data))",
                "type": "DELETE",
                "lineNo": 215
              },
              {
                "line": ".expectError(HttpStatusCodeException.class).verify();",
                "type": "DELETE",
                "lineNo": 216
              }
            ],
            "targetChanges": [
              {
                "line": "StepVerifier.create(sentinelPlugin.doExecute(exchange, chain, selectorData, data)).expectComplete().verify();",
                "type": "ADD",
                "lineNo": 214
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "verify()"
              },
              {
                "type": "CtInvocation",
                "value": "expectError(java.lang.Class)"
              },
              {
                "type": "CtInvocation",
                "value": "create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.test.StepVerifier"
              },
              {
                "type": "CtExecutableReference",
                "value": "create()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.sentinel.SentinelPlugin.doExecute(ServerWebExchange,ShenyuPluginChain,SelectorData,RuleData)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.sentinel.SentinelPlugin sentinelPlugin"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.sentinel.SentinelPlugin.doExecute(ServerWebExchange,ShenyuPluginChain,SelectorData,RuleData)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain chain"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData data"
              },
              {
                "type": "CtExecutableReference",
                "value": "expectError(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "verify()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "verify()"
              },
              {
                "type": "CtInvocation",
                "value": "expectComplete()"
              },
              {
                "type": "CtInvocation",
                "value": "create()"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.test.StepVerifier"
              },
              {
                "type": "CtExecutableReference",
                "value": "create()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.sentinel.SentinelPlugin.doExecute(ServerWebExchange,ShenyuPluginChain,SelectorData,RuleData)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.sentinel.SentinelPlugin sentinelPlugin"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.sentinel.SentinelPlugin.doExecute(ServerWebExchange,ShenyuPluginChain,SelectorData,RuleData)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain chain"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData data"
              },
              {
                "type": "CtExecutableReference",
                "value": "expectComplete()"
              },
              {
                "type": "CtExecutableReference",
                "value": "verify()"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "e3384f858",
    "aCommit": "e27a26b8c",
    "changes": [
      {
        "bPath": "shenyu-plugin/shenyu-plugin-proxy/shenyu-plugin-divide/src/main/java/org/apache/shenyu/plugin/divide/context/DivideShenyuContextDecorator.java",
        "aPath": "shenyu-plugin/shenyu-plugin-proxy/shenyu-plugin-divide/src/main/java/org/apache/shenyu/plugin/divide/context/DivideShenyuContextDecorator.java",
        "name": "org.apache.shenyu.plugin.divide.context.DivideShenyuContextDecorator",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "shenyuContext.setModule(String.format(\"%s-%s\", PluginEnum.DIVIDE.getName(), shenyuContext.getRpcType()));",
                "type": "DELETE",
                "lineNo": 37
              }
            ],
            "targetChanges": [
              {
                "line": "shenyuContext.setModule(Optional.ofNullable(metaData).map(MetaData::getAppName)",
                "type": "ADD",
                "lineNo": 39
              },
              {
                "line": ".orElse(String.format(\"%s-%s\", PluginEnum.DIVIDE.getName(), shenyuContext.getRpcType())));",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.setModule(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.setModule(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '%s-%s'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.setModule(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.setModule(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.common.dto.MetaData.getAppName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getAppName()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.MetaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '%s-%s'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-proxy/shenyu-plugin-springcloud/src/main/java/org/apache/shenyu/plugin/springcloud/context/SpringCloudShenyuContextDecorator.java",
        "aPath": "shenyu-plugin/shenyu-plugin-proxy/shenyu-plugin-springcloud/src/main/java/org/apache/shenyu/plugin/springcloud/context/SpringCloudShenyuContextDecorator.java",
        "name": "org.apache.shenyu.plugin.springcloud.context.SpringCloudShenyuContextDecorator",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "shenyuContext.setModule(String.format(\"%s-%s\", PluginEnum.DIVIDE.getName(), shenyuContext.getRpcType()));",
                "type": "DELETE",
                "lineNo": 37
              }
            ],
            "targetChanges": [
              {
                "line": "shenyuContext.setModule(Optional.ofNullable(metaData).map(MetaData::getAppName)",
                "type": "ADD",
                "lineNo": 39
              },
              {
                "line": ".orElse(String.format(\"%s-%s\", PluginEnum.SPRING_CLOUD.getName(), shenyuContext.getRpcType())));",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.setModule(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.setModule(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '%s-%s'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.setModule(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.setModule(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.common.dto.MetaData.getAppName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getAppName()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.MetaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '%s-%s'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum SPRING_CLOUD"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum SPRING_CLOUD"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-proxy/shenyu-plugin-springcloud/src/test/java/org/apache/shenyu/plugin/springcloud/context/SpringCloudShenyuContextDecoratorTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-proxy/shenyu-plugin-springcloud/src/test/java/org/apache/shenyu/plugin/springcloud/context/SpringCloudShenyuContextDecoratorTest.java",
        "name": "org.apache.shenyu.plugin.springcloud.context.SpringCloudShenyuContextDecoratorTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "Assertions.assertEquals(shenyuContext.getModule(), \"divide-springCloud\");",
                "type": "DELETE",
                "lineNo": 45
              }
            ],
            "targetChanges": [
              {
                "line": "Assertions.assertEquals(shenyuContext.getModule(), \"springCloud-springCloud\");",
                "type": "ADD",
                "lineNo": 45
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.jupiter.api.Assertions"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getModule()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getModule()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'divide-springCloud'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.jupiter.api.Assertions"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getModule()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getModule()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'springCloud-springCloud'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-proxy/shenyu-plugin-websocket/src/main/java/org/apache/shenyu/plugin/websocket/context/WebSocketShenyuContextDecorator.java",
        "aPath": "shenyu-plugin/shenyu-plugin-proxy/shenyu-plugin-websocket/src/main/java/org/apache/shenyu/plugin/websocket/context/WebSocketShenyuContextDecorator.java",
        "name": "org.apache.shenyu.plugin.websocket.context.WebSocketShenyuContextDecorator",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "shenyuContext.setModule(String.format(\"%s-%s\", PluginEnum.WEB_SOCKET.getName(), shenyuContext.getRpcType()));",
                "type": "DELETE",
                "lineNo": 37
              }
            ],
            "targetChanges": [
              {
                "line": "shenyuContext.setModule(Optional.ofNullable(metaData).map(MetaData::getAppName)",
                "type": "ADD",
                "lineNo": 39
              },
              {
                "line": ".orElse(String.format(\"%s-%s\", PluginEnum.WEB_SOCKET.getName(), shenyuContext.getRpcType())));",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.setModule(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.setModule(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '%s-%s'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum WEB_SOCKET"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum WEB_SOCKET"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.setModule(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.setModule(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.common.dto.MetaData.getAppName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getAppName()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.MetaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '%s-%s'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum WEB_SOCKET"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum WEB_SOCKET"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-security/shenyu-plugin-sign/src/main/java/org/apache/shenyu/plugin/sign/service/ComposableSignService.java",
        "aPath": "shenyu-plugin/shenyu-plugin-security/shenyu-plugin-sign/src/main/java/org/apache/shenyu/plugin/sign/service/ComposableSignService.java",
        "name": "org.apache.shenyu.plugin.sign.service.ComposableSignService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "handleExchange(exchange, appAuthData, shenyuContext.getContextPath());",
                "type": "DELETE",
                "lineNo": 115
              }
            ],
            "targetChanges": [
              {
                "line": "handleExchange(exchange, appAuthData, shenyuContext);",
                "type": "ADD",
                "lineNo": 118
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.sign.service.ComposableSignService.handleExchange(ServerWebExchange,AppAuthData,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.sign.service.ComposableSignService.handleExchange(ServerWebExchange,AppAuthData,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.AppAuthData appAuthData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getContextPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getContextPath()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.sign.service.ComposableSignService.handleExchange(ServerWebExchange,AppAuthData,ShenyuContext)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.sign.service.ComposableSignService.handleExchange(ServerWebExchange,AppAuthData,ShenyuContext)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.AppAuthData appAuthData"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "final String contextPath) {",
                "type": "DELETE",
                "lineNo": 206
              }
            ],
            "targetChanges": [
              {
                "line": "final ShenyuContext context) {",
                "type": "ADD",
                "lineNo": 209
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtParameter",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext context"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "paramDataList.stream().filter(p ->",
                "type": "DELETE",
                "lineNo": 211
              },
              {
                "line": "(\"/\" + p.getAppName()).equals(contextPath))",
                "type": "DELETE",
                "lineNo": 212
              }
            ],
            "targetChanges": [
              {
                "line": "String realAppName;",
                "type": "ADD",
                "lineNo": 214
              },
              {
                "line": "if (skipSignExchange(context)) {",
                "type": "ADD",
                "lineNo": 215
              },
              {
                "line": "String rawPath = exchange.getRequest().getURI().getRawPath();",
                "type": "ADD",
                "lineNo": 216
              },
              {
                "line": "// get the context path from the request url",
                "type": "ADD",
                "lineNo": 217
              },
              {
                "line": "String[] contextPath = StringUtils.split(rawPath, \"/\");",
                "type": "ADD",
                "lineNo": 218
              },
              {
                "line": "if (ArrayUtils.isEmpty(contextPath)) {",
                "type": "ADD",
                "lineNo": 219
              },
              {
                "line": "throw new ShenyuException(\"Cannot find the context path(AppName) from the request url\");",
                "type": "ADD",
                "lineNo": 220
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 221
              },
              {
                "line": "realAppName = contextPath[0];",
                "type": "ADD",
                "lineNo": 222
              },
              {
                "line": "} else {",
                "type": "ADD",
                "lineNo": 223
              },
              {
                "line": "realAppName = context.getModule();",
                "type": "ADD",
                "lineNo": 224
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 225
              },
              {
                "line": "paramDataList.stream().filter(p -> p.getAppName().equals(realAppName))",
                "type": "ADD",
                "lineNo": 226
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.findFirst()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List paramDataList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.AuthParamData p"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.AuthParamData.getAppName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.AuthParamData p"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.AuthParamData.getAppName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String realAppName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.sign.service.ComposableSignService.skipSignExchange(ShenyuContext)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.sign.service.ComposableSignService.skipSignExchange(ShenyuContext)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext context"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String rawPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "getRawPath()"
              },
              {
                "type": "CtInvocation",
                "value": "getURI()"
              },
              {
                "type": "CtInvocation",
                "value": "getRequest()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRequest()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getURI()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRawPath()"
              },
              {
                "type": "CtLocalVariable",
                "value": "String[] contextPath"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.split(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.split(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rawPath"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.ArrayUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] contextPath"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Cannot find the context path(AppName) from the request url'"
              },
              {
                "type": "CtVariableWrite",
                "value": "java.lang.String realAppName"
              },
              {
                "type": "CtArrayRead",
                "value": "String[] contextPath"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] contextPath"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtVariableWrite",
                "value": "java.lang.String realAppName"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getModule()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext context"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getModule()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ifPresent(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.findFirst()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List paramDataList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.AuthParamData p"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.AuthParamData.getAppName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.AuthParamData p"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.AuthParamData.getAppName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String realAppName"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private boolean skipSignExchange(final ShenyuContext context) {",
                "type": "ADD",
                "lineNo": 233
              },
              {
                "line": "return StringUtils.equals(String.format(\"%s-%s\", PluginEnum.SPRING_CLOUD.getName(), context.getRpcType()), context.getModule())",
                "type": "ADD",
                "lineNo": 234
              },
              {
                "line": "|| StringUtils.equals(String.format(\"%s-%s\", PluginEnum.DIVIDE.getName(), context.getRpcType()), context.getModule())",
                "type": "ADD",
                "lineNo": 235
              },
              {
                "line": "|| StringUtils.equals(String.format(\"%s-%s\", PluginEnum.WEB_SOCKET.getName(), context.getRpcType()), context.getModule());",
                "type": "ADD",
                "lineNo": 236
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 237
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.sign.service.ComposableSignService.skipSignExchange(ShenyuContext)"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext context"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.equals(CharSequence,CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.equals(CharSequence,CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '%s-%s'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum SPRING_CLOUD"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum SPRING_CLOUD"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext context"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getModule()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext context"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getModule()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.equals(CharSequence,CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.equals(CharSequence,CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '%s-%s'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext context"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getModule()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext context"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getModule()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.equals(CharSequence,CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.equals(CharSequence,CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '%s-%s'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum WEB_SOCKET"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum WEB_SOCKET"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext context"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRpcType()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getModule()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext context"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getModule()"
              }
            ]
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "fb6fd3327",
    "aCommit": "ccd8d6c57",
    "changes": [
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/main/java/org/apache/shenyu/plugin/base/utils/CacheKeyUtils.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/main/java/org/apache/shenyu/plugin/base/utils/CacheKeyUtils.java",
        "name": "org.apache.shenyu.plugin.base.utils.CacheKeyUtils",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return ruleData.getSelectorId() + \"_\" + ruleData.getName();",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "return String.join(\"_\", ruleData.getSelectorId(), ruleData.getId());",
                "type": "ADD",
                "lineNo": 39
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getSelectorId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getSelectorId()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '_'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getName()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.String.join(CharSequence,CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.join(CharSequence,CharSequence[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '_'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getSelectorId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getSelectorId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/utils/CacheKeyUtilsTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/utils/CacheKeyUtilsTest.java",
        "name": "org.apache.shenyu.plugin.base.utils.CacheKeyUtilsTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "RuleData ruleData = RuleData.builder().selectorId(MOCK_SELECTOR_ID).name(MOCK_NAME).build();",
                "type": "DELETE",
                "lineNo": 36
              }
            ],
            "targetChanges": [
              {
                "line": "RuleData ruleData = RuleData.builder().selectorId(MOCK_SELECTOR_ID).id(MOCK_NAME).build();",
                "type": "ADD",
                "lineNo": 36
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.RuleData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData$Builder.name(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData$Builder.selectorId(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.RuleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData$Builder.selectorId(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MOCK_SELECTOR_ID"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData$Builder.name(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MOCK_NAME"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData$Builder.build()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.RuleData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData$Builder.id(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData$Builder.selectorId(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.RuleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData$Builder.selectorId(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MOCK_SELECTOR_ID"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData$Builder.id(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MOCK_NAME"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData$Builder.build()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-general-context/src/test/java/org/apache/shenyu/plugin/general/context/handler/GeneralContextPluginHandlerTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-general-context/src/test/java/org/apache/shenyu/plugin/general/context/handler/GeneralContextPluginHandlerTest.java",
        "name": "org.apache.shenyu.plugin.general.context.handler.GeneralContextPluginHandlerTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ruleData.setName(\"test\");",
                "type": "DELETE",
                "lineNo": 63
              }
            ],
            "targetChanges": [
              {
                "line": "ruleData.setId(\"test\");",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-request/src/test/java/org/apache/shenyu/plugin/request/handler/RequestPluginHandlerTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-request/src/test/java/org/apache/shenyu/plugin/request/handler/RequestPluginHandlerTest.java",
        "name": "org.apache.shenyu.plugin.request.handler.RequestPluginHandlerTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ruleData.setName(\"test\");",
                "type": "DELETE",
                "lineNo": 66
              }
            ],
            "targetChanges": [
              {
                "line": "ruleData.setId(\"test\");",
                "type": "ADD",
                "lineNo": 66
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/test/java/org/apache/shenyu/plugin/resilience4j/Resilience4JPluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/test/java/org/apache/shenyu/plugin/resilience4j/Resilience4JPluginTest.java",
        "name": "org.apache.shenyu.plugin.resilience4j.Resilience4JPluginTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(data.getName()).thenReturn(\"ruleData\");",
                "type": "DELETE",
                "lineNo": 136
              }
            ],
            "targetChanges": [
              {
                "line": "when(data.getId()).thenReturn(\"ruleData\");",
                "type": "ADD",
                "lineNo": 136
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData data"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ruleData'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData data"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ruleData'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/test/java/org/apache/shenyu/plugin/resilience4j/handler/Resilience4JHandlerTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/test/java/org/apache/shenyu/plugin/resilience4j/handler/Resilience4JHandlerTest.java",
        "name": "org.apache.shenyu.plugin.resilience4j.handler.Resilience4JHandlerTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ruleData.setName(\"test\");",
                "type": "DELETE",
                "lineNo": 41
              }
            ],
            "targetChanges": [
              {
                "line": "ruleData.setId(\"test\");",
                "type": "ADD",
                "lineNo": 41
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ruleData.setName(\"test\");",
                "type": "DELETE",
                "lineNo": 51
              }
            ],
            "targetChanges": [
              {
                "line": "ruleData.setId(\"test\");",
                "type": "ADD",
                "lineNo": 51
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-rewrite/src/test/java/org/apache/shenyu/plugin/rewrite/handler/RewritePluginDataHandlerTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-rewrite/src/test/java/org/apache/shenyu/plugin/rewrite/handler/RewritePluginDataHandlerTest.java",
        "name": "org.apache.shenyu.plugin.rewrite.handler.RewritePluginDataHandlerTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ruleData.setName(\"test\");",
                "type": "DELETE",
                "lineNo": 41
              }
            ],
            "targetChanges": [
              {
                "line": "ruleData.setId(\"test\");",
                "type": "ADD",
                "lineNo": 41
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ruleData.setName(\"test\");",
                "type": "DELETE",
                "lineNo": 51
              }
            ],
            "targetChanges": [
              {
                "line": "ruleData.setId(\"test\");",
                "type": "ADD",
                "lineNo": 51
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-sentinel/src/test/java/org/apache/shenyu/plugin/sentinel/handler/SentinelRuleHandleTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-sentinel/src/test/java/org/apache/shenyu/plugin/sentinel/handler/SentinelRuleHandleTest.java",
        "name": "org.apache.shenyu.plugin.sentinel.handler.SentinelRuleHandleTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "data.setName(\"removeRule\");",
                "type": "DELETE",
                "lineNo": 57
              }
            ],
            "targetChanges": [
              {
                "line": "data.setId(\"removeRule\");",
                "type": "ADD",
                "lineNo": 57
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData data"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'removeRule'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData data"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'removeRule'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-springcloud/src/test/java/org/apache/shenyu/plugin/springcloud/handler/SpringCloudPluginDataHandlerTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-springcloud/src/test/java/org/apache/shenyu/plugin/springcloud/handler/SpringCloudPluginDataHandlerTest.java",
        "name": "org.apache.shenyu.plugin.springcloud.handler.SpringCloudPluginDataHandlerTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ruleData.setName(\"test\");",
                "type": "DELETE",
                "lineNo": 100
              }
            ],
            "targetChanges": [
              {
                "line": "ruleData.setId(\"test\");",
                "type": "ADD",
                "lineNo": 100
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ruleData.setName(\"test\");",
                "type": "DELETE",
                "lineNo": 110
              }
            ],
            "targetChanges": [
              {
                "line": "ruleData.setId(\"test\");",
                "type": "ADD",
                "lineNo": 110
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Assertions.assertEquals(cache.get().obtainHandle(\"1_test\"), null);",
                "type": "DELETE",
                "lineNo": 115
              }
            ],
            "targetChanges": [
              {
                "line": "Assertions.assertNull(cache.get().obtainHandle(\"1_test\"));",
                "type": "ADD",
                "lineNo": 115
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(org.apache.shenyu.common.dto.convert.rule.impl.SpringCloudRuleHandle,<unknown>)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.jupiter.api.Assertions"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(org.apache.shenyu.common.dto.convert.rule.impl.SpringCloudRuleHandle,<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.obtainHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Supplier cache"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.obtainHandle(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '1_test'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertNull(org.apache.shenyu.common.dto.convert.rule.impl.SpringCloudRuleHandle)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.jupiter.api.Assertions"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNull(org.apache.shenyu.common.dto.convert.rule.impl.SpringCloudRuleHandle)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.obtainHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Supplier cache"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonHandleCache.obtainHandle(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '1_test'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-websocket/src/test/java/org/apache/shenyu/plugin/websocket/handler/WebSocketPluginDataHandlerTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-websocket/src/test/java/org/apache/shenyu/plugin/websocket/handler/WebSocketPluginDataHandlerTest.java",
        "name": "org.apache.shenyu.plugin.websocket.handler.WebSocketPluginDataHandlerTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ruleData.setName(\"test\");",
                "type": "DELETE",
                "lineNo": 61
              }
            ],
            "targetChanges": [
              {
                "line": "ruleData.setId(\"test\");",
                "type": "ADD",
                "lineNo": 61
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setName(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.setId(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "a3afd786d",
    "aCommit": "f86a01fe1",
    "changes": [
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/utils/LogUtils.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/utils/LogUtils.java",
        "name": "org.apache.shenyu.common.utils.LogUtils",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private static final LogUtils LOG_UTIL = new LogUtils();",
                "type": "DELETE",
                "lineNo": 30
              },
              {
                "line": "private LogUtils() {",
                "type": "DELETE",
                "lineNo": 32
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 34
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "org.apache.shenyu.common.utils.LogUtils LOG_UTIL"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.utils.LogUtils"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.utils.LogUtils.LogUtils()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.utils.LogUtils"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.common.utils.LogUtils.LogUtils()"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* getInstance.",
                "type": "DELETE",
                "lineNo": 37
              },
              {
                "line": "* @return LogUtils",
                "type": "DELETE",
                "lineNo": 38
              }
            ],
            "targetChanges": [
              {
                "line": "* debug log.",
                "type": "ADD",
                "lineNo": 30
              },
              {
                "line": "* @param logger   logger",
                "type": "ADD",
                "lineNo": 31
              },
              {
                "line": "* @param format   format",
                "type": "ADD",
                "lineNo": 32
              },
              {
                "line": "* @param supplier {@linkplain Supplier}",
                "type": "ADD",
                "lineNo": 33
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public static LogUtils getInstance() {",
                "type": "DELETE",
                "lineNo": 40
              },
              {
                "line": "return LOG_UTIL;",
                "type": "DELETE",
                "lineNo": 41
              }
            ],
            "targetChanges": [
              {
                "line": "public static void debug(final Logger logger, final String format, final Supplier<Object> supplier) {",
                "type": "ADD",
                "lineNo": 35
              },
              {
                "line": "if (logger.isDebugEnabled()) {",
                "type": "ADD",
                "lineNo": 36
              },
              {
                "line": "logger.debug(format, supplier.get());",
                "type": "ADD",
                "lineNo": 37
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.utils.LogUtils.getInstance()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.utils.LogUtils"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.utils.LogUtils LOG_UTIL"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.utils.LogUtils.debug(Logger,String,Supplier)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String format"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.function.Supplier supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.isDebugEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.isDebugEnabled()"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.debug(String,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.debug(String,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String format"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Supplier supplier"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "* @param supplier {@linkplain Supplier}",
                "type": "DELETE",
                "lineNo": 48
              }
            ],
            "targetChanges": [
              {
                "line": "* @param objects objects",
                "type": "ADD",
                "lineNo": 45
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public static void debug(final Logger logger, final String format, final Supplier<Object> supplier) {",
                "type": "DELETE",
                "lineNo": 50
              }
            ],
            "targetChanges": [
              {
                "line": "public static void debug(final Logger logger, final String format, final Object... objects) {",
                "type": "ADD",
                "lineNo": 47
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.utils.LogUtils.debug(Logger,String,Supplier)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String format"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.function.Supplier supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.utils.LogUtils.debug(Logger,String,Object[])"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String format"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "Object[] objects"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "Object[]"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "logger.debug(format, supplier.get());",
                "type": "DELETE",
                "lineNo": 52
              }
            ],
            "targetChanges": [
              {
                "line": "logger.debug(format, objects);",
                "type": "ADD",
                "lineNo": 49
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.debug(String,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.debug(String,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String format"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Supplier supplier"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.debug(String,Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.debug(String,Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String format"
              },
              {
                "type": "CtVariableRead",
                "value": "Object[] objects"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "* @param format   format",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "* @param objects objects",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "public static void info(final Logger logger, final String format, final Object... objects) {",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "if (logger.isInfoEnabled()) {",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "logger.info(format, objects);",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "* info log.",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "* @param logger   logger",
                "type": "ADD",
                "lineNo": 93
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.utils.LogUtils.info(Logger,String,Object[])"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String format"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "Object[] objects"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "Object[]"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.isInfoEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.isInfoEnabled()"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String format"
              },
              {
                "type": "CtVariableRead",
                "value": "Object[] objects"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "* @param format   format",
                "type": "ADD",
                "lineNo": 119
              },
              {
                "line": "* @param objects objects",
                "type": "ADD",
                "lineNo": 120
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 121
              },
              {
                "line": "public static void error(final Logger logger, final String format, final Object... objects) {",
                "type": "ADD",
                "lineNo": 122
              },
              {
                "line": "if (logger.isErrorEnabled()) {",
                "type": "ADD",
                "lineNo": 123
              },
              {
                "line": "logger.error(format, objects);",
                "type": "ADD",
                "lineNo": 124
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 125
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 126
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 128
              },
              {
                "line": "* error log.",
                "type": "ADD",
                "lineNo": 129
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 130
              },
              {
                "line": "* @param logger   logger",
                "type": "ADD",
                "lineNo": 131
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.utils.LogUtils.error(Logger,String,Object[])"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String format"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "Object[] objects"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "Object[]"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.isErrorEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.isErrorEnabled()"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String format"
              },
              {
                "type": "CtVariableRead",
                "value": "Object[] objects"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "* @param format   format",
                "type": "ADD",
                "lineNo": 157
              },
              {
                "line": "* @param objects objects",
                "type": "ADD",
                "lineNo": 158
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 159
              },
              {
                "line": "public static void warn(final Logger logger, final String format, final Object... objects) {",
                "type": "ADD",
                "lineNo": 160
              },
              {
                "line": "if (logger.isWarnEnabled()) {",
                "type": "ADD",
                "lineNo": 161
              },
              {
                "line": "logger.warn(format, objects);",
                "type": "ADD",
                "lineNo": 162
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 163
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 164
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 166
              },
              {
                "line": "* warn log.",
                "type": "ADD",
                "lineNo": 167
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 168
              },
              {
                "line": "* @param logger   logger",
                "type": "ADD",
                "lineNo": 169
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.utils.LogUtils.warn(Logger,String,Object[])"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String format"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "Object[] objects"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "Object[]"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.isWarnEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.isWarnEnabled()"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.warn(String,Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.warn(String,Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String format"
              },
              {
                "type": "CtVariableRead",
                "value": "Object[] objects"
              }
            ]
          },
          {
            "targetChanges": [],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/test/java/org/apache/shenyu/common/utils/LogUtilsTest.java",
        "aPath": "shenyu-common/src/test/java/org/apache/shenyu/common/utils/LogUtilsTest.java",
        "name": "org.apache.shenyu.common.utils.LogUtilsTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public void testGetInstance() {",
                "type": "DELETE",
                "lineNo": 51
              },
              {
                "line": "final LogUtils result = LogUtils.getInstance();",
                "type": "DELETE",
                "lineNo": 52
              },
              {
                "line": "Assert.assertNotNull(result);",
                "type": "DELETE",
                "lineNo": 53
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 54
              },
              {
                "line": "@Test",
                "type": "DELETE",
                "lineNo": 56
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.utils.LogUtilsTest.testGetInstance()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.utils.LogUtils result"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.utils.LogUtils"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.LogUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.LogUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.LogUtils.getInstance()"
              },
              {
                "type": "CtInvocation",
                "value": "assertNotNull(org.apache.shenyu.common.utils.LogUtils)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(org.apache.shenyu.common.utils.LogUtils)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.utils.LogUtils result"
              },
              {
                "type": "CtAnnotation",
                "value": "org.junit.Test"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-consul/src/main/java/org/apache/shenyu/register/client/consul/ConsulClientRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-consul/src/main/java/org/apache/shenyu/register/client/consul/ConsulClientRegisterRepository.java",
        "name": "org.apache.shenyu.register.client.consul.ConsulClientRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 33
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "private static final Logger LOGGER = LoggerFactory.getLogger(ConsulClientRegisterRepository.class);",
                "type": "ADD",
                "lineNo": 37
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(\"{} Consul client register success: {}\", rpcType, metadata);",
                "type": "DELETE",
                "lineNo": 50
              }
            ],
            "targetChanges": [
              {
                "line": "LogUtils.info(LOGGER, \"{} Consul client register success: {}\", rpcType, metadata);",
                "type": "ADD",
                "lineNo": 53
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String,java.lang.String,org.apache.shenyu.register.common.dto.MetaDataRegisterDTO)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.consul.ConsulClientRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String,java.lang.String,org.apache.shenyu.register.common.dto.MetaDataRegisterDTO)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{} Consul client register success: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metadata"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.LogUtils.info(Logger,String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.LogUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.LogUtils.info(Logger,String,Object[])"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{} Consul client register success: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metadata"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-etcd/src/main/java/org/apache/shenyu/register/client/etcd/EtcdClient.java",
        "aPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-etcd/src/main/java/org/apache/shenyu/register/client/etcd/EtcdClient.java",
        "name": "org.apache.shenyu.register.client.etcd.EtcdClient",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 37
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private static final Logger LOGGER = LoggerFactory.getLogger(EtcdClient.class);",
                "type": "ADD",
                "lineNo": 42
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.error(\"keep alive error\", throwable);",
                "type": "DELETE",
                "lineNo": 68
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.error(\"keep alive error\", throwable);",
                "type": "ADD",
                "lineNo": 70
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "error(java.lang.String,java.lang.Throwable)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.etcd.EtcdClient$1 log"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.String,java.lang.Throwable)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'keep alive error'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Throwable throwable"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Throwable)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Throwable)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'keep alive error'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Throwable throwable"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.error(\"initLease error.\", e);",
                "type": "DELETE",
                "lineNo": 77
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.error(\"initLease error.\", e);",
                "type": "ADD",
                "lineNo": 79
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "error(java.lang.String,java.lang.Exception)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.etcd.EtcdClient log"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.String,java.lang.Exception)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'initLease error.'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Throwable)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Throwable)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'initLease error.'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.error(\"putEphemeral(key:{},value:{}) error.\", key, value, e);",
                "type": "DELETE",
                "lineNo": 100
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.error(\"putEphemeral(key:{},value:{}) error.\", key, value, e);",
                "type": "ADD",
                "lineNo": 102
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "error(java.lang.String,java.lang.String,java.lang.String,java.lang.Exception)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.etcd.EtcdClient log"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.String,java.lang.String,java.lang.String,java.lang.Exception)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'putEphemeral(key:{},value:{}) error.'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String value"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object[])"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'putEphemeral(key:{},value:{}) error.'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String value"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-etcd/src/main/java/org/apache/shenyu/register/client/etcd/EtcdClientRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-etcd/src/main/java/org/apache/shenyu/register/client/etcd/EtcdClientRegisterRepository.java",
        "name": "org.apache.shenyu.register.client.etcd.EtcdClientRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 35
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private static final Logger LOGGER = LoggerFactory.getLogger(EtcdClientRegisterRepository.class);",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(\"register metadata success: {}\", realNode);",
                "type": "DELETE",
                "lineNo": 68
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(\"register metadata success: {}\", realNode);",
                "type": "ADD",
                "lineNo": 70
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.etcd.EtcdClientRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'register metadata success: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String realNode"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'register metadata success: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String realNode"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(\"register uri data success: {}\", realNode);",
                "type": "DELETE",
                "lineNo": 76
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(\"register uri data success: {}\", realNode);",
                "type": "ADD",
                "lineNo": 78
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.etcd.EtcdClientRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'register uri data success: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String realNode"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'register uri data success: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String realNode"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-http/src/main/java/org/apache/shenyu/register/client/http/HttpClientRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-http/src/main/java/org/apache/shenyu/register/client/http/HttpClientRegisterRepository.java",
        "name": "org.apache.shenyu.register.client.http.HttpClientRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 38
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private static final Logger LOGGER = LoggerFactory.getLogger(RegisterUtils.class);",
                "type": "ADD",
                "lineNo": 42
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.error(\"register admin url :{} is fail, will retry\", server);",
                "type": "DELETE",
                "lineNo": 72
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.error(\"register admin url :{} is fail, will retry\", server);",
                "type": "ADD",
                "lineNo": 74
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "error(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.http.HttpClientRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'register admin url :{} is fail, will retry'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String server"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'register admin url :{} is fail, will retry'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String server"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-http/src/main/java/org/apache/shenyu/register/client/http/utils/RegisterUtils.java",
        "aPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-http/src/main/java/org/apache/shenyu/register/client/http/utils/RegisterUtils.java",
        "name": "org.apache.shenyu.register.client.http.utils.RegisterUtils",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 27
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private static final Logger LOGGER = LoggerFactory.getLogger(RegisterUtils.class);",
                "type": "ADD",
                "lineNo": 30
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(\"{} client register success: {} \", rpcType, json);",
                "type": "DELETE",
                "lineNo": 44
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(\"{} client register success: {} \", rpcType, json);",
                "type": "ADD",
                "lineNo": 46
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.http.utils.RegisterUtils log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{} client register success: {} '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String json"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{} client register success: {} '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String json"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.error(\"{} client register error: {} \", rpcType, json);",
                "type": "DELETE",
                "lineNo": 46
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.error(\"{} client register error: {} \", rpcType, json);",
                "type": "ADD",
                "lineNo": 48
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "error(java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.http.utils.RegisterUtils log"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{} client register error: {} '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String json"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{} client register error: {} '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String json"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-http/src/test/java/org/apache/shenyu/register/client/http/RegisterUtilsTest.java",
        "aPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-http/src/test/java/org/apache/shenyu/register/client/http/RegisterUtilsTest.java",
        "name": "org.apache.shenyu.register.client.http.RegisterUtilsTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 73
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public void testDoRegisterWhenSuccess() {",
                "type": "DELETE",
                "lineNo": 75
              }
            ],
            "targetChanges": [
              {
                "line": "public void testDoRegisterWhenSuccess() throws IOException {",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.client.http.RegisterUtilsTest.testDoRegisterWhenSuccess()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.client.http.RegisterUtilsTest.testDoRegisterWhenSuccess()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.IOException"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 85
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public void testDoRegisterWhenError() {",
                "type": "DELETE",
                "lineNo": 87
              }
            ],
            "targetChanges": [
              {
                "line": "public void testDoRegisterWhenError() throws IOException {",
                "type": "ADD",
                "lineNo": 84
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.client.http.RegisterUtilsTest.testDoRegisterWhenError()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.client.http.RegisterUtilsTest.testDoRegisterWhenError()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.IOException"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 96
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public void testDoRegisterWhenThrowException() {",
                "type": "DELETE",
                "lineNo": 98
              }
            ],
            "targetChanges": [
              {
                "line": "public void testDoRegisterWhenThrowException() throws IOException {",
                "type": "ADD",
                "lineNo": 94
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.client.http.RegisterUtilsTest.testDoRegisterWhenThrowException()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.client.http.RegisterUtilsTest.testDoRegisterWhenThrowException()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.IOException"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-nacos/src/main/java/org/apache/shenyu/register/client/nacos/NacosClientRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-nacos/src/main/java/org/apache/shenyu/register/client/nacos/NacosClientRegisterRepository.java",
        "name": "org.apache.shenyu.register.client.nacos.NacosClientRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 47
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private static final Logger LOGGER = LoggerFactory.getLogger(NacosClientRegisterRepository.class);",
                "type": "ADD",
                "lineNo": 50
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 60
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "this.configService = ConfigFactory.createConfigService(nacosProperties);",
                "type": "DELETE",
                "lineNo": 78
              },
              {
                "line": "this.namingService = NamingFactory.createNamingService(nacosProperties);",
                "type": "DELETE",
                "lineNo": 79
              }
            ],
            "targetChanges": [
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "this.configService = ConfigFactory.createConfigService(nacosProperties);",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "this.namingService = NamingFactory.createNamingService(nacosProperties);",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "} catch (NacosException e) {",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "throw new ShenyuException(e);",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 84
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtFieldWrite",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtInvocation",
                "value": "createConfigService(java.util.Properties)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.nacos.api.config.ConfigFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "createConfigService(java.util.Properties)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties nacosProperties"
              },
              {
                "type": "CtFieldWrite",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtInvocation",
                "value": "createNamingService(java.util.Properties)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.nacos.api.naming.NamingFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "createNamingService(java.util.Properties)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties nacosProperties"
              }
            ],
            "targetElements": [
              {
                "type": "CtFieldWrite",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtInvocation",
                "value": "createConfigService(java.util.Properties)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.nacos.api.config.ConfigFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "createConfigService(java.util.Properties)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties nacosProperties"
              },
              {
                "type": "CtFieldWrite",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtInvocation",
                "value": "createNamingService(java.util.Properties)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.nacos.api.naming.NamingFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "createNamingService(java.util.Properties)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties nacosProperties"
              },
              {
                "type": "CtCatchVariable",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.exception.NacosException"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.error(\"NacosClientRegisterRepository close error!\", e);",
                "type": "DELETE",
                "lineNo": 88
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.error(\"NacosClientRegisterRepository close error!\", e);",
                "type": "ADD",
                "lineNo": 93
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "error(java.lang.String,com.alibaba.nacos.api.exception.NacosException)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.nacos.NacosClientRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.String,com.alibaba.nacos.api.exception.NacosException)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'NacosClientRegisterRepository close error!'"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'NacosClientRegisterRepository close error!'"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 103
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "namingService.registerInstance(serviceName, instance);",
                "type": "DELETE",
                "lineNo": 122
              }
            ],
            "targetChanges": [
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 126
              },
              {
                "line": "namingService.registerInstance(serviceName, instance);",
                "type": "ADD",
                "lineNo": 127
              },
              {
                "line": "} catch (NacosException e) {",
                "type": "ADD",
                "lineNo": 128
              },
              {
                "line": "throw new ShenyuException(e);",
                "type": "ADD",
                "lineNo": 129
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 130
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "registerInstance(java.lang.String,com.alibaba.nacos.api.naming.pojo.Instance)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtExecutableReference",
                "value": "registerInstance(java.lang.String,com.alibaba.nacos.api.naming.pojo.Instance)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance instance"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "registerInstance(java.lang.String,com.alibaba.nacos.api.naming.pojo.Instance)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtExecutableReference",
                "value": "registerInstance(java.lang.String,com.alibaba.nacos.api.naming.pojo.Instance)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance instance"
              },
              {
                "type": "CtCatchVariable",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.exception.NacosException"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(\"register service success: {}\", serviceName);",
                "type": "DELETE",
                "lineNo": 124
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(\"register service success: {}\", serviceName);",
                "type": "ADD",
                "lineNo": 132
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.nacos.NacosClientRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'register service success: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'register service success: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 127
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "configService.publishConfig(configName, defaultGroup, GsonUtils.getInstance().toJson(metadataCache));",
                "type": "DELETE",
                "lineNo": 133
              }
            ],
            "targetChanges": [
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 140
              },
              {
                "line": "configService.publishConfig(configName, defaultGroup, GsonUtils.getInstance().toJson(metadataCache));",
                "type": "ADD",
                "lineNo": 141
              },
              {
                "line": "} catch (NacosException e) {",
                "type": "ADD",
                "lineNo": 142
              },
              {
                "line": "throw new ShenyuException(e);",
                "type": "ADD",
                "lineNo": 143
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 144
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "publishConfig(java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtExecutableReference",
                "value": "publishConfig(java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String configName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String defaultGroup"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentLinkedQueue metadataCache"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "publishConfig(java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtExecutableReference",
                "value": "publishConfig(java.lang.String,java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String configName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String defaultGroup"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentLinkedQueue metadataCache"
              },
              {
                "type": "CtCatchVariable",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.exception.NacosException"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(\"register metadata success: {}\", metadata.getRuleName());",
                "type": "DELETE",
                "lineNo": 135
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(\"register metadata success: {}\", metadata.getRuleName());",
                "type": "ADD",
                "lineNo": 146
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.nacos.NacosClientRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'register metadata success: {}'"
              },
              {
                "type": "CtInvocation",
                "value": "getRuleName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metadata"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRuleName()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'register metadata success: {}'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metadata"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-zookeeper/src/main/java/org/apache/shenyu/register/client/zookeeper/ZookeeperClientRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-zookeeper/src/main/java/org/apache/shenyu/register/client/zookeeper/ZookeeperClientRegisterRepository.java",
        "name": "org.apache.shenyu.register.client.zookeeper.ZookeeperClientRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 41
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private static final Logger LOGGER = LoggerFactory.getLogger(ZookeeperClientRegisterRepository.class);",
                "type": "ADD",
                "lineNo": 44
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(\"{} zookeeper client register success: {}\", rpcType, metadata);",
                "type": "DELETE",
                "lineNo": 65
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(\"{} zookeeper client register success: {}\", rpcType, metadata);",
                "type": "ADD",
                "lineNo": 67
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String,java.lang.String,org.apache.shenyu.register.common.dto.MetaDataRegisterDTO)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.zookeeper.ZookeeperClientRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String,java.lang.String,org.apache.shenyu.register.common.dto.MetaDataRegisterDTO)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{} zookeeper client register success: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metadata"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{} zookeeper client register success: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metadata"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(\"zookeeper client register success: {}\", v);",
                "type": "DELETE",
                "lineNo": 125
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(\"zookeeper client register success: {}\", v);",
                "type": "ADD",
                "lineNo": 127
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.zookeeper.ZookeeperClientRegisterRepository$ZkStateListener log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'zookeeper client register success: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String v"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'zookeeper client register success: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String v"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-common/src/main/java/org/apache/shenyu/register/common/config/ShenyuRegisterCenterConfig.java",
        "aPath": "shenyu-register-center/shenyu-register-common/src/main/java/org/apache/shenyu/register/common/config/ShenyuRegisterCenterConfig.java",
        "name": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Getter",
                "type": "DELETE",
                "lineNo": 28
              },
              {
                "line": "@Setter",
                "type": "DELETE",
                "lineNo": 29
              },
              {
                "line": "@RequiredArgsConstructor",
                "type": "DELETE",
                "lineNo": 30
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.Getter"
              },
              {
                "type": "CtAnnotation",
                "value": "lombok.Setter"
              },
              {
                "type": "CtAnnotation",
                "value": "lombok.RequiredArgsConstructor"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "public ShenyuRegisterCenterConfig() {",
                "type": "ADD",
                "lineNo": 33
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 34
              },
              {
                "line": "public ShenyuRegisterCenterConfig(final String registerType, final String serverLists, final Properties props) {",
                "type": "ADD",
                "lineNo": 36
              },
              {
                "line": "this.registerType = registerType;",
                "type": "ADD",
                "lineNo": 37
              },
              {
                "line": "this.serverLists = serverLists;",
                "type": "ADD",
                "lineNo": 38
              },
              {
                "line": "this.props = props;",
                "type": "ADD",
                "lineNo": 39
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 40
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 42
              },
              {
                "line": "* getRegisterType.",
                "type": "ADD",
                "lineNo": 43
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 44
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 45
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 46
              },
              {
                "line": "public String getRegisterType() {",
                "type": "ADD",
                "lineNo": 47
              },
              {
                "line": "return registerType;",
                "type": "ADD",
                "lineNo": 48
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "* setRegisterType.",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 53
              },
              {
                "line": "* @param registerType registerType",
                "type": "ADD",
                "lineNo": 54
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 55
              },
              {
                "line": "public void setRegisterType(final String registerType) {",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "this.registerType = registerType;",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 58
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 60
              },
              {
                "line": "* getServerLists.",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 63
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 64
              },
              {
                "line": "public String getServerLists() {",
                "type": "ADD",
                "lineNo": 65
              },
              {
                "line": "return serverLists;",
                "type": "ADD",
                "lineNo": 66
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 67
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 69
              },
              {
                "line": "* setServerLists.",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "* @param serverLists serverLists",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "public void setServerLists(final String serverLists) {",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "this.serverLists = serverLists;",
                "type": "ADD",
                "lineNo": 75
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 76
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": "* getProps.",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "public Properties getProps() {",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "return props;",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "* setProps.",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "* @param props props",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "public void setProps(final Properties props) {",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "this.props = props;",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 94
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.ShenyuRegisterCenterConfig()"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.ShenyuRegisterCenterConfig(String,String,Properties)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.getRegisterType()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.setRegisterType(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.getServerLists()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.setServerLists(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.getProps()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.config.ShenyuRegisterCenterConfig.setProps(Properties)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-common/src/main/java/org/apache/shenyu/register/common/dto/MetaDataRegisterDTO.java",
        "aPath": "shenyu-register-center/shenyu-register-common/src/main/java/org/apache/shenyu/register/common/dto/MetaDataRegisterDTO.java",
        "name": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Data",
                "type": "DELETE",
                "lineNo": 34
              },
              {
                "line": "@Builder",
                "type": "DELETE",
                "lineNo": 35
              },
              {
                "line": "@NoArgsConstructor",
                "type": "DELETE",
                "lineNo": 36
              },
              {
                "line": "@AllArgsConstructor",
                "type": "DELETE",
                "lineNo": 37
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.Data"
              },
              {
                "type": "CtAnnotation",
                "value": "lombok.Builder"
              },
              {
                "type": "CtAnnotation",
                "value": "lombok.NoArgsConstructor"
              },
              {
                "type": "CtAnnotation",
                "value": "lombok.AllArgsConstructor"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "public MetaDataRegisterDTO(final String appName, final String contextPath,",
                "type": "ADD",
                "lineNo": 65
              },
              {
                "line": "final String path, final String pathDesc,",
                "type": "ADD",
                "lineNo": 66
              },
              {
                "line": "final String rpcType, final String serviceName,",
                "type": "ADD",
                "lineNo": 67
              },
              {
                "line": "final String methodName, final String ruleName,",
                "type": "ADD",
                "lineNo": 68
              },
              {
                "line": "final String parameterTypes, final String rpcExt,",
                "type": "ADD",
                "lineNo": 69
              },
              {
                "line": "final boolean enabled, final String host,",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "final Integer port, final List<String> pluginNames,",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "final boolean registerMetaData) {",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "this.appName = appName;",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "this.contextPath = contextPath;",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "this.path = path;",
                "type": "ADD",
                "lineNo": 75
              },
              {
                "line": "this.pathDesc = pathDesc;",
                "type": "ADD",
                "lineNo": 76
              },
              {
                "line": "this.rpcType = rpcType;",
                "type": "ADD",
                "lineNo": 77
              },
              {
                "line": "this.serviceName = serviceName;",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": "this.methodName = methodName;",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "this.ruleName = ruleName;",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "this.parameterTypes = parameterTypes;",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "this.rpcExt = rpcExt;",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "this.enabled = enabled;",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "this.host = host;",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "this.port = port;",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "this.pluginNames = pluginNames;",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "this.registerMetaData = registerMetaData;",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "public MetaDataRegisterDTO() {",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "private MetaDataRegisterDTO(final Builder builder) {",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "appName = builder.appName;",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "contextPath = builder.contextPath;",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "path = builder.path;",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "pathDesc = builder.pathDesc;",
                "type": "ADD",
                "lineNo": 97
              },
              {
                "line": "rpcType = builder.rpcType;",
                "type": "ADD",
                "lineNo": 98
              },
              {
                "line": "serviceName = builder.serviceName;",
                "type": "ADD",
                "lineNo": 99
              },
              {
                "line": "methodName = builder.methodName;",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": "ruleName = builder.ruleName;",
                "type": "ADD",
                "lineNo": 101
              },
              {
                "line": "parameterTypes = builder.parameterTypes;",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "rpcExt = builder.rpcExt;",
                "type": "ADD",
                "lineNo": 103
              },
              {
                "line": "enabled = builder.enabled;",
                "type": "ADD",
                "lineNo": 104
              },
              {
                "line": "host = builder.host;",
                "type": "ADD",
                "lineNo": 105
              },
              {
                "line": "port = builder.port;",
                "type": "ADD",
                "lineNo": 106
              },
              {
                "line": "pluginNames = builder.pluginNames;",
                "type": "ADD",
                "lineNo": 107
              },
              {
                "line": "registerMetaData = builder.registerMetaData;",
                "type": "ADD",
                "lineNo": 108
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 109
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 111
              },
              {
                "line": "* builder.",
                "type": "ADD",
                "lineNo": 112
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 113
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 114
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 115
              },
              {
                "line": "public static Builder builder() {",
                "type": "ADD",
                "lineNo": 116
              },
              {
                "line": "return new Builder();",
                "type": "ADD",
                "lineNo": 117
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 118
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.MetaDataRegisterDTO(String,String,String,String,String,String,String,String,String,String,boolean,String,Integer,List,boolean)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String pathDesc"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "boolean enabled"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String host"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List pluginNames"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "boolean registerMetaData"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String path"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String pathDesc"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pathDesc"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtFieldWrite",
                "value": "boolean enabled"
              },
              {
                "type": "CtVariableRead",
                "value": "boolean enabled"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String host"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String host"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.util.List pluginNames"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List pluginNames"
              },
              {
                "type": "CtFieldWrite",
                "value": "boolean registerMetaData"
              },
              {
                "type": "CtVariableRead",
                "value": "boolean registerMetaData"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.MetaDataRegisterDTO()"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.MetaDataRegisterDTO(Builder)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String path"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String pathDesc"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String pathDesc"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "boolean enabled"
              },
              {
                "type": "CtFieldRead",
                "value": "boolean enabled"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String host"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String host"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.util.List pluginNames"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.List pluginNames"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "boolean registerMetaData"
              },
              {
                "type": "CtFieldRead",
                "value": "boolean registerMetaData"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder builder"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.builder()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.Builder()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 125
              },
              {
                "line": "* getAppName.",
                "type": "ADD",
                "lineNo": 126
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 127
              },
              {
                "line": "* @return String of appName",
                "type": "ADD",
                "lineNo": 128
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 129
              },
              {
                "line": "public String getAppName() {",
                "type": "ADD",
                "lineNo": 130
              },
              {
                "line": "return appName;",
                "type": "ADD",
                "lineNo": 131
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 132
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 134
              },
              {
                "line": "* setAppName.",
                "type": "ADD",
                "lineNo": 135
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 136
              },
              {
                "line": "* @param appName appName",
                "type": "ADD",
                "lineNo": 137
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 138
              },
              {
                "line": "public void setAppName(final String appName) {",
                "type": "ADD",
                "lineNo": 139
              },
              {
                "line": "this.appName = appName;",
                "type": "ADD",
                "lineNo": 140
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 141
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 143
              },
              {
                "line": "* getContextPath.",
                "type": "ADD",
                "lineNo": 144
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 145
              },
              {
                "line": "* @return String of contextPath",
                "type": "ADD",
                "lineNo": 146
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 147
              },
              {
                "line": "public String getContextPath() {",
                "type": "ADD",
                "lineNo": 148
              },
              {
                "line": "return contextPath;",
                "type": "ADD",
                "lineNo": 149
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 150
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 152
              },
              {
                "line": "* setContextPath.",
                "type": "ADD",
                "lineNo": 153
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 154
              },
              {
                "line": "* @param contextPath contextPath",
                "type": "ADD",
                "lineNo": 155
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 156
              },
              {
                "line": "public void setContextPath(final String contextPath) {",
                "type": "ADD",
                "lineNo": 157
              },
              {
                "line": "this.contextPath = contextPath;",
                "type": "ADD",
                "lineNo": 158
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 159
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 161
              },
              {
                "line": "* getPath.",
                "type": "ADD",
                "lineNo": 162
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 163
              },
              {
                "line": "* @return String of path",
                "type": "ADD",
                "lineNo": 164
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 165
              },
              {
                "line": "public String getPath() {",
                "type": "ADD",
                "lineNo": 166
              },
              {
                "line": "return path;",
                "type": "ADD",
                "lineNo": 167
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 168
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 170
              },
              {
                "line": "* setPath.",
                "type": "ADD",
                "lineNo": 171
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 172
              },
              {
                "line": "* @param path path",
                "type": "ADD",
                "lineNo": 173
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 174
              },
              {
                "line": "public void setPath(final String path) {",
                "type": "ADD",
                "lineNo": 175
              },
              {
                "line": "this.path = path;",
                "type": "ADD",
                "lineNo": 176
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 177
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 179
              },
              {
                "line": "* getPathDesc.",
                "type": "ADD",
                "lineNo": 180
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 181
              },
              {
                "line": "* @return String of pathDesc",
                "type": "ADD",
                "lineNo": 182
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 183
              },
              {
                "line": "public String getPathDesc() {",
                "type": "ADD",
                "lineNo": 184
              },
              {
                "line": "return pathDesc;",
                "type": "ADD",
                "lineNo": 185
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 186
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 188
              },
              {
                "line": "* setPath.",
                "type": "ADD",
                "lineNo": 189
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 190
              },
              {
                "line": "* @param pathDesc pathDesc",
                "type": "ADD",
                "lineNo": 191
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 192
              },
              {
                "line": "public void setPathDesc(final String pathDesc) {",
                "type": "ADD",
                "lineNo": 193
              },
              {
                "line": "this.pathDesc = pathDesc;",
                "type": "ADD",
                "lineNo": 194
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 195
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 197
              },
              {
                "line": "* getRpcType.",
                "type": "ADD",
                "lineNo": 198
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 199
              },
              {
                "line": "* @return String of rpcType",
                "type": "ADD",
                "lineNo": 200
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 201
              },
              {
                "line": "public String getRpcType() {",
                "type": "ADD",
                "lineNo": 202
              },
              {
                "line": "return rpcType;",
                "type": "ADD",
                "lineNo": 203
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 204
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 206
              },
              {
                "line": "* setPath.",
                "type": "ADD",
                "lineNo": 207
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 208
              },
              {
                "line": "* @param rpcType rpcType",
                "type": "ADD",
                "lineNo": 209
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 210
              },
              {
                "line": "public void setRpcType(final String rpcType) {",
                "type": "ADD",
                "lineNo": 211
              },
              {
                "line": "this.rpcType = rpcType;",
                "type": "ADD",
                "lineNo": 212
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 213
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 215
              },
              {
                "line": "* getServiceName.",
                "type": "ADD",
                "lineNo": 216
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 217
              },
              {
                "line": "* @return String of serviceName",
                "type": "ADD",
                "lineNo": 218
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 219
              },
              {
                "line": "public String getServiceName() {",
                "type": "ADD",
                "lineNo": 220
              },
              {
                "line": "return serviceName;",
                "type": "ADD",
                "lineNo": 221
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 222
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 224
              },
              {
                "line": "* setPath.",
                "type": "ADD",
                "lineNo": 225
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 226
              },
              {
                "line": "* @param serviceName serviceName",
                "type": "ADD",
                "lineNo": 227
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 228
              },
              {
                "line": "public void setServiceName(final String serviceName) {",
                "type": "ADD",
                "lineNo": 229
              },
              {
                "line": "this.serviceName = serviceName;",
                "type": "ADD",
                "lineNo": 230
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 231
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 233
              },
              {
                "line": "* getMethodName.",
                "type": "ADD",
                "lineNo": 234
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 235
              },
              {
                "line": "* @return String of methodName",
                "type": "ADD",
                "lineNo": 236
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 237
              },
              {
                "line": "public String getMethodName() {",
                "type": "ADD",
                "lineNo": 238
              },
              {
                "line": "return methodName;",
                "type": "ADD",
                "lineNo": 239
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 240
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 242
              },
              {
                "line": "* setPath.",
                "type": "ADD",
                "lineNo": 243
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 244
              },
              {
                "line": "* @param methodName methodName",
                "type": "ADD",
                "lineNo": 245
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 246
              },
              {
                "line": "public void setMethodName(final String methodName) {",
                "type": "ADD",
                "lineNo": 247
              },
              {
                "line": "this.methodName = methodName;",
                "type": "ADD",
                "lineNo": 248
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 249
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 251
              },
              {
                "line": "* getRuleName.",
                "type": "ADD",
                "lineNo": 252
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 253
              },
              {
                "line": "* @return String of ruleName",
                "type": "ADD",
                "lineNo": 254
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 255
              },
              {
                "line": "public String getRuleName() {",
                "type": "ADD",
                "lineNo": 256
              },
              {
                "line": "return ruleName;",
                "type": "ADD",
                "lineNo": 257
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 258
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 260
              },
              {
                "line": "* setPath.",
                "type": "ADD",
                "lineNo": 261
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 262
              },
              {
                "line": "* @param ruleName ruleName",
                "type": "ADD",
                "lineNo": 263
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 264
              },
              {
                "line": "public void setRuleName(final String ruleName) {",
                "type": "ADD",
                "lineNo": 265
              },
              {
                "line": "this.ruleName = ruleName;",
                "type": "ADD",
                "lineNo": 266
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 267
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 269
              },
              {
                "line": "* getParameterTypes.",
                "type": "ADD",
                "lineNo": 270
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 271
              },
              {
                "line": "* @return String of parameterTypes",
                "type": "ADD",
                "lineNo": 272
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 273
              },
              {
                "line": "public String getParameterTypes() {",
                "type": "ADD",
                "lineNo": 274
              },
              {
                "line": "return parameterTypes;",
                "type": "ADD",
                "lineNo": 275
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 276
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 278
              },
              {
                "line": "* setPath.",
                "type": "ADD",
                "lineNo": 279
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 280
              },
              {
                "line": "* @param parameterTypes parameterTypes",
                "type": "ADD",
                "lineNo": 281
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 282
              },
              {
                "line": "public void setParameterTypes(final String parameterTypes) {",
                "type": "ADD",
                "lineNo": 283
              },
              {
                "line": "this.parameterTypes = parameterTypes;",
                "type": "ADD",
                "lineNo": 284
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 285
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 287
              },
              {
                "line": "* getRpcExt.",
                "type": "ADD",
                "lineNo": 288
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 289
              },
              {
                "line": "* @return String of rpcExt",
                "type": "ADD",
                "lineNo": 290
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 291
              },
              {
                "line": "public String getRpcExt() {",
                "type": "ADD",
                "lineNo": 292
              },
              {
                "line": "return rpcExt;",
                "type": "ADD",
                "lineNo": 293
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 294
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 296
              },
              {
                "line": "* setPath.",
                "type": "ADD",
                "lineNo": 297
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 298
              },
              {
                "line": "* @param rpcExt rpcExt",
                "type": "ADD",
                "lineNo": 299
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 300
              },
              {
                "line": "public void setRpcExt(final String rpcExt) {",
                "type": "ADD",
                "lineNo": 301
              },
              {
                "line": "this.rpcExt = rpcExt;",
                "type": "ADD",
                "lineNo": 302
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 303
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 305
              },
              {
                "line": "* isEnabled.",
                "type": "ADD",
                "lineNo": 306
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 307
              },
              {
                "line": "* @return boolean",
                "type": "ADD",
                "lineNo": 308
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 309
              },
              {
                "line": "public boolean isEnabled() {",
                "type": "ADD",
                "lineNo": 310
              },
              {
                "line": "return enabled;",
                "type": "ADD",
                "lineNo": 311
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 312
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 314
              },
              {
                "line": "* setPath.",
                "type": "ADD",
                "lineNo": 315
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 316
              },
              {
                "line": "* @param enabled enabled",
                "type": "ADD",
                "lineNo": 317
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 318
              },
              {
                "line": "public void setEnabled(final boolean enabled) {",
                "type": "ADD",
                "lineNo": 319
              },
              {
                "line": "this.enabled = enabled;",
                "type": "ADD",
                "lineNo": 320
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 321
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 323
              },
              {
                "line": "* getHost.",
                "type": "ADD",
                "lineNo": 324
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 325
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 326
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 327
              },
              {
                "line": "public String getHost() {",
                "type": "ADD",
                "lineNo": 328
              },
              {
                "line": "return host;",
                "type": "ADD",
                "lineNo": 329
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 330
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 332
              },
              {
                "line": "* setPath.",
                "type": "ADD",
                "lineNo": 333
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 334
              },
              {
                "line": "* @param host host",
                "type": "ADD",
                "lineNo": 335
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 336
              },
              {
                "line": "public void setHost(final String host) {",
                "type": "ADD",
                "lineNo": 337
              },
              {
                "line": "this.host = host;",
                "type": "ADD",
                "lineNo": 338
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 339
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 341
              },
              {
                "line": "* getPort.",
                "type": "ADD",
                "lineNo": 342
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 343
              },
              {
                "line": "* @return Integer",
                "type": "ADD",
                "lineNo": 344
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 345
              },
              {
                "line": "public Integer getPort() {",
                "type": "ADD",
                "lineNo": 346
              },
              {
                "line": "return port;",
                "type": "ADD",
                "lineNo": 347
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 348
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 350
              },
              {
                "line": "* setPort.",
                "type": "ADD",
                "lineNo": 351
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 352
              },
              {
                "line": "* @param port port",
                "type": "ADD",
                "lineNo": 353
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 354
              },
              {
                "line": "public void setPort(final Integer port) {",
                "type": "ADD",
                "lineNo": 355
              },
              {
                "line": "this.port = port;",
                "type": "ADD",
                "lineNo": 356
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 357
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 359
              },
              {
                "line": "* getPluginNames.",
                "type": "ADD",
                "lineNo": 360
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 361
              },
              {
                "line": "* @return List",
                "type": "ADD",
                "lineNo": 362
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 363
              },
              {
                "line": "public List<String> getPluginNames() {",
                "type": "ADD",
                "lineNo": 364
              },
              {
                "line": "return pluginNames;",
                "type": "ADD",
                "lineNo": 365
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 366
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 368
              },
              {
                "line": "* setPluginNames.",
                "type": "ADD",
                "lineNo": 369
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 370
              },
              {
                "line": "* @param pluginNames pluginNames",
                "type": "ADD",
                "lineNo": 371
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 372
              },
              {
                "line": "public void setPluginNames(final List<String> pluginNames) {",
                "type": "ADD",
                "lineNo": 373
              },
              {
                "line": "this.pluginNames = pluginNames;",
                "type": "ADD",
                "lineNo": 374
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 375
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 377
              },
              {
                "line": "* isRegisterMetaData.",
                "type": "ADD",
                "lineNo": 378
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 379
              },
              {
                "line": "* @return boolean",
                "type": "ADD",
                "lineNo": 380
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 381
              },
              {
                "line": "public boolean isRegisterMetaData() {",
                "type": "ADD",
                "lineNo": 382
              },
              {
                "line": "return registerMetaData;",
                "type": "ADD",
                "lineNo": 383
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 384
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 386
              },
              {
                "line": "* setRegisterMetaData.",
                "type": "ADD",
                "lineNo": 387
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 388
              },
              {
                "line": "* @param registerMetaData registerMetaData",
                "type": "ADD",
                "lineNo": 389
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 390
              },
              {
                "line": "public void setRegisterMetaData(final boolean registerMetaData) {",
                "type": "ADD",
                "lineNo": 391
              },
              {
                "line": "this.registerMetaData = registerMetaData;",
                "type": "ADD",
                "lineNo": 392
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 393
              },
              {
                "line": "public static final class Builder {",
                "type": "ADD",
                "lineNo": 395
              },
              {
                "line": "private String appName;",
                "type": "ADD",
                "lineNo": 397
              },
              {
                "line": "private String contextPath;",
                "type": "ADD",
                "lineNo": 399
              },
              {
                "line": "private String path;",
                "type": "ADD",
                "lineNo": 401
              },
              {
                "line": "private String pathDesc;",
                "type": "ADD",
                "lineNo": 403
              },
              {
                "line": "private String rpcType;",
                "type": "ADD",
                "lineNo": 405
              },
              {
                "line": "private String serviceName;",
                "type": "ADD",
                "lineNo": 407
              },
              {
                "line": "private String methodName;",
                "type": "ADD",
                "lineNo": 409
              },
              {
                "line": "private String ruleName;",
                "type": "ADD",
                "lineNo": 411
              },
              {
                "line": "private String parameterTypes;",
                "type": "ADD",
                "lineNo": 413
              },
              {
                "line": "private String rpcExt;",
                "type": "ADD",
                "lineNo": 415
              },
              {
                "line": "private boolean enabled;",
                "type": "ADD",
                "lineNo": 417
              },
              {
                "line": "private String host;",
                "type": "ADD",
                "lineNo": 419
              },
              {
                "line": "private Integer port;",
                "type": "ADD",
                "lineNo": 421
              },
              {
                "line": "private List<String> pluginNames = Collections.emptyList();",
                "type": "ADD",
                "lineNo": 423
              },
              {
                "line": "private boolean registerMetaData;",
                "type": "ADD",
                "lineNo": 425
              },
              {
                "line": "private Builder() {",
                "type": "ADD",
                "lineNo": 427
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 428
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 430
              },
              {
                "line": "* appName.",
                "type": "ADD",
                "lineNo": 431
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 432
              },
              {
                "line": "* @param appName appName",
                "type": "ADD",
                "lineNo": 433
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 434
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 435
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 436
              },
              {
                "line": "public Builder appName(final String appName) {",
                "type": "ADD",
                "lineNo": 437
              },
              {
                "line": "this.appName = appName;",
                "type": "ADD",
                "lineNo": 438
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 439
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 440
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 442
              },
              {
                "line": "* contextPath.",
                "type": "ADD",
                "lineNo": 443
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 444
              },
              {
                "line": "* @param contextPath contextPath",
                "type": "ADD",
                "lineNo": 445
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 446
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 447
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 448
              },
              {
                "line": "public Builder contextPath(final String contextPath) {",
                "type": "ADD",
                "lineNo": 449
              },
              {
                "line": "this.contextPath = contextPath;",
                "type": "ADD",
                "lineNo": 450
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 451
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 452
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 454
              },
              {
                "line": "* path.",
                "type": "ADD",
                "lineNo": 455
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 456
              },
              {
                "line": "* @param path path",
                "type": "ADD",
                "lineNo": 457
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 458
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 459
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 460
              },
              {
                "line": "public Builder path(final String path) {",
                "type": "ADD",
                "lineNo": 461
              },
              {
                "line": "this.path = path;",
                "type": "ADD",
                "lineNo": 462
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 463
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 464
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 466
              },
              {
                "line": "* pathDesc.",
                "type": "ADD",
                "lineNo": 467
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 468
              },
              {
                "line": "* @param pathDesc pathDesc",
                "type": "ADD",
                "lineNo": 469
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 470
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 471
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 472
              },
              {
                "line": "public Builder pathDesc(final String pathDesc) {",
                "type": "ADD",
                "lineNo": 473
              },
              {
                "line": "this.pathDesc = pathDesc;",
                "type": "ADD",
                "lineNo": 474
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 475
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 476
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 478
              },
              {
                "line": "* rpcType.",
                "type": "ADD",
                "lineNo": 479
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 480
              },
              {
                "line": "* @param rpcType rpcType",
                "type": "ADD",
                "lineNo": 481
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 482
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 483
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 484
              },
              {
                "line": "public Builder rpcType(final String rpcType) {",
                "type": "ADD",
                "lineNo": 485
              },
              {
                "line": "this.rpcType = rpcType;",
                "type": "ADD",
                "lineNo": 486
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 487
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 488
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 490
              },
              {
                "line": "* serviceName.",
                "type": "ADD",
                "lineNo": 491
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 492
              },
              {
                "line": "* @param serviceName serviceName",
                "type": "ADD",
                "lineNo": 493
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 494
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 495
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 496
              },
              {
                "line": "public Builder serviceName(final String serviceName) {",
                "type": "ADD",
                "lineNo": 497
              },
              {
                "line": "this.serviceName = serviceName;",
                "type": "ADD",
                "lineNo": 498
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 499
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 500
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 502
              },
              {
                "line": "* methodName.",
                "type": "ADD",
                "lineNo": 503
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 504
              },
              {
                "line": "* @param methodName methodName",
                "type": "ADD",
                "lineNo": 505
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 506
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 507
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 508
              },
              {
                "line": "public Builder methodName(final String methodName) {",
                "type": "ADD",
                "lineNo": 509
              },
              {
                "line": "this.methodName = methodName;",
                "type": "ADD",
                "lineNo": 510
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 511
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 512
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 514
              },
              {
                "line": "* ruleName.",
                "type": "ADD",
                "lineNo": 515
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 516
              },
              {
                "line": "* @param ruleName ruleName",
                "type": "ADD",
                "lineNo": 517
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 518
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 519
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 520
              },
              {
                "line": "public Builder ruleName(final String ruleName) {",
                "type": "ADD",
                "lineNo": 521
              },
              {
                "line": "this.ruleName = ruleName;",
                "type": "ADD",
                "lineNo": 522
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 523
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 524
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 526
              },
              {
                "line": "* parameterTypes.",
                "type": "ADD",
                "lineNo": 527
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 528
              },
              {
                "line": "* @param parameterTypes parameterTypes",
                "type": "ADD",
                "lineNo": 529
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 530
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 531
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 532
              },
              {
                "line": "public Builder parameterTypes(final String parameterTypes) {",
                "type": "ADD",
                "lineNo": 533
              },
              {
                "line": "this.parameterTypes = parameterTypes;",
                "type": "ADD",
                "lineNo": 534
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 535
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 536
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 538
              },
              {
                "line": "* rpcExt.",
                "type": "ADD",
                "lineNo": 539
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 540
              },
              {
                "line": "* @param rpcExt rpcExt",
                "type": "ADD",
                "lineNo": 541
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 542
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 543
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 544
              },
              {
                "line": "public Builder rpcExt(final String rpcExt) {",
                "type": "ADD",
                "lineNo": 545
              },
              {
                "line": "this.rpcExt = rpcExt;",
                "type": "ADD",
                "lineNo": 546
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 547
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 548
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 550
              },
              {
                "line": "* enabled.",
                "type": "ADD",
                "lineNo": 551
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 552
              },
              {
                "line": "* @param enabled enabled",
                "type": "ADD",
                "lineNo": 553
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 554
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 555
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 556
              },
              {
                "line": "public Builder enabled(final boolean enabled) {",
                "type": "ADD",
                "lineNo": 557
              },
              {
                "line": "this.enabled = enabled;",
                "type": "ADD",
                "lineNo": 558
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 559
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 560
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 562
              },
              {
                "line": "* appName.",
                "type": "ADD",
                "lineNo": 563
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 564
              },
              {
                "line": "* @param host host",
                "type": "ADD",
                "lineNo": 565
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 566
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 567
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 568
              },
              {
                "line": "public Builder host(final String host) {",
                "type": "ADD",
                "lineNo": 569
              },
              {
                "line": "this.host = host;",
                "type": "ADD",
                "lineNo": 570
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 571
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 572
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 574
              },
              {
                "line": "* port.",
                "type": "ADD",
                "lineNo": 575
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 576
              },
              {
                "line": "* @param port port",
                "type": "ADD",
                "lineNo": 577
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 578
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 579
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 580
              },
              {
                "line": "public Builder port(final Integer port) {",
                "type": "ADD",
                "lineNo": 581
              },
              {
                "line": "this.port = port;",
                "type": "ADD",
                "lineNo": 582
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 583
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 584
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 586
              },
              {
                "line": "* pluginNames.",
                "type": "ADD",
                "lineNo": 587
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 588
              },
              {
                "line": "* @param pluginNames pluginNames",
                "type": "ADD",
                "lineNo": 589
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 590
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 591
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 592
              },
              {
                "line": "public Builder pluginNames(final List<String> pluginNames) {",
                "type": "ADD",
                "lineNo": 593
              },
              {
                "line": "this.pluginNames = pluginNames;",
                "type": "ADD",
                "lineNo": 594
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 595
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 596
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 598
              },
              {
                "line": "* registerMetaData.",
                "type": "ADD",
                "lineNo": 599
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 600
              },
              {
                "line": "* @param registerMetaData registerMetaData",
                "type": "ADD",
                "lineNo": 601
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 602
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 603
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 604
              },
              {
                "line": "public Builder registerMetaData(final boolean registerMetaData) {",
                "type": "ADD",
                "lineNo": 605
              },
              {
                "line": "this.registerMetaData = registerMetaData;",
                "type": "ADD",
                "lineNo": 606
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 607
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 608
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 610
              },
              {
                "line": "* build.",
                "type": "ADD",
                "lineNo": 611
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 612
              },
              {
                "line": "* @return MetaDataRegisterDTO",
                "type": "ADD",
                "lineNo": 613
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 614
              },
              {
                "line": "public MetaDataRegisterDTO build() {",
                "type": "ADD",
                "lineNo": 615
              },
              {
                "line": "return new MetaDataRegisterDTO(this);",
                "type": "ADD",
                "lineNo": 616
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 617
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 618
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getAppName()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setAppName(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getContextPath()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setContextPath(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setPath(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String path"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPathDesc()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String pathDesc"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setPathDesc(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String pathDesc"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String pathDesc"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pathDesc"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRpcType()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setRpcType(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getServiceName()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setServiceName(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getMethodName()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setMethodName(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setRuleName(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getParameterTypes()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setParameterTypes(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRpcExt()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setRpcExt(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.isEnabled()"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtFieldRead",
                "value": "boolean enabled"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setEnabled(boolean)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "boolean enabled"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtFieldWrite",
                "value": "boolean enabled"
              },
              {
                "type": "CtVariableRead",
                "value": "boolean enabled"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getHost()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String host"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setHost(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String host"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String host"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String host"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPort()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setPort(Integer)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPluginNames()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.List pluginNames"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setPluginNames(List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List pluginNames"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.util.List pluginNames"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List pluginNames"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.isRegisterMetaData()"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtFieldRead",
                "value": "boolean registerMetaData"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setRegisterMetaData(boolean)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "boolean registerMetaData"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtFieldWrite",
                "value": "boolean registerMetaData"
              },
              {
                "type": "CtVariableRead",
                "value": "boolean registerMetaData"
              },
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtField",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String pathDesc"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "boolean enabled"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtField",
                "value": "java.lang.String host"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtField",
                "value": "java.util.List pluginNames"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collections.emptyList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collections.emptyList()"
              },
              {
                "type": "CtField",
                "value": "boolean registerMetaData"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.Builder()"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.appName(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.contextPath(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.path(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String path"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.pathDesc(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String pathDesc"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String pathDesc"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pathDesc"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.rpcType(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.serviceName(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.methodName(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.ruleName(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.parameterTypes(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String parameterTypes"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.rpcExt(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.enabled(boolean)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "boolean enabled"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtFieldWrite",
                "value": "boolean enabled"
              },
              {
                "type": "CtVariableRead",
                "value": "boolean enabled"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.host(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String host"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String host"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String host"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.port(Integer)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.pluginNames(List)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List pluginNames"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.util.List pluginNames"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List pluginNames"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.registerMetaData(boolean)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "boolean registerMetaData"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtFieldWrite",
                "value": "boolean registerMetaData"
              },
              {
                "type": "CtVariableRead",
                "value": "boolean registerMetaData"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO$Builder.build()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.MetaDataRegisterDTO(Builder)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-common/src/main/java/org/apache/shenyu/register/common/dto/URIRegisterDTO.java",
        "aPath": "shenyu-register-center/shenyu-register-common/src/main/java/org/apache/shenyu/register/common/dto/URIRegisterDTO.java",
        "name": "org.apache.shenyu.register.common.dto.URIRegisterDTO",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Data",
                "type": "DELETE",
                "lineNo": 35
              },
              {
                "line": "@Builder",
                "type": "DELETE",
                "lineNo": 36
              },
              {
                "line": "@NoArgsConstructor",
                "type": "DELETE",
                "lineNo": 37
              },
              {
                "line": "@AllArgsConstructor",
                "type": "DELETE",
                "lineNo": 38
              },
              {
                "line": "@EqualsAndHashCode",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.Data"
              },
              {
                "type": "CtAnnotation",
                "value": "lombok.Builder"
              },
              {
                "type": "CtAnnotation",
                "value": "lombok.NoArgsConstructor"
              },
              {
                "type": "CtAnnotation",
                "value": "lombok.AllArgsConstructor"
              },
              {
                "type": "CtAnnotation",
                "value": "lombok.EqualsAndHashCode"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "public URIRegisterDTO(final String appName, final String contextPath, final String rpcType, final String host, final Integer port,",
                "type": "ADD",
                "lineNo": 47
              },
              {
                "line": "final EventType eventType) {",
                "type": "ADD",
                "lineNo": 48
              },
              {
                "line": "this.appName = appName;",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "this.contextPath = contextPath;",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "this.rpcType = rpcType;",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "this.host = host;",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "this.port = port;",
                "type": "ADD",
                "lineNo": 53
              },
              {
                "line": "this.eventType = eventType;",
                "type": "ADD",
                "lineNo": 54
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 55
              },
              {
                "line": "public URIRegisterDTO() {",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 58
              },
              {
                "line": "private URIRegisterDTO(final Builder builder) {",
                "type": "ADD",
                "lineNo": 60
              },
              {
                "line": "appName = builder.appName;",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "contextPath = builder.contextPath;",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "rpcType = builder.rpcType;",
                "type": "ADD",
                "lineNo": 63
              },
              {
                "line": "host = builder.host;",
                "type": "ADD",
                "lineNo": 64
              },
              {
                "line": "port = builder.port;",
                "type": "ADD",
                "lineNo": 65
              },
              {
                "line": "eventType = builder.eventType;",
                "type": "ADD",
                "lineNo": 66
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 67
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.URIRegisterDTO(String,String,String,String,Integer,EventType)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String host"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String host"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String host"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.URIRegisterDTO()"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.URIRegisterDTO(Builder)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder builder"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String host"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String host"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder builder"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "* return builder.",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "public static Builder builder() {",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "return new Builder();",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "* getType.",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 97
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.builder()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.Builder()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 103
              },
              {
                "line": "* getAppName.",
                "type": "ADD",
                "lineNo": 104
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 105
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 106
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 107
              },
              {
                "line": "public String getAppName() {",
                "type": "ADD",
                "lineNo": 108
              },
              {
                "line": "return appName;",
                "type": "ADD",
                "lineNo": 109
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 110
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 112
              },
              {
                "line": "* setAppName.",
                "type": "ADD",
                "lineNo": 113
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 114
              },
              {
                "line": "* @param appName appName",
                "type": "ADD",
                "lineNo": 115
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 116
              },
              {
                "line": "public void setAppName(final String appName) {",
                "type": "ADD",
                "lineNo": 117
              },
              {
                "line": "this.appName = appName;",
                "type": "ADD",
                "lineNo": 118
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 119
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 121
              },
              {
                "line": "* getContextPath.",
                "type": "ADD",
                "lineNo": 122
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 123
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 124
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 125
              },
              {
                "line": "public String getContextPath() {",
                "type": "ADD",
                "lineNo": 126
              },
              {
                "line": "return contextPath;",
                "type": "ADD",
                "lineNo": 127
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 128
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 130
              },
              {
                "line": "* setContextPath.",
                "type": "ADD",
                "lineNo": 131
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 132
              },
              {
                "line": "* @param contextPath contextPath",
                "type": "ADD",
                "lineNo": 133
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 134
              },
              {
                "line": "public void setContextPath(final String contextPath) {",
                "type": "ADD",
                "lineNo": 135
              },
              {
                "line": "this.contextPath = contextPath;",
                "type": "ADD",
                "lineNo": 136
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 137
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 139
              },
              {
                "line": "* getRpcType.",
                "type": "ADD",
                "lineNo": 140
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 141
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 142
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 143
              },
              {
                "line": "public String getRpcType() {",
                "type": "ADD",
                "lineNo": 144
              },
              {
                "line": "return rpcType;",
                "type": "ADD",
                "lineNo": 145
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 146
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 148
              },
              {
                "line": "* setRpcType.",
                "type": "ADD",
                "lineNo": 149
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 150
              },
              {
                "line": "* @param rpcType rpcType",
                "type": "ADD",
                "lineNo": 151
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 152
              },
              {
                "line": "public void setRpcType(final String rpcType) {",
                "type": "ADD",
                "lineNo": 153
              },
              {
                "line": "this.rpcType = rpcType;",
                "type": "ADD",
                "lineNo": 154
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 155
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 157
              },
              {
                "line": "* getHost.",
                "type": "ADD",
                "lineNo": 158
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 159
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 160
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 161
              },
              {
                "line": "public String getHost() {",
                "type": "ADD",
                "lineNo": 162
              },
              {
                "line": "return host;",
                "type": "ADD",
                "lineNo": 163
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 164
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 166
              },
              {
                "line": "* setHost.",
                "type": "ADD",
                "lineNo": 167
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 168
              },
              {
                "line": "* @param host host",
                "type": "ADD",
                "lineNo": 169
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 170
              },
              {
                "line": "public void setHost(final String host) {",
                "type": "ADD",
                "lineNo": 171
              },
              {
                "line": "this.host = host;",
                "type": "ADD",
                "lineNo": 172
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 173
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 175
              },
              {
                "line": "* getPort.",
                "type": "ADD",
                "lineNo": 176
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 177
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 178
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 179
              },
              {
                "line": "public Integer getPort() {",
                "type": "ADD",
                "lineNo": 180
              },
              {
                "line": "return port;",
                "type": "ADD",
                "lineNo": 181
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 182
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 184
              },
              {
                "line": "* setPort.",
                "type": "ADD",
                "lineNo": 185
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 186
              },
              {
                "line": "* @param port port",
                "type": "ADD",
                "lineNo": 187
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 188
              },
              {
                "line": "public void setPort(final Integer port) {",
                "type": "ADD",
                "lineNo": 189
              },
              {
                "line": "this.port = port;",
                "type": "ADD",
                "lineNo": 190
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 191
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 193
              },
              {
                "line": "* getEventType.",
                "type": "ADD",
                "lineNo": 194
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 195
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 196
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 197
              },
              {
                "line": "public EventType getEventType() {",
                "type": "ADD",
                "lineNo": 198
              },
              {
                "line": "return eventType;",
                "type": "ADD",
                "lineNo": 199
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 200
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 202
              },
              {
                "line": "* setEventType.",
                "type": "ADD",
                "lineNo": 203
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 204
              },
              {
                "line": "* @param eventType eventType",
                "type": "ADD",
                "lineNo": 205
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 206
              },
              {
                "line": "public void setEventType(final EventType eventType) {",
                "type": "ADD",
                "lineNo": 207
              },
              {
                "line": "this.eventType = eventType;",
                "type": "ADD",
                "lineNo": 208
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 209
              },
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 211
              },
              {
                "line": "public boolean equals(final Object o) {",
                "type": "ADD",
                "lineNo": 212
              },
              {
                "line": "if (this == o) {",
                "type": "ADD",
                "lineNo": 213
              },
              {
                "line": "return Boolean.TRUE;",
                "type": "ADD",
                "lineNo": 214
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 215
              },
              {
                "line": "if (o == null || getClass() != o.getClass()) {",
                "type": "ADD",
                "lineNo": 217
              },
              {
                "line": "return Boolean.FALSE;",
                "type": "ADD",
                "lineNo": 218
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 219
              },
              {
                "line": "URIRegisterDTO that = (URIRegisterDTO) o;",
                "type": "ADD",
                "lineNo": 221
              },
              {
                "line": "return Objects.equals(getAppName(), that.getAppName())",
                "type": "ADD",
                "lineNo": 222
              },
              {
                "line": "&& Objects.equals(getContextPath(), that.getContextPath())",
                "type": "ADD",
                "lineNo": 223
              },
              {
                "line": "&& Objects.equals(getRpcType(), that.getRpcType())",
                "type": "ADD",
                "lineNo": 224
              },
              {
                "line": "&& Objects.equals(getHost(), that.getHost())",
                "type": "ADD",
                "lineNo": 225
              },
              {
                "line": "&& Objects.equals(getPort(), that.getPort())",
                "type": "ADD",
                "lineNo": 226
              },
              {
                "line": "&& getEventType() == that.getEventType();",
                "type": "ADD",
                "lineNo": 227
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 228
              },
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 230
              },
              {
                "line": "public int hashCode() {",
                "type": "ADD",
                "lineNo": 231
              },
              {
                "line": "return Objects.hash(getAppName(), getContextPath(), getRpcType(), getHost(), getPort(), getEventType());",
                "type": "ADD",
                "lineNo": 232
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 233
              },
              {
                "line": "public static final class Builder {",
                "type": "ADD",
                "lineNo": 235
              },
              {
                "line": "private String appName;",
                "type": "ADD",
                "lineNo": 237
              },
              {
                "line": "private String contextPath;",
                "type": "ADD",
                "lineNo": 239
              },
              {
                "line": "private String rpcType;",
                "type": "ADD",
                "lineNo": 241
              },
              {
                "line": "private String host;",
                "type": "ADD",
                "lineNo": 243
              },
              {
                "line": "private Integer port;",
                "type": "ADD",
                "lineNo": 245
              },
              {
                "line": "private EventType eventType;",
                "type": "ADD",
                "lineNo": 247
              },
              {
                "line": "private Builder() {",
                "type": "ADD",
                "lineNo": 249
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 250
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 252
              },
              {
                "line": "* appName.",
                "type": "ADD",
                "lineNo": 253
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 254
              },
              {
                "line": "* @param appName appName",
                "type": "ADD",
                "lineNo": 255
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 256
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 257
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 258
              },
              {
                "line": "public Builder appName(final String appName) {",
                "type": "ADD",
                "lineNo": 259
              },
              {
                "line": "this.appName = appName;",
                "type": "ADD",
                "lineNo": 260
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 261
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 262
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 264
              },
              {
                "line": "* contextPath.",
                "type": "ADD",
                "lineNo": 265
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 266
              },
              {
                "line": "* @param contextPath contextPath",
                "type": "ADD",
                "lineNo": 267
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 268
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 269
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 270
              },
              {
                "line": "public Builder contextPath(final String contextPath) {",
                "type": "ADD",
                "lineNo": 271
              },
              {
                "line": "this.contextPath = contextPath;",
                "type": "ADD",
                "lineNo": 272
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 273
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 274
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 276
              },
              {
                "line": "* rpcType.",
                "type": "ADD",
                "lineNo": 277
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 278
              },
              {
                "line": "* @param rpcType rpcType",
                "type": "ADD",
                "lineNo": 279
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 280
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 281
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 282
              },
              {
                "line": "public Builder rpcType(final String rpcType) {",
                "type": "ADD",
                "lineNo": 283
              },
              {
                "line": "this.rpcType = rpcType;",
                "type": "ADD",
                "lineNo": 284
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 285
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 286
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 288
              },
              {
                "line": "* host.",
                "type": "ADD",
                "lineNo": 289
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 290
              },
              {
                "line": "* @param host host",
                "type": "ADD",
                "lineNo": 291
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 292
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 293
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 294
              },
              {
                "line": "public Builder host(final String host) {",
                "type": "ADD",
                "lineNo": 295
              },
              {
                "line": "this.host = host;",
                "type": "ADD",
                "lineNo": 296
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 297
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 298
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 300
              },
              {
                "line": "* port.",
                "type": "ADD",
                "lineNo": 301
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 302
              },
              {
                "line": "* @param port port",
                "type": "ADD",
                "lineNo": 303
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 304
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 305
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 306
              },
              {
                "line": "public Builder port(final Integer port) {",
                "type": "ADD",
                "lineNo": 307
              },
              {
                "line": "this.port = port;",
                "type": "ADD",
                "lineNo": 308
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 309
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 310
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 312
              },
              {
                "line": "* eventType.",
                "type": "ADD",
                "lineNo": 313
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 314
              },
              {
                "line": "* @param eventType eventType",
                "type": "ADD",
                "lineNo": 315
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 316
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 317
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 318
              },
              {
                "line": "public Builder eventType(final EventType eventType) {",
                "type": "ADD",
                "lineNo": 319
              },
              {
                "line": "this.eventType = eventType;",
                "type": "ADD",
                "lineNo": 320
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 321
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 322
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 324
              },
              {
                "line": "* build.",
                "type": "ADD",
                "lineNo": 325
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 326
              },
              {
                "line": "* @return Builder",
                "type": "ADD",
                "lineNo": 327
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 328
              },
              {
                "line": "public URIRegisterDTO build() {",
                "type": "ADD",
                "lineNo": 329
              },
              {
                "line": "return new URIRegisterDTO(this);",
                "type": "ADD",
                "lineNo": 330
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 331
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 332
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getAppName()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.setAppName(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getContextPath()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.setContextPath(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getRpcType()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.setRpcType(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getHost()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String host"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.setHost(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String host"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String host"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String host"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getPort()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.setPort(Integer)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getEventType()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.setEventType(EventType)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.equals(Object)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Object o"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object o"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object o"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object o"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean FALSE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean FALSE"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO that"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object o"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getAppName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getAppName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getAppName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO that"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getAppName()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getContextPath()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getContextPath()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getContextPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO that"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getContextPath()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getRpcType()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getRpcType()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getRpcType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO that"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getRpcType()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getHost()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getHost()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getHost()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO that"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getHost()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getPort()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getPort()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getPort()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO that"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getPort()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getEventType()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getEventType()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getEventType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO that"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getEventType()"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.hashCode()"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.hash(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.hash(Object[])"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getAppName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getAppName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getContextPath()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getContextPath()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getRpcType()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getRpcType()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getHost()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getHost()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getPort()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getPort()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getEventType()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getEventType()"
              },
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder"
              },
              {
                "type": "CtField",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String host"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtField",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.Builder()"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.appName(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.contextPath(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.rpcType(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.host(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String host"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String host"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String host"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.port(Integer)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.eventType(EventType)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.build()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.URIRegisterDTO(Builder)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-common/src/main/java/org/apache/shenyu/register/common/enums/RegisterTypeEnum.java",
        "aPath": "shenyu-register-center/shenyu-register-common/src/main/java/org/apache/shenyu/register/common/enums/RegisterTypeEnum.java",
        "name": "org.apache.shenyu.register.common.enums.RegisterTypeEnum",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@RequiredArgsConstructor",
                "type": "DELETE",
                "lineNo": 26
              },
              {
                "line": "@Getter",
                "type": "DELETE",
                "lineNo": 27
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.RequiredArgsConstructor"
              },
              {
                "type": "CtAnnotation",
                "value": "lombok.Getter"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "RegisterTypeEnum(final String name) {",
                "type": "ADD",
                "lineNo": 63
              },
              {
                "line": "this.name = name;",
                "type": "ADD",
                "lineNo": 64
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 65
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 67
              },
              {
                "line": "* getName.",
                "type": "ADD",
                "lineNo": 68
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 69
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "public String getName() {",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "return name;",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 74
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.enums.RegisterTypeEnum.RegisterTypeEnum(String)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String name"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String name"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.enums.RegisterTypeEnum.getName()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String name"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-consul/src/main/java/org/apache/shenyu/register/server/consul/ConsulServerRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-consul/src/main/java/org/apache/shenyu/register/server/consul/ConsulServerRegisterRepository.java",
        "name": "org.apache.shenyu.register.server.consul.ConsulServerRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 44
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private static final Logger LOGGER = LoggerFactory.getLogger(ConsulServerRegisterRepository.class);",
                "type": "ADD",
                "lineNo": 47
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.debug(\"maybe not shenyu client, ignore service instance: {}\", serviceInstance);",
                "type": "DELETE",
                "lineNo": 121
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.debug(\"maybe not shenyu client, ignore service instance: {}\", serviceInstance);",
                "type": "ADD",
                "lineNo": 123
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "debug()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.server.consul.log"
              },
              {
                "type": "CtExecutableReference",
                "value": "debug()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'maybe not shenyu client, ignore service instance: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> serviceInstance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> serviceInstance"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "debug()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtFieldReference",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "debug()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'maybe not shenyu client, ignore service instance: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> serviceInstance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> serviceInstance"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-consul/src/main/java/org/apache/shenyu/register/server/consul/ShenyuConsulConfigWatch.java",
        "aPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-consul/src/main/java/org/apache/shenyu/register/server/consul/ShenyuConsulConfigWatch.java",
        "name": "org.apache.shenyu.register.server.consul.ShenyuConsulConfigWatch",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private static final Logger LOGGER = LoggerFactory.getLogger(ShenyuConsulConfigWatch.class);",
                "type": "ADD",
                "lineNo": 42
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.trace(\"Context \" + context + \" has new index \" + newIndex);",
                "type": "DELETE",
                "lineNo": 83
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.trace(\"Context \" + context + \" has new index \" + newIndex);",
                "type": "ADD",
                "lineNo": 85
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "trace(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.consul.ShenyuConsulConfigWatch log"
              },
              {
                "type": "CtExecutableReference",
                "value": "trace(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Context '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String context"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ' has new index '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Long newIndex"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.trace(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.trace(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Context '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String context"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ' has new index '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Long newIndex"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "} else if (log.isTraceEnabled()) {",
                "type": "DELETE",
                "lineNo": 86
              },
              {
                "line": "log.info(\"Event for index already published for context \" + context);",
                "type": "DELETE",
                "lineNo": 87
              }
            ],
            "targetChanges": [
              {
                "line": "} else if (LOGGER.isTraceEnabled()) {",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "LOGGER.info(\"Event for index already published for context \" + context);",
                "type": "ADD",
                "lineNo": 89
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isTraceEnabled()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.consul.ShenyuConsulConfigWatch log"
              },
              {
                "type": "CtExecutableReference",
                "value": "isTraceEnabled()"
              },
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.consul.ShenyuConsulConfigWatch log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Event for index already published for context '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String context"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.isTraceEnabled()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.isTraceEnabled()"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Event for index already published for context '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String context"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "} else if (log.isTraceEnabled()) {",
                "type": "DELETE",
                "lineNo": 90
              },
              {
                "line": "log.trace(\"Same index for context \" + context);",
                "type": "DELETE",
                "lineNo": 91
              }
            ],
            "targetChanges": [
              {
                "line": "} else if (LOGGER.isTraceEnabled()) {",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "LOGGER.trace(\"Same index for context \" + context);",
                "type": "ADD",
                "lineNo": 93
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isTraceEnabled()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.consul.ShenyuConsulConfigWatch log"
              },
              {
                "type": "CtExecutableReference",
                "value": "isTraceEnabled()"
              },
              {
                "type": "CtInvocation",
                "value": "trace(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.consul.ShenyuConsulConfigWatch log"
              },
              {
                "type": "CtExecutableReference",
                "value": "trace(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Same index for context '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String context"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.isTraceEnabled()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.isTraceEnabled()"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.trace(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.trace(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Same index for context '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String context"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "} else if (log.isTraceEnabled()) {",
                "type": "DELETE",
                "lineNo": 93
              },
              {
                "line": "log.trace(\"No value for context \" + context);",
                "type": "DELETE",
                "lineNo": 94
              }
            ],
            "targetChanges": [
              {
                "line": "} else if (LOGGER.isTraceEnabled()) {",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "LOGGER.trace(\"No value for context \" + context);",
                "type": "ADD",
                "lineNo": 96
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isTraceEnabled()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.consul.ShenyuConsulConfigWatch log"
              },
              {
                "type": "CtExecutableReference",
                "value": "isTraceEnabled()"
              },
              {
                "type": "CtInvocation",
                "value": "trace(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.consul.ShenyuConsulConfigWatch log"
              },
              {
                "type": "CtExecutableReference",
                "value": "trace(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'No value for context '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String context"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.isTraceEnabled()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.isTraceEnabled()"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.trace(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.trace(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'No value for context '"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String context"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.warn(\"Error querying consul Key/Values for context '\" + context + \"'. Message: \" + e.getMessage());",
                "type": "DELETE",
                "lineNo": 97
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.warn(\"Error querying consul Key/Values for context '\" + context + \"'. Message: \" + e.getMessage());",
                "type": "ADD",
                "lineNo": 99
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "warn(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.consul.ShenyuConsulConfigWatch log"
              },
              {
                "type": "CtExecutableReference",
                "value": "warn(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Error querying consul Key/Values for context ''"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String context"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''. Message: '"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Throwable.getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Throwable.getMessage()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.warn(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.warn(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Error querying consul Key/Values for context ''"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String context"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''. Message: '"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Throwable.getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Throwable.getMessage()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-etcd/src/main/java/org/apache/shenyu/register/server/etcd/EtcdServerRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-etcd/src/main/java/org/apache/shenyu/register/server/etcd/EtcdServerRegisterRepository.java",
        "name": "org.apache.shenyu.register.server.etcd.EtcdServerRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 44
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private static final Logger LOGGER = LoggerFactory.getLogger(EtcdServerRegisterRepository.class);",
                "type": "ADD",
                "lineNo": 47
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(\"subscribe metadata change: {}\", rpcPath);",
                "type": "DELETE",
                "lineNo": 76
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(\"subscribe metadata change: {}\", rpcPath);",
                "type": "ADD",
                "lineNo": 78
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.etcd.EtcdServerRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'subscribe metadata change: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcPath"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'subscribe metadata change: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcPath"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(\"subscribe uri change: {}\", rpcPath);",
                "type": "DELETE",
                "lineNo": 105
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(\"subscribe uri change: {}\", rpcPath);",
                "type": "ADD",
                "lineNo": 107
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.etcd.EtcdServerRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'subscribe uri change: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcPath"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'subscribe uri change: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcPath"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-etcd/src/main/java/org/apache/shenyu/register/server/etcd/client/EtcdClient.java",
        "aPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-etcd/src/main/java/org/apache/shenyu/register/server/etcd/client/EtcdClient.java",
        "name": "org.apache.shenyu.register.server.etcd.client.EtcdClient",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 48
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private static final Logger LOGGER = LoggerFactory.getLogger(EtcdClient.class);",
                "type": "ADD",
                "lineNo": 51
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.error(\"initLease error.\", e);",
                "type": "DELETE",
                "lineNo": 76
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.error(\"initLease error.\", e);",
                "type": "ADD",
                "lineNo": 78
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "error(java.lang.String,java.lang.Exception)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.etcd.client.EtcdClient log"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.String,java.lang.Exception)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'initLease error.'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Throwable)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Throwable)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'initLease error.'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.error(\"read(key:{}) error.\", key, e);",
                "type": "DELETE",
                "lineNo": 99
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.error(\"read(key:{}) error.\", key, e);",
                "type": "ADD",
                "lineNo": 101
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "error(java.lang.String,java.lang.String,java.lang.Exception)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.etcd.client.EtcdClient log"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.String,java.lang.String,java.lang.Exception)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'read(key:{}) error.'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'read(key:{}) error.'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.debug(String.valueOf(response.getHeader()));",
                "type": "DELETE",
                "lineNo": 104
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.debug(String.valueOf(response.getHeader()));",
                "type": "ADD",
                "lineNo": 106
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "debug()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.etcd.client.EtcdClient log"
              },
              {
                "type": "CtExecutableReference",
                "value": "debug()"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.valueOf(char[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.valueOf(char[])"
              },
              {
                "type": "CtInvocation",
                "value": "getHeader()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.coreos.jetcd.kv.GetResponse response"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHeader()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.debug(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.debug(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.valueOf(char[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.valueOf(char[])"
              },
              {
                "type": "CtInvocation",
                "value": "getHeader()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.coreos.jetcd.kv.GetResponse response"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHeader()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.error(\"getChildren(path:{}) error.\", path, e);",
                "type": "DELETE",
                "lineNo": 119
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.error(\"getChildren(path:{}) error.\", path, e);",
                "type": "ADD",
                "lineNo": 121
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "error(java.lang.String,java.lang.String,java.lang.Exception)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.etcd.client.EtcdClient log"
              },
              {
                "type": "CtExecutableReference",
                "value": "error(java.lang.String,java.lang.String,java.lang.Exception)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'getChildren(path:{}) error.'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'getChildren(path:{}) error.'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.warn(String.format(\"Watch exception of %s\", \"/s\"), e);",
                "type": "DELETE",
                "lineNo": 147
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.warn(String.format(\"Watch exception of %s\", \"/s\"), e);",
                "type": "ADD",
                "lineNo": 149
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "warn(java.lang.String,java.lang.Exception)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.etcd.client.EtcdClient log"
              },
              {
                "type": "CtExecutableReference",
                "value": "warn(java.lang.String,java.lang.Exception)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Watch exception of %s'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/s'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.warn(String,Throwable)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.warn(String,Throwable)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Watch exception of %s'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/s'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-etcd/src/main/java/org/apache/shenyu/register/server/etcd/client/EtcdListenHandler.java",
        "aPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-etcd/src/main/java/org/apache/shenyu/register/server/etcd/client/EtcdListenHandler.java",
        "name": "org.apache.shenyu.register.server.etcd.client.EtcdListenHandler",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 27
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private static final Logger LOGGER = LoggerFactory.getLogger(EtcdListenHandler.class);",
                "type": "ADD",
                "lineNo": 30
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(String.format(\"unrecognized event: %s, key: %s\", event, node.getKey()));",
                "type": "DELETE",
                "lineNo": 54
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(String.format(\"unrecognized event: %s, key: %s\", event, node.getKey()));",
                "type": "ADD",
                "lineNo": 56
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.etcd.client.EtcdListenHandler log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info()"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'unrecognized event: %s, key: %s'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.server.etcd.client.Event event"
              },
              {
                "type": "CtInvocation",
                "value": "getKey()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.server.etcd.client.Node node"
              },
              {
                "type": "CtExecutableReference",
                "value": "getKey()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'unrecognized event: %s, key: %s'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.server.etcd.client.Event event"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.server.etcd.client.Node.getKey()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.server.etcd.client.Node node"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.server.etcd.client.Node.getKey()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-etcd/src/main/java/org/apache/shenyu/register/server/etcd/client/Node.java",
        "aPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-etcd/src/main/java/org/apache/shenyu/register/server/etcd/client/Node.java",
        "name": "org.apache.shenyu.register.server.etcd.client.Node",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Data",
                "type": "DELETE",
                "lineNo": 25
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.Data"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "* getKeygetKey.",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "public String getKey() {",
                "type": "ADD",
                "lineNo": 97
              },
              {
                "line": "return key;",
                "type": "ADD",
                "lineNo": 98
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 99
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 101
              },
              {
                "line": "* setKey.",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 103
              },
              {
                "line": "* @param key key",
                "type": "ADD",
                "lineNo": 104
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 105
              },
              {
                "line": "public void setKey(final String key) {",
                "type": "ADD",
                "lineNo": 106
              },
              {
                "line": "this.key = key;",
                "type": "ADD",
                "lineNo": 107
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 108
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 110
              },
              {
                "line": "* getValue.",
                "type": "ADD",
                "lineNo": 111
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 112
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 113
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 114
              },
              {
                "line": "public String getValue() {",
                "type": "ADD",
                "lineNo": 115
              },
              {
                "line": "return value;",
                "type": "ADD",
                "lineNo": 116
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 117
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 119
              },
              {
                "line": "* setValue.",
                "type": "ADD",
                "lineNo": 120
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 121
              },
              {
                "line": "* @param value value",
                "type": "ADD",
                "lineNo": 122
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 123
              },
              {
                "line": "public void setValue(final String value) {",
                "type": "ADD",
                "lineNo": 124
              },
              {
                "line": "this.value = value;",
                "type": "ADD",
                "lineNo": 125
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 126
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 128
              },
              {
                "line": "* getCreateReversion.",
                "type": "ADD",
                "lineNo": 129
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 130
              },
              {
                "line": "* @return String",
                "type": "ADD",
                "lineNo": 131
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 132
              },
              {
                "line": "public long getCreateReversion() {",
                "type": "ADD",
                "lineNo": 133
              },
              {
                "line": "return createReversion;",
                "type": "ADD",
                "lineNo": 134
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 135
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 137
              },
              {
                "line": "* setCreateReversion.",
                "type": "ADD",
                "lineNo": 138
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 139
              },
              {
                "line": "* @param createReversion createReversion",
                "type": "ADD",
                "lineNo": 140
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 141
              },
              {
                "line": "public void setCreateReversion(final long createReversion) {",
                "type": "ADD",
                "lineNo": 142
              },
              {
                "line": "this.createReversion = createReversion;",
                "type": "ADD",
                "lineNo": 143
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 144
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 146
              },
              {
                "line": "* getModReversion.",
                "type": "ADD",
                "lineNo": 147
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 148
              },
              {
                "line": "* @return long",
                "type": "ADD",
                "lineNo": 149
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 150
              },
              {
                "line": "public long getModReversion() {",
                "type": "ADD",
                "lineNo": 151
              },
              {
                "line": "return modReversion;",
                "type": "ADD",
                "lineNo": 152
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 153
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 155
              },
              {
                "line": "* setModReversion.",
                "type": "ADD",
                "lineNo": 156
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 157
              },
              {
                "line": "* @param modReversion modReversion",
                "type": "ADD",
                "lineNo": 158
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 159
              },
              {
                "line": "public void setModReversion(final long modReversion) {",
                "type": "ADD",
                "lineNo": 160
              },
              {
                "line": "this.modReversion = modReversion;",
                "type": "ADD",
                "lineNo": 161
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 162
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 164
              },
              {
                "line": "* getVersion.",
                "type": "ADD",
                "lineNo": 165
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 166
              },
              {
                "line": "* @return long",
                "type": "ADD",
                "lineNo": 167
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 168
              },
              {
                "line": "public long getVersion() {",
                "type": "ADD",
                "lineNo": 169
              },
              {
                "line": "return version;",
                "type": "ADD",
                "lineNo": 170
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 171
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 173
              },
              {
                "line": "* setVersion.",
                "type": "ADD",
                "lineNo": 174
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 175
              },
              {
                "line": "* @param version version",
                "type": "ADD",
                "lineNo": 176
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 177
              },
              {
                "line": "public void setVersion(final long version) {",
                "type": "ADD",
                "lineNo": 178
              },
              {
                "line": "this.version = version;",
                "type": "ADD",
                "lineNo": 179
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 180
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.etcd.client.Node.getKey()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.etcd.client.Node.setKey(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String key"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.etcd.client.Node.getValue()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String value"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.etcd.client.Node.setValue(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String value"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String value"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String value"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.etcd.client.Node.getCreateReversion()"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtFieldRead",
                "value": "long createReversion"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.etcd.client.Node.setCreateReversion(long)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "long createReversion"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtFieldWrite",
                "value": "long createReversion"
              },
              {
                "type": "CtVariableRead",
                "value": "long createReversion"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.etcd.client.Node.getModReversion()"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtFieldRead",
                "value": "long modReversion"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.etcd.client.Node.setModReversion(long)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "long modReversion"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtFieldWrite",
                "value": "long modReversion"
              },
              {
                "type": "CtVariableRead",
                "value": "long modReversion"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.etcd.client.Node.getVersion()"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtFieldRead",
                "value": "long version"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.etcd.client.Node.setVersion(long)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "long version"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtFieldWrite",
                "value": "long version"
              },
              {
                "type": "CtVariableRead",
                "value": "long version"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-nacos/src/main/java/org/apache/shenyu/register/server/nacos/NacosServerRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-nacos/src/main/java/org/apache/shenyu/register/server/nacos/NacosServerRegisterRepository.java",
        "name": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 56
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private static final Logger LOGGER = LoggerFactory.getLogger(NacosServerRegisterRepository.class);",
                "type": "ADD",
                "lineNo": 61
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 79
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "this.configService = ConfigFactory.createConfigService(nacosProperties);",
                "type": "DELETE",
                "lineNo": 96
              },
              {
                "line": "this.namingService = NamingFactory.createNamingService(nacosProperties);",
                "type": "DELETE",
                "lineNo": 97
              }
            ],
            "targetChanges": [
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 98
              },
              {
                "line": "this.configService = ConfigFactory.createConfigService(nacosProperties);",
                "type": "ADD",
                "lineNo": 99
              },
              {
                "line": "this.namingService = NamingFactory.createNamingService(nacosProperties);",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": "} catch (NacosException e) {",
                "type": "ADD",
                "lineNo": 101
              },
              {
                "line": "throw new ShenyuException(e);",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 103
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtFieldWrite",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtInvocation",
                "value": "createConfigService(java.util.Properties)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.nacos.api.config.ConfigFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "createConfigService(java.util.Properties)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties nacosProperties"
              },
              {
                "type": "CtFieldWrite",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtInvocation",
                "value": "createNamingService(java.util.Properties)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.nacos.api.naming.NamingFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "createNamingService(java.util.Properties)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties nacosProperties"
              }
            ],
            "targetElements": [
              {
                "type": "CtFieldWrite",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtInvocation",
                "value": "createConfigService(java.util.Properties)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.nacos.api.config.ConfigFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "createConfigService(java.util.Properties)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties nacosProperties"
              },
              {
                "type": "CtFieldWrite",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtInvocation",
                "value": "createNamingService(java.util.Properties)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.nacos.api.naming.NamingFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "createNamingService(java.util.Properties)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties nacosProperties"
              },
              {
                "type": "CtCatchVariable",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.exception.NacosException"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 105
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "Map<String, List<URIRegisterDTO>> services = new HashMap<>();",
                "type": "DELETE",
                "lineNo": 109
              },
              {
                "line": "List<Instance> healthyInstances = namingService.selectInstances(serviceName, true);",
                "type": "DELETE",
                "lineNo": 110
              },
              {
                "line": "healthyInstances.forEach(healthyInstance -> {",
                "type": "DELETE",
                "lineNo": 111
              },
              {
                "line": "String contextPath = healthyInstance.getMetadata().get(\"contextPath\");",
                "type": "DELETE",
                "lineNo": 112
              },
              {
                "line": "String serviceConfigName = RegisterPathConstants.buildServiceConfigPath(rpcType.getName(), contextPath);",
                "type": "DELETE",
                "lineNo": 113
              },
              {
                "line": "subscribeMetadata(serviceConfigName);",
                "type": "DELETE",
                "lineNo": 114
              },
              {
                "line": "metadataConfigCache.add(serviceConfigName);",
                "type": "DELETE",
                "lineNo": 115
              },
              {
                "line": "String metadata = healthyInstance.getMetadata().get(\"uriMetadata\");",
                "type": "DELETE",
                "lineNo": 116
              },
              {
                "line": "URIRegisterDTO uriRegisterDTO = GsonUtils.getInstance().fromJson(metadata, URIRegisterDTO.class);",
                "type": "DELETE",
                "lineNo": 117
              },
              {
                "line": "services.computeIfAbsent(contextPath, k -> new ArrayList<>()).add(uriRegisterDTO);",
                "type": "DELETE",
                "lineNo": 118
              },
              {
                "line": "uriServiceCache.computeIfAbsent(serviceName, k -> new ConcurrentSkipListSet<>()).add(contextPath);",
                "type": "DELETE",
                "lineNo": 119
              },
              {
                "line": "});",
                "type": "DELETE",
                "lineNo": 120
              }
            ],
            "targetChanges": [
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 114
              },
              {
                "line": "Map<String, List<URIRegisterDTO>> services = new HashMap<>();",
                "type": "ADD",
                "lineNo": 115
              },
              {
                "line": "List<Instance> healthyInstances = namingService.selectInstances(serviceName, true);",
                "type": "ADD",
                "lineNo": 116
              },
              {
                "line": "healthyInstances.forEach(healthyInstance -> {",
                "type": "ADD",
                "lineNo": 117
              },
              {
                "line": "String contextPath = healthyInstance.getMetadata().get(\"contextPath\");",
                "type": "ADD",
                "lineNo": 118
              },
              {
                "line": "String serviceConfigName = RegisterPathConstants.buildServiceConfigPath(rpcType.getName(), contextPath);",
                "type": "ADD",
                "lineNo": 119
              },
              {
                "line": "subscribeMetadata(serviceConfigName);",
                "type": "ADD",
                "lineNo": 120
              },
              {
                "line": "metadataConfigCache.add(serviceConfigName);",
                "type": "ADD",
                "lineNo": 121
              },
              {
                "line": "String metadata = healthyInstance.getMetadata().get(\"uriMetadata\");",
                "type": "ADD",
                "lineNo": 122
              },
              {
                "line": "URIRegisterDTO uriRegisterDTO = GsonUtils.getInstance().fromJson(metadata, URIRegisterDTO.class);",
                "type": "ADD",
                "lineNo": 123
              },
              {
                "line": "services.computeIfAbsent(contextPath, k -> new ArrayList<>()).add(uriRegisterDTO);",
                "type": "ADD",
                "lineNo": 124
              },
              {
                "line": "uriServiceCache.computeIfAbsent(serviceName, k -> new ConcurrentSkipListSet<>()).add(contextPath);",
                "type": "ADD",
                "lineNo": 125
              },
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 126
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Map services"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.HashMap.HashMap()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.HashMap"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List healthyInstances"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance"
              },
              {
                "type": "CtInvocation",
                "value": "selectInstances(java.lang.String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectInstances(java.lang.String,boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "forEach()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List healthyInstances"
              },
              {
                "type": "CtExecutableReference",
                "value": "forEach()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtInvocation",
                "value": "getMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'contextPath'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "buildServiceConfigPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "buildServiceConfigPath()"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "subscribeMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "subscribeMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentSkipListSet metadataConfigCache"
              },
              {
                "type": "CtFieldReference",
                "value": "java.util.concurrent.ConcurrentSkipListSet metadataConfigCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String metadata"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtInvocation",
                "value": "getMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'uriMetadata'"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "fromJson()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "fromJson()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String metadata"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String metadata"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtInvocation",
                "value": "computeIfAbsent()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map services"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.util.Map services"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "computeIfAbsent()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> k"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.server.nacos.ArrayList<>()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.server.nacos.ArrayList<>"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtInvocation",
                "value": "computeIfAbsent()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap uriServiceCache"
              },
              {
                "type": "CtFieldReference",
                "value": "java.util.concurrent.ConcurrentMap uriServiceCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "computeIfAbsent()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> k"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.server.nacos.ConcurrentSkipListSet<>()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.server.nacos.ConcurrentSkipListSet<>"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Map services"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.HashMap.HashMap()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.HashMap"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List healthyInstances"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance"
              },
              {
                "type": "CtInvocation",
                "value": "selectInstances(java.lang.String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectInstances(java.lang.String,boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "forEach()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List healthyInstances"
              },
              {
                "type": "CtExecutableReference",
                "value": "forEach()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtInvocation",
                "value": "getMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'contextPath'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "buildServiceConfigPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "buildServiceConfigPath()"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "subscribeMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "subscribeMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentSkipListSet metadataConfigCache"
              },
              {
                "type": "CtFieldReference",
                "value": "java.util.concurrent.ConcurrentSkipListSet metadataConfigCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String metadata"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtInvocation",
                "value": "getMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'uriMetadata'"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "fromJson()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "fromJson()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String metadata"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String metadata"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtInvocation",
                "value": "computeIfAbsent()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map services"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.util.Map services"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "computeIfAbsent()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> k"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.server.nacos.ArrayList<>()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.server.nacos.ArrayList<>"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtInvocation",
                "value": "computeIfAbsent()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap uriServiceCache"
              },
              {
                "type": "CtFieldReference",
                "value": "java.util.concurrent.ConcurrentMap uriServiceCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "computeIfAbsent()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> k"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.server.nacos.ConcurrentSkipListSet<>()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.server.nacos.ConcurrentSkipListSet<>"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (RPC_URI_TYPE_SET.contains(rpcType)) {",
                "type": "DELETE",
                "lineNo": 122
              },
              {
                "line": "services.values().forEach(this::publishRegisterURI);",
                "type": "DELETE",
                "lineNo": 123
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 124
              },
              {
                "line": "log.info(\"subscribe uri : {}\", serviceName);",
                "type": "DELETE",
                "lineNo": 126
              },
              {
                "line": "namingService.subscribe(serviceName, event -> {",
                "type": "DELETE",
                "lineNo": 127
              },
              {
                "line": "if (event instanceof NamingEvent) {",
                "type": "DELETE",
                "lineNo": 128
              },
              {
                "line": "List<Instance> instances = ((NamingEvent) event).getInstances();",
                "type": "DELETE",
                "lineNo": 129
              },
              {
                "line": "instances.forEach(instance -> {",
                "type": "DELETE",
                "lineNo": 130
              },
              {
                "line": "String contextPath = instance.getMetadata().get(\"contextPath\");",
                "type": "DELETE",
                "lineNo": 131
              },
              {
                "line": "uriServiceCache.computeIfAbsent(serviceName, k -> new ConcurrentSkipListSet<>()).add(contextPath);",
                "type": "DELETE",
                "lineNo": 132
              },
              {
                "line": "});",
                "type": "DELETE",
                "lineNo": 133
              },
              {
                "line": "refreshURIService(rpcType, serviceName);",
                "type": "DELETE",
                "lineNo": 134
              }
            ],
            "targetChanges": [
              {
                "line": "if (RPC_URI_TYPE_SET.contains(rpcType)) {",
                "type": "ADD",
                "lineNo": 128
              },
              {
                "line": "services.values().forEach(this::publishRegisterURI);",
                "type": "ADD",
                "lineNo": 129
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.List.contains(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.List RPC_URI_TYPE_SET"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.contains(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Iterable.forEach(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.values()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map services"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.values()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Iterable.forEach(Consumer)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository.publishRegisterURI(List)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository.publishRegisterURI(List)"
              },
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'subscribe uri : {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtInvocation",
                "value": "subscribe(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtExecutableReference",
                "value": "subscribe(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> event"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> event"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> event"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.nacos.api.naming.listener.NamingEvent"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.listener.NamingEvent"
              },
              {
                "type": "CtLocalVariable",
                "value": "List instances"
              },
              {
                "type": "CtTypeReference",
                "value": "List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance"
              },
              {
                "type": "CtInvocation",
                "value": "getInstances()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> event"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.listener.NamingEvent"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> event"
              },
              {
                "type": "CtExecutableReference",
                "value": "getInstances()"
              },
              {
                "type": "CtInvocation",
                "value": "forEach()"
              },
              {
                "type": "CtVariableRead",
                "value": "List instances"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "List instances"
              },
              {
                "type": "CtTypeReference",
                "value": "List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "forEach()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> instance"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtInvocation",
                "value": "getMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> instance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'contextPath'"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtInvocation",
                "value": "computeIfAbsent()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap uriServiceCache"
              },
              {
                "type": "CtFieldReference",
                "value": "java.util.concurrent.ConcurrentMap uriServiceCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "computeIfAbsent()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> k"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.server.nacos.ConcurrentSkipListSet<>()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.server.nacos.ConcurrentSkipListSet<>"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "refreshURIService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "refreshURIService()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceName"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.List.contains(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.List RPC_URI_TYPE_SET"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.contains(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Iterable.forEach(Consumer)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.values()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map services"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.values()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Iterable.forEach(Consumer)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository.publishRegisterURI(List)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository.publishRegisterURI(List)"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "});",
                "type": "DELETE",
                "lineNo": 136
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(\"subscribe uri : {}\", serviceName);",
                "type": "ADD",
                "lineNo": 132
              },
              {
                "line": "namingService.subscribe(serviceName, event -> {",
                "type": "ADD",
                "lineNo": 133
              },
              {
                "line": "if (event instanceof NamingEvent) {",
                "type": "ADD",
                "lineNo": 134
              },
              {
                "line": "List<Instance> instances = ((NamingEvent) event).getInstances();",
                "type": "ADD",
                "lineNo": 135
              },
              {
                "line": "instances.forEach(instance -> {",
                "type": "ADD",
                "lineNo": 136
              },
              {
                "line": "String contextPath = instance.getMetadata().get(\"contextPath\");",
                "type": "ADD",
                "lineNo": 137
              },
              {
                "line": "uriServiceCache.computeIfAbsent(serviceName, k -> new ConcurrentSkipListSet<>()).add(contextPath);",
                "type": "ADD",
                "lineNo": 138
              },
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 139
              },
              {
                "line": "refreshURIService(rpcType, serviceName);",
                "type": "ADD",
                "lineNo": 140
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 141
              },
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 142
              },
              {
                "line": "} catch (NacosException e) {",
                "type": "ADD",
                "lineNo": 143
              },
              {
                "line": "throw new ShenyuException(e);",
                "type": "ADD",
                "lineNo": 144
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 145
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'subscribe uri : {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtInvocation",
                "value": "subscribe(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtExecutableReference",
                "value": "subscribe(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> event"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> event"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> event"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.alibaba.nacos.api.naming.listener.NamingEvent"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.listener.NamingEvent"
              },
              {
                "type": "CtLocalVariable",
                "value": "List instances"
              },
              {
                "type": "CtTypeReference",
                "value": "List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance"
              },
              {
                "type": "CtInvocation",
                "value": "getInstances()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> event"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.listener.NamingEvent"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> event"
              },
              {
                "type": "CtExecutableReference",
                "value": "getInstances()"
              },
              {
                "type": "CtInvocation",
                "value": "forEach()"
              },
              {
                "type": "CtVariableRead",
                "value": "List instances"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "List instances"
              },
              {
                "type": "CtTypeReference",
                "value": "List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "forEach()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> instance"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtInvocation",
                "value": "getMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> instance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'contextPath'"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtInvocation",
                "value": "computeIfAbsent()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentMap uriServiceCache"
              },
              {
                "type": "CtFieldReference",
                "value": "java.util.concurrent.ConcurrentMap uriServiceCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "computeIfAbsent()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> k"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.server.nacos.ConcurrentSkipListSet<>()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.server.nacos.ConcurrentSkipListSet<>"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "refreshURIService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "refreshURIService()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtCatchVariable",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.exception.NacosException"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 139
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(\"subscribe metadata: {}\", serviceConfigName);",
                "type": "DELETE",
                "lineNo": 143
              },
              {
                "line": "configService.addListener(serviceConfigName, defaultGroup, new Listener() {",
                "type": "DELETE",
                "lineNo": 144
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(\"subscribe metadata: {}\", serviceConfigName);",
                "type": "ADD",
                "lineNo": 151
              },
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 152
              },
              {
                "line": "configService.addListener(serviceConfigName, defaultGroup, new Listener() {",
                "type": "ADD",
                "lineNo": 153
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'subscribe metadata: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtInvocation",
                "value": "addListener(java.lang.String,java.lang.String,org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository$1)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtExecutableReference",
                "value": "addListener(java.lang.String,java.lang.String,org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository$1)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String defaultGroup"
              },
              {
                "type": "CtNewClass",
                "value": "com.alibaba.nacos.api.config.listener.Listener()"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.config.listener.Listener"
              },
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository$1"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'subscribe metadata: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtInvocation",
                "value": "addListener(java.lang.String,java.lang.String,org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository$1)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtExecutableReference",
                "value": "addListener(java.lang.String,java.lang.String,org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository$1)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String defaultGroup"
              },
              {
                "type": "CtNewClass",
                "value": "com.alibaba.nacos.api.config.listener.Listener()"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.config.listener.Listener"
              },
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository$1"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@Override",
                "type": "DELETE",
                "lineNo": 146
              },
              {
                "line": "public Executor getExecutor() {",
                "type": "DELETE",
                "lineNo": 147
              },
              {
                "line": "return null;",
                "type": "DELETE",
                "lineNo": 148
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 149
              }
            ],
            "targetChanges": [
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 155
              },
              {
                "line": "public Executor getExecutor() {",
                "type": "ADD",
                "lineNo": 156
              },
              {
                "line": "return null;",
                "type": "ADD",
                "lineNo": 157
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 158
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository$1.getExecutor()"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.Executor"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository$1.getExecutor()"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.Executor"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@Override",
                "type": "DELETE",
                "lineNo": 151
              },
              {
                "line": "public void receiveConfigInfo(final String config) {",
                "type": "DELETE",
                "lineNo": 152
              },
              {
                "line": "registerMetadata(config);",
                "type": "DELETE",
                "lineNo": 153
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 154
              },
              {
                "line": "});",
                "type": "DELETE",
                "lineNo": 155
              }
            ],
            "targetChanges": [
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 160
              },
              {
                "line": "public void receiveConfigInfo(final String config) {",
                "type": "ADD",
                "lineNo": 161
              },
              {
                "line": "registerMetadata(config);",
                "type": "ADD",
                "lineNo": 162
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 163
              },
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 164
              },
              {
                "line": "} catch (NacosException e) {",
                "type": "ADD",
                "lineNo": 165
              },
              {
                "line": "throw new ShenyuException(e);",
                "type": "ADD",
                "lineNo": 166
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 167
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository$1.receiveConfigInfo(String)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String config"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository.registerMetadata(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository.registerMetadata(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String config"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository$1.receiveConfigInfo(String)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String config"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository.registerMetadata(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository.registerMetadata(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String config"
              },
              {
                "type": "CtCatchVariable",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.exception.NacosException"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(\"publish metadata: {}\", data);",
                "type": "DELETE",
                "lineNo": 165
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(\"publish metadata: {}\", data);",
                "type": "ADD",
                "lineNo": 177
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'publish metadata: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String data"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'publish metadata: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String data"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 173
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "List<Instance> healthyInstances = namingService.selectInstances(serviceName, true);",
                "type": "DELETE",
                "lineNo": 175
              }
            ],
            "targetChanges": [
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 186
              },
              {
                "line": "List<Instance> healthyInstances = namingService.selectInstances(serviceName, true);",
                "type": "ADD",
                "lineNo": 187
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List healthyInstances"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance"
              },
              {
                "type": "CtInvocation",
                "value": "selectInstances(java.lang.String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectInstances(java.lang.String,boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List healthyInstances"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance"
              },
              {
                "type": "CtInvocation",
                "value": "selectInstances(java.lang.String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtExecutableReference",
                "value": "selectInstances(java.lang.String,boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceName"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "List<URIRegisterDTO> registerDTOList = new ArrayList<>();",
                "type": "DELETE",
                "lineNo": 177
              },
              {
                "line": "healthyInstances.forEach(healthyInstance -> {",
                "type": "DELETE",
                "lineNo": 178
              },
              {
                "line": "if (contextPath.equals(healthyInstance.getMetadata().get(\"contextPath\"))) {",
                "type": "DELETE",
                "lineNo": 179
              },
              {
                "line": "String metadata = healthyInstance.getMetadata().get(\"uriMetadata\");",
                "type": "DELETE",
                "lineNo": 180
              },
              {
                "line": "URIRegisterDTO uriRegisterDTO = GsonUtils.getInstance().fromJson(metadata, URIRegisterDTO.class);",
                "type": "DELETE",
                "lineNo": 181
              },
              {
                "line": "registerDTOList.add(uriRegisterDTO);",
                "type": "DELETE",
                "lineNo": 182
              }
            ],
            "targetChanges": [
              {
                "line": "List<URIRegisterDTO> registerDTOList = new ArrayList<>();",
                "type": "ADD",
                "lineNo": 189
              },
              {
                "line": "healthyInstances.forEach(healthyInstance -> {",
                "type": "ADD",
                "lineNo": 190
              },
              {
                "line": "if (contextPath.equals(healthyInstance.getMetadata().get(\"contextPath\"))) {",
                "type": "ADD",
                "lineNo": 191
              },
              {
                "line": "String metadata = healthyInstance.getMetadata().get(\"uriMetadata\");",
                "type": "ADD",
                "lineNo": 192
              },
              {
                "line": "URIRegisterDTO uriRegisterDTO = GsonUtils.getInstance().fromJson(metadata, URIRegisterDTO.class);",
                "type": "ADD",
                "lineNo": 193
              },
              {
                "line": "registerDTOList.add(uriRegisterDTO);",
                "type": "ADD",
                "lineNo": 194
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List registerDTOList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtInvocation",
                "value": "forEach()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List healthyInstances"
              },
              {
                "type": "CtExecutableReference",
                "value": "forEach()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtInvocation",
                "value": "equals()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtParameterReference",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtExecutableReference",
                "value": "equals()"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtInvocation",
                "value": "getMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'contextPath'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String metadata"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtInvocation",
                "value": "getMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'uriMetadata'"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "fromJson()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "fromJson()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String metadata"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String metadata"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List registerDTOList"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.util.List registerDTOList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List registerDTOList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtInvocation",
                "value": "forEach()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List healthyInstances"
              },
              {
                "type": "CtExecutableReference",
                "value": "forEach()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtInvocation",
                "value": "equals()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtParameterReference",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtExecutableReference",
                "value": "equals()"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtInvocation",
                "value": "getMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'contextPath'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String metadata"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtInvocation",
                "value": "getMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> healthyInstance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'uriMetadata'"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "fromJson()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "fromJson()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String metadata"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String metadata"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List registerDTOList"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.util.List registerDTOList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "String serviceConfigName = RegisterPathConstants.buildServiceConfigPath(rpcType.getName(), contextPath);",
                "type": "DELETE",
                "lineNo": 184
              },
              {
                "line": "if (!metadataConfigCache.contains(serviceConfigName)) {",
                "type": "DELETE",
                "lineNo": 185
              },
              {
                "line": "subscribeMetadata(serviceConfigName);",
                "type": "DELETE",
                "lineNo": 186
              },
              {
                "line": "metadataConfigCache.add(serviceConfigName);",
                "type": "DELETE",
                "lineNo": 187
              }
            ],
            "targetChanges": [
              {
                "line": "String serviceConfigName = RegisterPathConstants.buildServiceConfigPath(rpcType.getName(), contextPath);",
                "type": "ADD",
                "lineNo": 196
              },
              {
                "line": "if (!metadataConfigCache.contains(serviceConfigName)) {",
                "type": "ADD",
                "lineNo": 197
              },
              {
                "line": "subscribeMetadata(serviceConfigName);",
                "type": "ADD",
                "lineNo": 198
              },
              {
                "line": "metadataConfigCache.add(serviceConfigName);",
                "type": "ADD",
                "lineNo": 199
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 200
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "buildServiceConfigPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "buildServiceConfigPath()"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtParameterReference",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtInvocation",
                "value": "contains()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentSkipListSet metadataConfigCache"
              },
              {
                "type": "CtFieldReference",
                "value": "java.util.concurrent.ConcurrentSkipListSet metadataConfigCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "contains()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "subscribeMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "subscribeMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentSkipListSet metadataConfigCache"
              },
              {
                "type": "CtFieldReference",
                "value": "java.util.concurrent.ConcurrentSkipListSet metadataConfigCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "buildServiceConfigPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "buildServiceConfigPath()"
              },
              {
                "type": "CtInvocation",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              },
              {
                "type": "CtExecutableReference",
                "value": "getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtParameterReference",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtInvocation",
                "value": "contains()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentSkipListSet metadataConfigCache"
              },
              {
                "type": "CtFieldReference",
                "value": "java.util.concurrent.ConcurrentSkipListSet metadataConfigCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "contains()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "subscribeMetadata()"
              },
              {
                "type": "CtExecutableReference",
                "value": "subscribeMetadata()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentSkipListSet metadataConfigCache"
              },
              {
                "type": "CtFieldReference",
                "value": "java.util.concurrent.ConcurrentSkipListSet metadataConfigCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String serviceConfigName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 202
              },
              {
                "line": "if (!RPC_URI_TYPE_SET.contains(rpcType)) {",
                "type": "ADD",
                "lineNo": 204
              },
              {
                "line": "return;",
                "type": "ADD",
                "lineNo": 205
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.List.contains(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.List RPC_URI_TYPE_SET"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.contains(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "});",
                "type": "DELETE",
                "lineNo": 190
              },
              {
                "line": "if (!RPC_URI_TYPE_SET.contains(rpcType)) {",
                "type": "DELETE",
                "lineNo": 191
              },
              {
                "line": "return;",
                "type": "DELETE",
                "lineNo": 192
              }
            ],
            "targetChanges": [
              {
                "line": "if (registerDTOList.isEmpty()) {",
                "type": "ADD",
                "lineNo": 207
              },
              {
                "line": "URIRegisterDTO uriRegisterDTO = new URIRegisterDTO();",
                "type": "ADD",
                "lineNo": 208
              },
              {
                "line": "uriRegisterDTO.setContextPath(\"/\" + contextPath);",
                "type": "ADD",
                "lineNo": 209
              },
              {
                "line": "registerDTOList.add(uriRegisterDTO);",
                "type": "ADD",
                "lineNo": 210
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 211
              },
              {
                "line": "publishRegisterURI(registerDTOList);",
                "type": "ADD",
                "lineNo": 212
              },
              {
                "line": "} catch (NacosException e) {",
                "type": "ADD",
                "lineNo": 213
              },
              {
                "line": "throw new ShenyuException(e);",
                "type": "ADD",
                "lineNo": 214
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.List.contains(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.List RPC_URI_TYPE_SET"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.contains(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.enums.RpcTypeEnum rpcType"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.List.isEmpty()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List registerDTOList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.isEmpty()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.URIRegisterDTO()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.setContextPath(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.setContextPath(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List registerDTOList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository.publishRegisterURI(List)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository.publishRegisterURI(List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List registerDTOList"
              },
              {
                "type": "CtCatchVariable",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.exception.NacosException"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (registerDTOList.isEmpty()) {",
                "type": "DELETE",
                "lineNo": 194
              },
              {
                "line": "URIRegisterDTO uriRegisterDTO = URIRegisterDTO.builder().contextPath(\"/\" + contextPath).build();",
                "type": "DELETE",
                "lineNo": 195
              },
              {
                "line": "registerDTOList.add(uriRegisterDTO);",
                "type": "DELETE",
                "lineNo": 196
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 197
              },
              {
                "line": "publishRegisterURI(registerDTOList);",
                "type": "DELETE",
                "lineNo": 198
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.List.isEmpty()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List registerDTOList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.isEmpty()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "contextPath(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "contextPath(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List registerDTOList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository.publishRegisterURI(List)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository.publishRegisterURI(List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List registerDTOList"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "log.info(\"publish uri: {}\", registerDTOList);",
                "type": "DELETE",
                "lineNo": 202
              }
            ],
            "targetChanges": [
              {
                "line": "LOGGER.info(\"publish uri: {}\", registerDTOList);",
                "type": "ADD",
                "lineNo": 219
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "info(java.lang.String,java.util.List)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepository log"
              },
              {
                "type": "CtExecutableReference",
                "value": "info(java.lang.String,java.util.List)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'publish uri: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List registerDTOList"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'publish uri: {}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List registerDTOList"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 206
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "return configService.getConfig(configName, defaultGroup, 5000);",
                "type": "DELETE",
                "lineNo": 208
              }
            ],
            "targetChanges": [
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 224
              },
              {
                "line": "return configService.getConfig(configName, defaultGroup, 5000);",
                "type": "ADD",
                "lineNo": 225
              },
              {
                "line": "} catch (NacosException e) {",
                "type": "ADD",
                "lineNo": 226
              },
              {
                "line": "throw new ShenyuException(e);",
                "type": "ADD",
                "lineNo": 227
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 228
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "getConfig(java.lang.String,java.lang.String,int)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtExecutableReference",
                "value": "getConfig(java.lang.String,java.lang.String,int)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String configName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String defaultGroup"
              },
              {
                "type": "CtLiteral",
                "value": "int '5000'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "getConfig(java.lang.String,java.lang.String,int)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.config.ConfigService configService"
              },
              {
                "type": "CtExecutableReference",
                "value": "getConfig(java.lang.String,java.lang.String,int)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String configName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String defaultGroup"
              },
              {
                "type": "CtLiteral",
                "value": "int '5000'"
              },
              {
                "type": "CtCatchVariable",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.exception.NacosException"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.exception.NacosException e"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-nacos/src/test/java/org/apache/shenyu/register/server/nacos/NacosServerRegisterRepositoryTest.java",
        "aPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-nacos/src/test/java/org/apache/shenyu/register/server/nacos/NacosServerRegisterRepositoryTest.java",
        "name": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepositoryTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public void setUp() throws NoSuchFieldException, IllegalAccessException {",
                "type": "DELETE",
                "lineNo": 68
              }
            ],
            "targetChanges": [
              {
                "line": "public void setUp() throws NoSuchFieldException, IllegalAccessException, NacosException {",
                "type": "ADD",
                "lineNo": 68
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepositoryTest.setUp()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NoSuchFieldException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.IllegalAccessException"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepositoryTest.setUp()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NoSuchFieldException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.IllegalAccessException"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.exception.NacosException"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 89
              },
              {
                "line": "private ConfigService mockConfigService() {",
                "type": "DELETE",
                "lineNo": 90
              }
            ],
            "targetChanges": [
              {
                "line": "private ConfigService mockConfigService() throws NacosException {",
                "type": "ADD",
                "lineNo": 89
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepositoryTest.mockConfigService()"
              },
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.config.ConfigService"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepositoryTest.mockConfigService()"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.config.ConfigService"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.exception.NacosException"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 107
              },
              {
                "line": "private NamingService mockNamingService() {",
                "type": "DELETE",
                "lineNo": 108
              }
            ],
            "targetChanges": [
              {
                "line": "private NamingService mockNamingService() throws NacosException {",
                "type": "ADD",
                "lineNo": 106
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepositoryTest.mockNamingService()"
              },
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.NamingService"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.server.nacos.NacosServerRegisterRepositoryTest.mockNamingService()"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.NamingService"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.exception.NacosException"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-zookeeper/src/main/java/org/apache/shenyu/register/server/zookeeper/ZookeeperServerRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-server/shenyu-register-server-zookeeper/src/main/java/org/apache/shenyu/register/server/zookeeper/ZookeeperServerRegisterRepository.java",
        "name": "org.apache.shenyu.register.server.zookeeper.ZookeeperServerRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Slf4j",
                "type": "DELETE",
                "lineNo": 45
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.extern.slf4j.Slf4j"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "@SneakyThrows",
                "type": "DELETE",
                "lineNo": 163
              }
            ],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "lombok.SneakyThrows"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "40e1f22e7",
    "aCommit": "6f90d1a12",
    "changes": [
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/listener/etcd/EtcdClient.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/listener/etcd/EtcdClient.java",
        "name": "org.apache.shenyu.admin.listener.etcd.EtcdClient",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "client.getKVClient().delete(ByteSequence.from(path, StandardCharsets.UTF_8), option);",
                "type": "DELETE",
                "lineNo": 100
              }
            ],
            "targetChanges": [
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 101
              },
              {
                "line": "client.getKVClient().delete(ByteSequence.from(path, StandardCharsets.UTF_8), option).get(10, TimeUnit.SECONDS);",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "} catch (Exception e) {",
                "type": "ADD",
                "lineNo": 103
              },
              {
                "line": "LOG.error(\"delete node of recursive error.\", e);",
                "type": "ADD",
                "lineNo": 104
              },
              {
                "line": "throw new ShenyuException(e.getMessage());",
                "type": "ADD",
                "lineNo": 105
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 106
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "delete(io.etcd.jetcd.options.DeleteOption)"
              },
              {
                "type": "CtInvocation",
                "value": "getKVClient()"
              },
              {
                "type": "CtFieldRead",
                "value": "io.etcd.jetcd.Client client"
              },
              {
                "type": "CtExecutableReference",
                "value": "getKVClient()"
              },
              {
                "type": "CtExecutableReference",
                "value": "delete(io.etcd.jetcd.options.DeleteOption)"
              },
              {
                "type": "CtInvocation",
                "value": "from(java.lang.String,java.nio.charset.Charset)"
              },
              {
                "type": "CtTypeAccess",
                "value": "io.etcd.jetcd.ByteSequence"
              },
              {
                "type": "CtExecutableReference",
                "value": "from(java.lang.String,java.nio.charset.Charset)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtFieldRead",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.nio.charset.StandardCharsets"
              },
              {
                "type": "CtFieldReference",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.options.DeleteOption option"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "get(int,java.util.concurrent.TimeUnit)"
              },
              {
                "type": "CtInvocation",
                "value": "delete(io.etcd.jetcd.options.DeleteOption)"
              },
              {
                "type": "CtInvocation",
                "value": "getKVClient()"
              },
              {
                "type": "CtFieldRead",
                "value": "io.etcd.jetcd.Client client"
              },
              {
                "type": "CtExecutableReference",
                "value": "getKVClient()"
              },
              {
                "type": "CtExecutableReference",
                "value": "delete(io.etcd.jetcd.options.DeleteOption)"
              },
              {
                "type": "CtInvocation",
                "value": "from(java.lang.String,java.nio.charset.Charset)"
              },
              {
                "type": "CtTypeAccess",
                "value": "io.etcd.jetcd.ByteSequence"
              },
              {
                "type": "CtExecutableReference",
                "value": "from(java.lang.String,java.nio.charset.Charset)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtFieldRead",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.nio.charset.StandardCharsets"
              },
              {
                "type": "CtFieldReference",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.options.DeleteOption option"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(int,java.util.concurrent.TimeUnit)"
              },
              {
                "type": "CtLiteral",
                "value": "int '10'"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.TimeUnit SECONDS"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.concurrent.TimeUnit"
              },
              {
                "type": "CtFieldReference",
                "value": "java.util.concurrent.TimeUnit SECONDS"
              },
              {
                "type": "CtCatchVariable",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Throwable)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Throwable)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'delete node of recursive error.'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Throwable.getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Throwable.getMessage()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/listener/etcd/EtcdClientTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/listener/etcd/EtcdClientTest.java",
        "name": "org.apache.shenyu.admin.listener.etcd.EtcdClientTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "when(client.getKVClient().delete(any(ByteSequence.class), any(DeleteOption.class))).thenReturn(mock(CompletableFuture.class));",
                "type": "ADD",
                "lineNo": 89
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn()"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "delete()"
              },
              {
                "type": "CtInvocation",
                "value": "getKVClient()"
              },
              {
                "type": "CtFieldRead",
                "value": "io.etcd.jetcd.Client client"
              },
              {
                "type": "CtExecutableReference",
                "value": "getKVClient()"
              },
              {
                "type": "CtExecutableReference",
                "value": "delete()"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn()"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-proxy/shenyu-plugin-divide/src/main/java/org/apache/shenyu/plugin/divide/handler/DividePluginDataHandler.java",
        "aPath": "shenyu-plugin/shenyu-plugin-proxy/shenyu-plugin-divide/src/main/java/org/apache/shenyu/plugin/divide/handler/DividePluginDataHandler.java",
        "name": "org.apache.shenyu.plugin.divide.handler.DividePluginDataHandler",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "if (ObjectUtils.isEmpty(upstreamList)) {",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "return Collections.emptyList();",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 97
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isEmpty(java.util.List)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.util.ObjectUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEmpty(java.util.List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List upstreamList"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collections.emptyList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collections.emptyList()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-sync-data-center/shenyu-sync-data-etcd/src/main/java/org/apache/shenyu/sync/data/etcd/EtcdClient.java",
        "aPath": "shenyu-sync-data-center/shenyu-sync-data-etcd/src/main/java/org/apache/shenyu/sync/data/etcd/EtcdClient.java",
        "name": "org.apache.shenyu.sync.data.etcd.EtcdClient",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "private final ConcurrentHashMap<String, Watch.Watcher> watchChildCache = new ConcurrentHashMap<>();",
                "type": "ADD",
                "lineNo": 58
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.util.concurrent.ConcurrentHashMap watchChildCache"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.ConcurrentHashMap"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.Watch$Watcher"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.Watch"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.ConcurrentHashMap"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Watch.Watcher watch = client.getWatchClient().watch(ByteSequence.from(key, UTF_8), listener);",
                "type": "DELETE",
                "lineNo": 185
              },
              {
                "line": "watchCache.put(key, watch);",
                "type": "DELETE",
                "lineNo": 186
              }
            ],
            "targetChanges": [
              {
                "line": "if (!watchCache.containsKey(key)) {",
                "type": "ADD",
                "lineNo": 188
              },
              {
                "line": "Watch.Watcher watch = client.getWatchClient().watch(ByteSequence.from(key, UTF_8), listener);",
                "type": "ADD",
                "lineNo": 189
              },
              {
                "line": "watchCache.put(key, watch);",
                "type": "ADD",
                "lineNo": 190
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 191
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "io.etcd.jetcd.Watch$Watcher watch"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.Watch$Watcher"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.Watch"
              },
              {
                "type": "CtInvocation",
                "value": "watch(Watch.Listener)"
              },
              {
                "type": "CtInvocation",
                "value": "getWatchClient()"
              },
              {
                "type": "CtFieldRead",
                "value": "io.etcd.jetcd.Client client"
              },
              {
                "type": "CtExecutableReference",
                "value": "getWatchClient()"
              },
              {
                "type": "CtExecutableReference",
                "value": "watch(Watch.Listener)"
              },
              {
                "type": "CtInvocation",
                "value": "from(java.lang.String,java.nio.charset.Charset)"
              },
              {
                "type": "CtTypeAccess",
                "value": "io.etcd.jetcd.ByteSequence"
              },
              {
                "type": "CtExecutableReference",
                "value": "from(java.lang.String,java.nio.charset.Charset)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtFieldRead",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.Watch$Listener listener"
              },
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String,Watch.Watcher)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap watchCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String,Watch.Watcher)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.Watch$Watcher watch"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "containsKey(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap watchCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "containsKey(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtLocalVariable",
                "value": "io.etcd.jetcd.Watch$Watcher watch"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.Watch$Watcher"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.Watch"
              },
              {
                "type": "CtInvocation",
                "value": "watch(Watch.Listener)"
              },
              {
                "type": "CtInvocation",
                "value": "getWatchClient()"
              },
              {
                "type": "CtFieldRead",
                "value": "io.etcd.jetcd.Client client"
              },
              {
                "type": "CtExecutableReference",
                "value": "getWatchClient()"
              },
              {
                "type": "CtExecutableReference",
                "value": "watch(Watch.Listener)"
              },
              {
                "type": "CtInvocation",
                "value": "from(java.lang.String,java.nio.charset.Charset)"
              },
              {
                "type": "CtTypeAccess",
                "value": "io.etcd.jetcd.ByteSequence"
              },
              {
                "type": "CtExecutableReference",
                "value": "from(java.lang.String,java.nio.charset.Charset)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtFieldRead",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.Watch$Listener listener"
              },
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String,Watch.Watcher)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap watchCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String,Watch.Watcher)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.Watch$Watcher watch"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Watch.Watcher watch = client.getWatchClient().watch(ByteSequence.from(key, UTF_8), option, listener);",
                "type": "DELETE",
                "lineNo": 203
              },
              {
                "line": "watchCache.put(key, watch);",
                "type": "DELETE",
                "lineNo": 204
              }
            ],
            "targetChanges": [
              {
                "line": "if (!watchChildCache.containsKey(key)) {",
                "type": "ADD",
                "lineNo": 208
              },
              {
                "line": "Watch.Watcher watch = client.getWatchClient().watch(ByteSequence.from(key, UTF_8), option, listener);",
                "type": "ADD",
                "lineNo": 209
              },
              {
                "line": "watchChildCache.put(key, watch);",
                "type": "ADD",
                "lineNo": 210
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 211
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "io.etcd.jetcd.Watch$Watcher watch"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.Watch$Watcher"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.Watch"
              },
              {
                "type": "CtInvocation",
                "value": "watch(io.etcd.jetcd.options.WatchOption,Watch.Listener)"
              },
              {
                "type": "CtInvocation",
                "value": "getWatchClient()"
              },
              {
                "type": "CtFieldRead",
                "value": "io.etcd.jetcd.Client client"
              },
              {
                "type": "CtExecutableReference",
                "value": "getWatchClient()"
              },
              {
                "type": "CtExecutableReference",
                "value": "watch(io.etcd.jetcd.options.WatchOption,Watch.Listener)"
              },
              {
                "type": "CtInvocation",
                "value": "from(java.lang.String,java.nio.charset.Charset)"
              },
              {
                "type": "CtTypeAccess",
                "value": "io.etcd.jetcd.ByteSequence"
              },
              {
                "type": "CtExecutableReference",
                "value": "from(java.lang.String,java.nio.charset.Charset)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtFieldRead",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.options.WatchOption option"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.Watch$Listener listener"
              },
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String,Watch.Watcher)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap watchCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String,Watch.Watcher)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.Watch$Watcher watch"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "containsKey(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap watchChildCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "containsKey(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtLocalVariable",
                "value": "io.etcd.jetcd.Watch$Watcher watch"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.Watch$Watcher"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.Watch"
              },
              {
                "type": "CtInvocation",
                "value": "watch(io.etcd.jetcd.options.WatchOption,Watch.Listener)"
              },
              {
                "type": "CtInvocation",
                "value": "getWatchClient()"
              },
              {
                "type": "CtFieldRead",
                "value": "io.etcd.jetcd.Client client"
              },
              {
                "type": "CtExecutableReference",
                "value": "getWatchClient()"
              },
              {
                "type": "CtExecutableReference",
                "value": "watch(io.etcd.jetcd.options.WatchOption,Watch.Listener)"
              },
              {
                "type": "CtInvocation",
                "value": "from(java.lang.String,java.nio.charset.Charset)"
              },
              {
                "type": "CtTypeAccess",
                "value": "io.etcd.jetcd.ByteSequence"
              },
              {
                "type": "CtExecutableReference",
                "value": "from(java.lang.String,java.nio.charset.Charset)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtFieldRead",
                "value": "java.nio.charset.Charset UTF_8"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.options.WatchOption option"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.Watch$Listener listener"
              },
              {
                "type": "CtInvocation",
                "value": "put(java.lang.String,Watch.Watcher)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap watchChildCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "put(java.lang.String,Watch.Watcher)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.Watch$Watcher watch"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "updateHandler.accept(path, value);",
                "type": "DELETE",
                "lineNo": 215
              }
            ],
            "targetChanges": [
              {
                "line": "Optional.ofNullable(updateHandler).ifPresent(handler -> handler.accept(path, value));",
                "type": "ADD",
                "lineNo": 222
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "accept()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.BiConsumer updateHandler"
              },
              {
                "type": "CtParameterReference",
                "value": "java.util.function.BiConsumer updateHandler"
              },
              {
                "type": "CtExecutableReference",
                "value": "accept()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String path"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String value"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String value"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "ifPresent()"
              },
              {
                "type": "CtInvocation",
                "value": "ofNullable()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "ofNullable()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.BiConsumer updateHandler"
              },
              {
                "type": "CtParameterReference",
                "value": "java.util.function.BiConsumer updateHandler"
              },
              {
                "type": "CtExecutableReference",
                "value": "ifPresent()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> handler"
              },
              {
                "type": "CtInvocation",
                "value": "accept()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> handler"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> handler"
              },
              {
                "type": "CtExecutableReference",
                "value": "accept()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String path"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String value"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String value"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "deleteHandler.accept(path);",
                "type": "DELETE",
                "lineNo": 218
              }
            ],
            "targetChanges": [
              {
                "line": "Optional.ofNullable(deleteHandler).ifPresent(handler -> handler.accept(path));",
                "type": "ADD",
                "lineNo": 225
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "accept()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Consumer deleteHandler"
              },
              {
                "type": "CtParameterReference",
                "value": "java.util.function.Consumer deleteHandler"
              },
              {
                "type": "CtExecutableReference",
                "value": "accept()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String path"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "ifPresent()"
              },
              {
                "type": "CtInvocation",
                "value": "ofNullable()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "ofNullable()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.Consumer deleteHandler"
              },
              {
                "type": "CtParameterReference",
                "value": "java.util.function.Consumer deleteHandler"
              },
              {
                "type": "CtExecutableReference",
                "value": "ifPresent()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> handler"
              },
              {
                "type": "CtInvocation",
                "value": "accept()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> handler"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> handler"
              },
              {
                "type": "CtExecutableReference",
                "value": "accept()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.lang.String path"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "});",
                "type": "DELETE",
                "lineNo": 223
              }
            ],
            "targetChanges": [
              {
                "line": "}, throwable -> {",
                "type": "ADD",
                "lineNo": 230
              },
              {
                "line": "LOG.error(\"etcd watch error {}\", throwable.getMessage(), throwable);",
                "type": "ADD",
                "lineNo": 231
              },
              {
                "line": "throw new ShenyuException(throwable);",
                "type": "ADD",
                "lineNo": 232
              },
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 233
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtParameter",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtInvocation",
                "value": "error()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtFieldReference",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtExecutableReference",
                "value": "error()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'etcd watch error {}'"
              },
              {
                "type": "CtInvocation",
                "value": "getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtExecutableReference",
                "value": "getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException()"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> throwable"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "if (watchChildCache.containsKey(key)) {",
                "type": "ADD",
                "lineNo": 246
              },
              {
                "line": "watchChildCache.get(key).close();",
                "type": "ADD",
                "lineNo": 247
              },
              {
                "line": "watchChildCache.remove(key);",
                "type": "ADD",
                "lineNo": 248
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 249
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "containsKey(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap watchChildCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "containsKey(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtInvocation",
                "value": "close()"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap watchChildCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              },
              {
                "type": "CtExecutableReference",
                "value": "close()"
              },
              {
                "type": "CtInvocation",
                "value": "remove(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap watchChildCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "remove(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String key"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-sync-data-center/shenyu-sync-data-etcd/src/main/java/org/apache/shenyu/sync/data/etcd/EtcdSyncDataService.java",
        "aPath": "shenyu-sync-data-center/shenyu-sync-data-etcd/src/main/java/org/apache/shenyu/sync/data/etcd/EtcdSyncDataService.java",
        "name": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private Map<String, String> keysMap = new ConcurrentHashMap<>();",
                "type": "DELETE",
                "lineNo": 78
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.ConcurrentHashMap"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "watchAllKeys();",
                "type": "DELETE",
                "lineNo": 102
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.watchAllKeys()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.watchAllKeys()"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "private void watchAllKeys() {",
                "type": "DELETE",
                "lineNo": 108
              },
              {
                "line": "keysMap = etcdClient.getKeysMapByPrefix(PRE_FIX);",
                "type": "DELETE",
                "lineNo": 109
              },
              {
                "line": "etcdClient.watchDataChange(PRE_FIX, (updateKey, updateValue) -> {",
                "type": "DELETE",
                "lineNo": 110
              },
              {
                "line": "keysMap.put(updateKey, updateValue);",
                "type": "DELETE",
                "lineNo": 111
              },
              {
                "line": "}, deleteKey -> keysMap.remove(deleteKey));",
                "type": "DELETE",
                "lineNo": 112
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 114
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.watchAllKeys()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.getKeysMapByPrefix(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient etcdClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.getKeysMapByPrefix(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PRE_FIX"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.watchDataChange(String,BiConsumer,Consumer)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient etcdClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.watchDataChange(String,BiConsumer,Consumer)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PRE_FIX"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String updateKey"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String updateValue"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.put(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.put(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updateKey"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updateValue"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String deleteKey"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.remove(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.remove(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String deleteKey"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "List<String> pluginChildren = etcdClientGetChildrenByMap(pluginParent, keysMap);",
                "type": "DELETE",
                "lineNo": 118
              }
            ],
            "targetChanges": [
              {
                "line": "List<String> pluginChildren = etcdClientGetChildren(pluginParent);",
                "type": "ADD",
                "lineNo": 104
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List pluginChildren"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildrenByMap(String,Map)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildrenByMap(String,Map)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginParent"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List pluginChildren"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildren(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildren(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginParent"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "etcdClient.watchChildChange(pluginParent, (updateNode, updateValue) -> {",
                "type": "DELETE",
                "lineNo": 122
              },
              {
                "line": "if (!updateNode.isEmpty()) {",
                "type": "DELETE",
                "lineNo": 123
              },
              {
                "line": "watcherAll(updateNode);",
                "type": "DELETE",
                "lineNo": 124
              }
            ],
            "targetChanges": [
              {
                "line": "etcdClient.watchChildChange(pluginParent, (pluginPath, updateValue) -> {",
                "type": "ADD",
                "lineNo": 108
              },
              {
                "line": "if (!pluginPath.isEmpty()) {",
                "type": "ADD",
                "lineNo": 109
              },
              {
                "line": "final String pluginName = pluginPath.substring(pluginPath.lastIndexOf(\"/\") + 1);",
                "type": "ADD",
                "lineNo": 110
              },
              {
                "line": "cachePluginData(updateValue);",
                "type": "ADD",
                "lineNo": 111
              },
              {
                "line": "subscribePluginDataChanges(pluginPath, pluginName);",
                "type": "ADD",
                "lineNo": 112
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.watchChildChange(String,BiConsumer,Consumer)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient etcdClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.watchChildChange(String,BiConsumer,Consumer)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginParent"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String updateNode"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String updateValue"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.isEmpty()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updateNode"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.isEmpty()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.watcherAll(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.watcherAll(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updateNode"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.watchChildChange(String,BiConsumer,Consumer)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient etcdClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.watchChildChange(String,BiConsumer,Consumer)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginParent"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String pluginPath"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String updateValue"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.isEmpty()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginPath"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.isEmpty()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.substring(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginPath"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.substring(int)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.lastIndexOf(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginPath"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.lastIndexOf(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/'"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cachePluginData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cachePluginData(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updateValue"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.subscribePluginDataChanges(String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.subscribePluginDataChanges(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginPath"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginName"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "cachePluginData(keysMap.get(pluginPath));",
                "type": "DELETE",
                "lineNo": 137
              }
            ],
            "targetChanges": [
              {
                "line": "cachePluginData(etcdClient.get(pluginPath));",
                "type": "ADD",
                "lineNo": 125
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cachePluginData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cachePluginData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginPath"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cachePluginData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cachePluginData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.get(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient etcdClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.get(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginPath"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "List<String> childrenList = etcdClientGetChildrenByMap(selectorParentPath, keysMap);",
                "type": "DELETE",
                "lineNo": 143
              }
            ],
            "targetChanges": [
              {
                "line": "List<String> childrenList = etcdClientGetChildren(selectorParentPath);",
                "type": "ADD",
                "lineNo": 131
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List childrenList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildrenByMap(String,Map)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildrenByMap(String,Map)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorParentPath"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List childrenList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildren(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildren(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorParentPath"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "cacheSelectorData(keysMap.get(realPath));",
                "type": "DELETE",
                "lineNo": 147
              }
            ],
            "targetChanges": [
              {
                "line": "cacheSelectorData(etcdClient.get(realPath));",
                "type": "ADD",
                "lineNo": 135
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheSelectorData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheSelectorData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String realPath"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheSelectorData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheSelectorData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.get(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient etcdClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.get(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String realPath"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "List<String> childrenList = etcdClientGetChildrenByMap(ruleParent, keysMap);",
                "type": "DELETE",
                "lineNo": 156
              }
            ],
            "targetChanges": [
              {
                "line": "List<String> childrenList = etcdClientGetChildren(ruleParent);",
                "type": "ADD",
                "lineNo": 144
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List childrenList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildrenByMap(String,Map)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildrenByMap(String,Map)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String ruleParent"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List childrenList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildren(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildren(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String ruleParent"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "cacheRuleData(keysMap.get(realPath));",
                "type": "DELETE",
                "lineNo": 160
              }
            ],
            "targetChanges": [
              {
                "line": "cacheRuleData(etcdClient.get(realPath));",
                "type": "ADD",
                "lineNo": 148
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheRuleData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheRuleData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String realPath"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheRuleData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheRuleData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.get(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient etcdClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.get(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String realPath"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "List<String> childrenList = etcdClientGetChildrenByMap(appAuthParent, keysMap);",
                "type": "DELETE",
                "lineNo": 169
              }
            ],
            "targetChanges": [
              {
                "line": "List<String> childrenList = etcdClientGetChildren(appAuthParent);",
                "type": "ADD",
                "lineNo": 157
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List childrenList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildrenByMap(String,Map)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildrenByMap(String,Map)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String appAuthParent"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List childrenList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildren(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildren(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String appAuthParent"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "cacheAuthData(keysMap.get(realPath));",
                "type": "DELETE",
                "lineNo": 173
              }
            ],
            "targetChanges": [
              {
                "line": "cacheAuthData(etcdClient.get(realPath));",
                "type": "ADD",
                "lineNo": 161
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheAuthData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheAuthData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String realPath"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheAuthData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheAuthData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.get(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient etcdClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.get(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String realPath"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "List<String> childrenList = etcdClientGetChildrenByMap(metaDataPath, keysMap);",
                "type": "DELETE",
                "lineNo": 182
              }
            ],
            "targetChanges": [
              {
                "line": "List<String> childrenList = etcdClientGetChildren(metaDataPath);",
                "type": "ADD",
                "lineNo": 170
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List childrenList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildrenByMap(String,Map)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildrenByMap(String,Map)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String metaDataPath"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List childrenList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildren(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildren(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String metaDataPath"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "cacheMetaData(keysMap.get(realPath));",
                "type": "DELETE",
                "lineNo": 186
              }
            ],
            "targetChanges": [
              {
                "line": "cacheMetaData(etcdClient.get(realPath));",
                "type": "ADD",
                "lineNo": 174
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheMetaData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheMetaData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String realPath"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheMetaData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheMetaData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.get(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient etcdClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.get(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String realPath"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "cacheSelectorData(keysMap.get(updatePath));",
                "type": "DELETE",
                "lineNo": 197
              }
            ],
            "targetChanges": [
              {
                "line": "cacheSelectorData(updateValue);",
                "type": "ADD",
                "lineNo": 185
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheSelectorData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheSelectorData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updatePath"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheSelectorData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheSelectorData(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updateValue"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "cacheRuleData(keysMap.get(updatePath));",
                "type": "DELETE",
                "lineNo": 203
              }
            ],
            "targetChanges": [
              {
                "line": "cacheRuleData(updateValue);",
                "type": "ADD",
                "lineNo": 191
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheRuleData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheRuleData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updatePath"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheRuleData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheRuleData(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updateValue"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "cacheAuthData(keysMap.get(updatePath));",
                "type": "DELETE",
                "lineNo": 209
              }
            ],
            "targetChanges": [
              {
                "line": "cacheAuthData(updateValue);",
                "type": "ADD",
                "lineNo": 197
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheAuthData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheAuthData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updatePath"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheAuthData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheAuthData(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updateValue"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "cacheMetaData(keysMap.get(updatePath));",
                "type": "DELETE",
                "lineNo": 215
              }
            ],
            "targetChanges": [
              {
                "line": "cacheMetaData(updateValue);",
                "type": "ADD",
                "lineNo": 203
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheMetaData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheMetaData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updatePath"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheMetaData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheMetaData(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updateValue"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "cacheDiscoveryUpstreamData(keysMap.get(updatePath));",
                "type": "DELETE",
                "lineNo": 221
              }
            ],
            "targetChanges": [
              {
                "line": "cacheDiscoveryUpstreamData(updateValue);",
                "type": "ADD",
                "lineNo": 209
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheDiscoveryUpstreamData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheDiscoveryUpstreamData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updatePath"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheDiscoveryUpstreamData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheDiscoveryUpstreamData(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updateValue"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "cacheProxySelectorData(keysMap.get(updatePath));",
                "type": "DELETE",
                "lineNo": 227
              }
            ],
            "targetChanges": [
              {
                "line": "cacheProxySelectorData(updateValue);",
                "type": "ADD",
                "lineNo": 215
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheProxySelectorData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheProxySelectorData(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updatePath"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheProxySelectorData(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.cacheProxySelectorData(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updateValue"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "final String dataPath = buildRealPath(pluginPath, updatePath);",
                "type": "DELETE",
                "lineNo": 238
              },
              {
                "line": "final String dataStr = keysMap.get(dataPath);",
                "type": "DELETE",
                "lineNo": 239
              },
              {
                "line": "final PluginData data = GsonUtils.getInstance().fromJson(dataStr, PluginData.class);",
                "type": "DELETE",
                "lineNo": 240
              }
            ],
            "targetChanges": [
              {
                "line": "final PluginData data = GsonUtils.getInstance().fromJson(updateValue, PluginData.class);",
                "type": "ADD",
                "lineNo": 226
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String dataPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.buildRealPath(String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.buildRealPath(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginPath"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updatePath"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String dataStr"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map keysMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String dataPath"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.PluginData data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.PluginData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String dataStr"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.PluginData data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.PluginData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String updateValue"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private List<String> etcdClientGetChildrenByMap(final String parent, final Map<String, String> map) {",
                "type": "DELETE",
                "lineNo": 411
              },
              {
                "line": "return etcdClient.getChildrenKeysByMap(parent, \"/\", map);",
                "type": "DELETE",
                "lineNo": 412
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 413
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataService.etcdClientGetChildrenByMap(String,Map)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String parent"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Map map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.getChildrenKeysByMap(String,String,Map)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient etcdClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.getChildrenKeysByMap(String,String,Map)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String parent"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map map"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-sync-data-center/shenyu-sync-data-etcd/src/test/java/org/apache/shenyu/sync/data/etcd/EtcdSyncDataServiceTest.java",
        "aPath": "shenyu-sync-data-center/shenyu-sync-data-etcd/src/test/java/org/apache/shenyu/sync/data/etcd/EtcdSyncDataServiceTest.java",
        "name": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataServiceTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@InjectMocks",
                "type": "DELETE",
                "lineNo": 79
              }
            ],
            "targetChanges": [
              {
                "line": "private PluginData pluginData;",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "@Mock",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "org.mockito.InjectMocks"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.PluginData"
              },
              {
                "type": "CtAnnotation",
                "value": "org.mockito.Mock"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "PluginData pluginData = PluginData.builder().name(MOCK_PLUGIN_NAME).enabled(Boolean.FALSE).build();",
                "type": "DELETE",
                "lineNo": 90
              },
              {
                "line": "KV kv = mock(KV.class);",
                "type": "DELETE",
                "lineNo": 91
              },
              {
                "line": "CompletableFuture<GetResponse> future = mock(CompletableFuture.class);",
                "type": "DELETE",
                "lineNo": 92
              },
              {
                "line": "GetResponse getResponse = mock(GetResponse.class);",
                "type": "DELETE",
                "lineNo": 93
              },
              {
                "line": "final List<KeyValue> keyValues = new ArrayList<>(2);",
                "type": "DELETE",
                "lineNo": 94
              },
              {
                "line": "KeyValue keyValue1 = mock(KeyValue.class);",
                "type": "DELETE",
                "lineNo": 95
              },
              {
                "line": "keyValues.add(keyValue1);",
                "type": "DELETE",
                "lineNo": 96
              },
              {
                "line": "final ByteString key1 = ByteString.copyFromUtf8(MOCK_PLUGIN_PATH);",
                "type": "DELETE",
                "lineNo": 97
              },
              {
                "line": "final ByteString value1 = ByteString.copyFromUtf8(GsonUtils.getInstance().toJson(pluginData));",
                "type": "DELETE",
                "lineNo": 98
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 100
              },
              {
                "line": "*  mock get method.",
                "type": "DELETE",
                "lineNo": 101
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 102
              },
              {
                "line": "when(client.getKVClient()).thenReturn(kv);",
                "type": "DELETE",
                "lineNo": 103
              },
              {
                "line": "try {",
                "type": "DELETE",
                "lineNo": 104
              },
              {
                "line": "when(future.get()).thenReturn(getResponse);",
                "type": "DELETE",
                "lineNo": 105
              },
              {
                "line": "} catch (Exception e) {",
                "type": "DELETE",
                "lineNo": 106
              },
              {
                "line": "throw new ShenyuException(e.getCause());",
                "type": "DELETE",
                "lineNo": 107
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 108
              },
              {
                "line": "when(getResponse.getKvs()).thenReturn(keyValues);",
                "type": "DELETE",
                "lineNo": 109
              },
              {
                "line": "when(keyValue1.getValue()).thenReturn(ByteSequence.from(value1));",
                "type": "DELETE",
                "lineNo": 110
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 111
              },
              {
                "line": "* mock getChildrenKeys method.",
                "type": "DELETE",
                "lineNo": 112
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 113
              },
              {
                "line": "when(kv.get(any(), any())).thenReturn(future);",
                "type": "DELETE",
                "lineNo": 114
              },
              {
                "line": "when(keyValue1.getKey()).thenReturn(ByteSequence.from(key1));",
                "type": "DELETE",
                "lineNo": 115
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 116
              },
              {
                "line": "* mock watchDataChange method.",
                "type": "DELETE",
                "lineNo": 117
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 118
              },
              {
                "line": "Watch watch = mock(Watch.class);",
                "type": "DELETE",
                "lineNo": 119
              },
              {
                "line": "when(client.getWatchClient()).thenReturn(watch);",
                "type": "DELETE",
                "lineNo": 120
              },
              {
                "line": "when(watch.watch(any(ByteSequence.class), any(Watch.Listener.class))).thenReturn(watcher);",
                "type": "DELETE",
                "lineNo": 121
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 122
              },
              {
                "line": "* mock watchChildChange method.",
                "type": "DELETE",
                "lineNo": 123
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 124
              },
              {
                "line": "when(watch.watch(any(ByteSequence.class), any(WatchOption.class), any(Watch.Listener.class))).thenReturn(watcher);",
                "type": "DELETE",
                "lineNo": 125
              }
            ],
            "targetChanges": [
              {
                "line": "pluginData = PluginData.builder().name(MOCK_PLUGIN_NAME).enabled(Boolean.FALSE).build();",
                "type": "ADD",
                "lineNo": 84
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.PluginData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData$Builder.enabled(Boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData$Builder.name(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.PluginData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData.builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData$Builder.name(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MOCK_PLUGIN_NAME"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData$Builder.enabled(Boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean FALSE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean FALSE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData$Builder.build()"
              },
              {
                "type": "CtLocalVariable",
                "value": "io.etcd.jetcd.KV kv"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.KV"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CompletableFuture"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.kv.GetResponse"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtLocalVariable",
                "value": "io.etcd.jetcd.kv.GetResponse getResponse"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.kv.GetResponse"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List keyValues"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.KeyValue"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList(int)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtLiteral",
                "value": "int '2'"
              },
              {
                "type": "CtLocalVariable",
                "value": "io.etcd.jetcd.KeyValue keyValue1"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.KeyValue"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "add(io.etcd.jetcd.KeyValue)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List keyValues"
              },
              {
                "type": "CtExecutableReference",
                "value": "add(io.etcd.jetcd.KeyValue)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.KeyValue keyValue1"
              },
              {
                "type": "CtLocalVariable",
                "value": "com.google.protobuf.ByteString key1"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.protobuf.ByteString"
              },
              {
                "type": "CtInvocation",
                "value": "copyFromUtf8(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.protobuf.ByteString"
              },
              {
                "type": "CtExecutableReference",
                "value": "copyFromUtf8(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MOCK_PLUGIN_PATH"
              },
              {
                "type": "CtLocalVariable",
                "value": "com.google.protobuf.ByteString value1"
              },
              {
                "type": "CtTypeReference",
                "value": "com.google.protobuf.ByteString"
              },
              {
                "type": "CtInvocation",
                "value": "copyFromUtf8(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "com.google.protobuf.ByteString"
              },
              {
                "type": "CtExecutableReference",
                "value": "copyFromUtf8(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(io.etcd.jetcd.KV)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "getKVClient()"
              },
              {
                "type": "CtFieldRead",
                "value": "io.etcd.jetcd.Client client"
              },
              {
                "type": "CtExecutableReference",
                "value": "getKVClient()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(io.etcd.jetcd.KV)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.KV kv"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(io.etcd.jetcd.kv.GetResponse)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.CompletableFuture.get()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.CompletableFuture.get()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(io.etcd.jetcd.kv.GetResponse)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.kv.GetResponse getResponse"
              },
              {
                "type": "CtCatchVariable",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Throwable.getCause()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Throwable.getCause()"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.util.List)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "getKvs()"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.kv.GetResponse getResponse"
              },
              {
                "type": "CtExecutableReference",
                "value": "getKvs()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.util.List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List keyValues"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn()"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "getValue()"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.KeyValue keyValue1"
              },
              {
                "type": "CtExecutableReference",
                "value": "getValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn()"
              },
              {
                "type": "CtInvocation",
                "value": "from(com.google.protobuf.ByteString)"
              },
              {
                "type": "CtTypeAccess",
                "value": "io.etcd.jetcd.ByteSequence"
              },
              {
                "type": "CtExecutableReference",
                "value": "from(com.google.protobuf.ByteString)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.google.protobuf.ByteString value1"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.util.concurrent.CompletableFuture)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "get()"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.KV kv"
              },
              {
                "type": "CtExecutableReference",
                "value": "get()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtInvocation",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "any()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.util.concurrent.CompletableFuture)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.CompletableFuture future"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn()"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "getKey()"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.KeyValue keyValue1"
              },
              {
                "type": "CtExecutableReference",
                "value": "getKey()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn()"
              },
              {
                "type": "CtInvocation",
                "value": "from(com.google.protobuf.ByteString)"
              },
              {
                "type": "CtTypeAccess",
                "value": "io.etcd.jetcd.ByteSequence"
              },
              {
                "type": "CtExecutableReference",
                "value": "from(com.google.protobuf.ByteString)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.google.protobuf.ByteString key1"
              },
              {
                "type": "CtLocalVariable",
                "value": "io.etcd.jetcd.Watch watch"
              },
              {
                "type": "CtTypeReference",
                "value": "io.etcd.jetcd.Watch"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(io.etcd.jetcd.Watch)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "getWatchClient()"
              },
              {
                "type": "CtFieldRead",
                "value": "io.etcd.jetcd.Client client"
              },
              {
                "type": "CtExecutableReference",
                "value": "getWatchClient()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(io.etcd.jetcd.Watch)"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.Watch watch"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(Watch.Watcher)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "watch()"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.Watch watch"
              },
              {
                "type": "CtExecutableReference",
                "value": "watch()"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(Watch.Watcher)"
              },
              {
                "type": "CtFieldRead",
                "value": "Watch.Watcher watcher"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(Watch.Watcher)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "watch()"
              },
              {
                "type": "CtVariableRead",
                "value": "io.etcd.jetcd.Watch watch"
              },
              {
                "type": "CtExecutableReference",
                "value": "watch()"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "any(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(Watch.Watcher)"
              },
              {
                "type": "CtFieldRead",
                "value": "Watch.Watcher watcher"
              }
            ],
            "targetElements": [
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData$Builder.enabled(Boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData$Builder.name(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.PluginData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData.builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData$Builder.name(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String MOCK_PLUGIN_NAME"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData$Builder.enabled(Boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean FALSE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean FALSE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData$Builder.build()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void testWatchPluginWhenInit() {",
                "type": "DELETE",
                "lineNo": 129
              }
            ],
            "targetChanges": [
              {
                "line": "public void testWatchPluginWhenInit() throws ExecutionException, InterruptedException {",
                "type": "ADD",
                "lineNo": 88
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataServiceTest.testWatchPluginWhenInit()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataServiceTest.testWatchPluginWhenInit()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.ExecutionException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.InterruptedException"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "when(etcdClient.getChildrenKeys(anyString(), anyString())).thenReturn(Collections.singletonList(\"sign\"));",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "when(etcdClient.get(anyString())).thenReturn(GsonUtils.getInstance().toJson(pluginData));",
                "type": "ADD",
                "lineNo": 91
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.util.List)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.getChildrenKeys(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient etcdClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.getChildrenKeys(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.util.List)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collections.singletonList(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collections.singletonList(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'sign'"
              },
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.get(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient etcdClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdClient.get(String)"
              },
              {
                "type": "CtInvocation",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "anyString()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "public void discoverUpstreamTest() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException, NoSuchFieldException {",
                "type": "ADD",
                "lineNo": 217
              },
              {
                "line": "this.commonTest(ConfigGroupEnum.DISCOVER_UPSTREAM, \"/shenyu/discoveryUpstream/divide/id\");",
                "type": "ADD",
                "lineNo": 218
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 219
              },
              {
                "line": "@Test",
                "type": "ADD",
                "lineNo": 221
              },
              {
                "line": "public void proxySelectorTest() throws NoSuchMethodException, InvocationTargetException, IllegalAccessException, NoSuchFieldException {",
                "type": "ADD",
                "lineNo": 222
              },
              {
                "line": "this.commonTest(ConfigGroupEnum.PROXY_SELECTOR, \"/shenyu/proxySelectorData/divide/id\");",
                "type": "ADD",
                "lineNo": 223
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 224
              },
              {
                "line": "@Test",
                "type": "ADD",
                "lineNo": 226
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataServiceTest.discoverUpstreamTest()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NoSuchMethodException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.InvocationTargetException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.IllegalAccessException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NoSuchFieldException"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataServiceTest.commonTest(ConfigGroupEnum,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataServiceTest.commonTest(ConfigGroupEnum,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.ConfigGroupEnum DISCOVER_UPSTREAM"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.ConfigGroupEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.ConfigGroupEnum DISCOVER_UPSTREAM"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/shenyu/discoveryUpstream/divide/id'"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataServiceTest.proxySelectorTest()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.junit.jupiter.api.Test"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NoSuchMethodException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.InvocationTargetException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.IllegalAccessException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NoSuchFieldException"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataServiceTest.commonTest(ConfigGroupEnum,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sync.data.etcd.EtcdSyncDataServiceTest.commonTest(ConfigGroupEnum,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.ConfigGroupEnum PROXY_SELECTOR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.ConfigGroupEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.ConfigGroupEnum PROXY_SELECTOR"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/shenyu/proxySelectorData/divide/id'"
              },
              {
                "type": "CtAnnotation",
                "value": "org.junit.jupiter.api.Test"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "biConsumer.accept(\"updatePath\", \"updateValue\");",
                "type": "DELETE",
                "lineNo": 300
              }
            ],
            "targetChanges": [
              {
                "line": "biConsumer.accept(\"updatePath\", \"{}\");",
                "type": "ADD",
                "lineNo": 271
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.function.BiConsumer.accept(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.BiConsumer biConsumer"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.BiConsumer.accept(Object,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'updatePath'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'updateValue'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.function.BiConsumer.accept(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.function.BiConsumer biConsumer"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.BiConsumer.accept(Object,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'updatePath'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{}'"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "a5a6a0901",
    "aCommit": "5bae6f7d0",
    "changes": [
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/impl/SelectorServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/impl/SelectorServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "SelectorDO selectorDO = selectorMapper.selectByName(name);",
                "type": "DELETE",
                "lineNo": 242
              },
              {
                "line": "return buildSelectorData(selectorDO);",
                "type": "DELETE",
                "lineNo": 243
              }
            ],
            "targetChanges": [
              {
                "line": "return buildSelectorData(selectorMapper.selectByName(name));",
                "type": "ADD",
                "lineNo": 242
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.selectByName(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.selectByName(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl.buildSelectorData(SelectorDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl.buildSelectorData(SelectorDO)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl.buildSelectorData(SelectorDO)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl.buildSelectorData(SelectorDO)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.selectByName(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.selectByName(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "String uri = String.join(\":\", dto.getHost(), String.valueOf(dto.getPort()));",
                "type": "DELETE",
                "lineNo": 287
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String uri"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.join(CharSequence,CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.join(CharSequence,CharSequence[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ':'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getHost()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO dto"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getHost()"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.valueOf(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.valueOf(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPort()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO dto"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPort()"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "selectorId = registerPluginSelector(contextPath, uri, rpcType);",
                "type": "DELETE",
                "lineNo": 289
              }
            ],
            "targetChanges": [
              {
                "line": "selectorId = registerPluginSelector(contextPath, dto, rpcType);",
                "type": "ADD",
                "lineNo": 287
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableWrite",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl.registerPluginSelector(String,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl.registerPluginSelector(String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String uri"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableWrite",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl.registerPluginSelector(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl.registerPluginSelector(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO dto"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcType"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "for (DivideUpstream upstream : exist) {",
                "type": "DELETE",
                "lineNo": 303
              },
              {
                "line": "if (upstream.getUpstreamUrl().equals(addDivideUpstream.getUpstreamUrl())) {",
                "type": "DELETE",
                "lineNo": 304
              }
            ],
            "targetChanges": [
              {
                "line": "for (DivideUpstream each : exist) {",
                "type": "ADD",
                "lineNo": 301
              },
              {
                "line": "if (each.getUpstreamUrl().equals(addDivideUpstream.getUpstreamUrl())) {",
                "type": "ADD",
                "lineNo": 302
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream upstream"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List exist"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream upstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream addDivideUpstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream.getUpstreamUrl()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream each"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List exist"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream each"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream addDivideUpstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream.getUpstreamUrl()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private String registerPluginSelector(final String contextPath, final String uri, final String rpcType) {",
                "type": "DELETE",
                "lineNo": 365
              }
            ],
            "targetChanges": [
              {
                "line": "private String registerPluginSelector(final String contextPath, final MetaDataRegisterDTO metaDataRegisterDTO, final String rpcType) {",
                "type": "ADD",
                "lineNo": 363
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl.registerPluginSelector(String,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String uri"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl.registerPluginSelector(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataRegisterDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "DivideUpstream divideUpstream = buildDivideUpstream(uri);",
                "type": "DELETE",
                "lineNo": 368
              }
            ],
            "targetChanges": [
              {
                "line": "DivideUpstream divideUpstream = DivideUpstreamUtils.buildDivideUpstream(metaDataRegisterDTO);",
                "type": "ADD",
                "lineNo": 366
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream divideUpstream"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl.buildDivideUpstream(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl.buildDivideUpstream(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String uri"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream divideUpstream"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.DivideUpstream"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.utils.DivideUpstreamUtils.buildDivideUpstream(MetaDataRegisterDTO)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.DivideUpstreamUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.utils.DivideUpstreamUtils.buildDivideUpstream(MetaDataRegisterDTO)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataRegisterDTO"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/impl/ShenyuClientRegisterServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/impl/ShenyuClientRegisterServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.impl.ShenyuClientRegisterServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ruleHandle = RuleHandleFactory.ruleHandle(pluginName, buildContextPath(path));",
                "type": "DELETE",
                "lineNo": 480
              }
            ],
            "targetChanges": [
              {
                "line": "ruleHandle = RuleHandleFactory.ruleHandle(pluginName, buildContextPath(path), \"\");",
                "type": "ADD",
                "lineNo": 480
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle ruleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.impl.ShenyuClientRegisterServiceImpl.buildContextPath(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.impl.ShenyuClientRegisterServiceImpl.buildContextPath(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle ruleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.impl.ShenyuClientRegisterServiceImpl.buildContextPath(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.impl.ShenyuClientRegisterServiceImpl.buildContextPath(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ruleHandle = RuleHandleFactory.ruleHandle(pluginName, path);",
                "type": "DELETE",
                "lineNo": 482
              }
            ],
            "targetChanges": [
              {
                "line": "ruleHandle = RuleHandleFactory.ruleHandle(pluginName, path, \"\");",
                "type": "ADD",
                "lineNo": 482
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle ruleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle ruleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/AbstractShenyuClientRegisterServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/AbstractShenyuClientRegisterServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "protected RuleDTO registerRule(final String selectorId, final String path, final String pluginName, final String ruleName) {",
                "type": "DELETE",
                "lineNo": 82
              },
              {
                "line": "RuleHandle ruleHandle = pluginName.equals(PluginEnum.CONTEXT_PATH.getName())",
                "type": "DELETE",
                "lineNo": 83
              },
              {
                "line": "? RuleHandleFactory.ruleHandle(pluginName, buildContextPath(path)) : RuleHandleFactory.ruleHandle(pluginName, path);",
                "type": "DELETE",
                "lineNo": 84
              },
              {
                "line": "RuleDTO ruleDTO = RuleDTO.builder()",
                "type": "DELETE",
                "lineNo": 85
              },
              {
                "line": ".selectorId(selectorId)",
                "type": "DELETE",
                "lineNo": 86
              },
              {
                "line": ".name(ruleName)",
                "type": "DELETE",
                "lineNo": 87
              },
              {
                "line": ".matchMode(MatchModeEnum.AND.getCode())",
                "type": "DELETE",
                "lineNo": 88
              },
              {
                "line": ".enabled(Boolean.TRUE)",
                "type": "DELETE",
                "lineNo": 89
              },
              {
                "line": ".loged(Boolean.TRUE)",
                "type": "DELETE",
                "lineNo": 90
              },
              {
                "line": ".sort(1)",
                "type": "DELETE",
                "lineNo": 91
              },
              {
                "line": ".handle(ruleHandle.toJson())",
                "type": "DELETE",
                "lineNo": 92
              },
              {
                "line": ".build();",
                "type": "DELETE",
                "lineNo": 93
              },
              {
                "line": "RuleConditionDTO ruleConditionDTO = RuleConditionDTO.builder()",
                "type": "DELETE",
                "lineNo": 94
              },
              {
                "line": ".paramType(ParamTypeEnum.URI.getName())",
                "type": "DELETE",
                "lineNo": 95
              },
              {
                "line": ".paramName(\"/\")",
                "type": "DELETE",
                "lineNo": 96
              },
              {
                "line": ".paramValue(path)",
                "type": "DELETE",
                "lineNo": 97
              },
              {
                "line": ".build();",
                "type": "DELETE",
                "lineNo": 98
              },
              {
                "line": "if (path.indexOf(\"*\") > 1) {",
                "type": "DELETE",
                "lineNo": 99
              },
              {
                "line": "ruleConditionDTO.setOperator(OperatorEnum.MATCH.getAlias());",
                "type": "DELETE",
                "lineNo": 100
              },
              {
                "line": "} else {",
                "type": "DELETE",
                "lineNo": 101
              },
              {
                "line": "ruleConditionDTO.setOperator(OperatorEnum.EQ.getAlias());",
                "type": "DELETE",
                "lineNo": 102
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 103
              },
              {
                "line": "ruleDTO.setRuleConditions(Collections.singletonList(ruleConditionDTO));",
                "type": "DELETE",
                "lineNo": 104
              },
              {
                "line": "return ruleDTO;",
                "type": "DELETE",
                "lineNo": 105
              }
            ],
            "targetChanges": [
              {
                "line": "protected RuleDTO registerRule(final String selectorId, final MetaDataRegisterDTO metaDataDTO, final String pluginName) {",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "String path = metaDataDTO.getPath();",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "RuleHandle ruleHandle = RuleHandleFactory.ruleHandle(pluginName, path, metaDataDTO.getRpcExt());",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "return getRuleDTO(selectorId, path, ruleHandle, metaDataDTO.getRuleName());",
                "type": "ADD",
                "lineNo": 84
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle ruleHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum CONTEXT_PATH"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum CONTEXT_PATH"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.buildContextPath(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.buildContextPath(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO ruleDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.handle(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.sort(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.loged(Boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.enabled(Boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.matchMode(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.name(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.selectorId(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO.builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.selectorId(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.name(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.matchMode(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.MatchModeEnum.getCode()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.MatchModeEnum AND"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.MatchModeEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.MatchModeEnum AND"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.MatchModeEnum.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.enabled(Boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.loged(Boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.sort(Integer)"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.handle(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle.toJson()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle.toJson()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.build()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO ruleConditionDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.paramValue(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.paramName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.paramType(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO.builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.paramType(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.ParamTypeEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.ParamTypeEnum URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.ParamTypeEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.ParamTypeEnum URI"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.ParamTypeEnum.getName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.paramName(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/'"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.paramValue(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.indexOf(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.indexOf(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '*'"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO.setOperator(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO ruleConditionDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO.setOperator(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.OperatorEnum.getAlias()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.OperatorEnum MATCH"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.OperatorEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.OperatorEnum MATCH"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.OperatorEnum.getAlias()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO.setOperator(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO ruleConditionDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO.setOperator(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.OperatorEnum.getAlias()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.OperatorEnum EQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.OperatorEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.OperatorEnum EQ"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.OperatorEnum.getAlias()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO.setRuleConditions(List)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO ruleDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO.setRuleConditions(List)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collections.singletonList(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collections.singletonList(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO ruleConditionDTO"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO ruleDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle ruleHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRpcExt()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRpcExt()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.getRuleDTO(String,String,RuleHandle,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.getRuleDTO(String,String,RuleHandle,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle ruleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "protected RuleDTO registerContextPathRule(final String selectorId, final String path, final String pluginName, final String ruleName) {",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "RuleHandle ruleHandle = RuleHandleFactory.ruleHandle(pluginName, buildContextPath(path), \"\");",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "return getRuleDTO(selectorId, path, ruleHandle, ruleName);",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 90
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerContextPathRule(String,String,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle ruleHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.buildContextPath(String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.buildContextPath(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.getRuleDTO(String,String,RuleHandle,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.getRuleDTO(String,String,RuleHandle,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle ruleHandle"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String ruleName"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private RuleDTO getRuleDTO(final String selectorId, final String path, final RuleHandle ruleHandle, final String ruleName) {",
                "type": "ADD",
                "lineNo": 132
              },
              {
                "line": "RuleDTO ruleDTO = RuleDTO.builder()",
                "type": "ADD",
                "lineNo": 133
              },
              {
                "line": ".selectorId(selectorId)",
                "type": "ADD",
                "lineNo": 134
              },
              {
                "line": ".name(ruleName)",
                "type": "ADD",
                "lineNo": 135
              },
              {
                "line": ".matchMode(MatchModeEnum.AND.getCode())",
                "type": "ADD",
                "lineNo": 136
              },
              {
                "line": ".enabled(Boolean.TRUE)",
                "type": "ADD",
                "lineNo": 137
              },
              {
                "line": ".loged(Boolean.TRUE)",
                "type": "ADD",
                "lineNo": 138
              },
              {
                "line": ".sort(1)",
                "type": "ADD",
                "lineNo": 139
              },
              {
                "line": ".handle(ruleHandle.toJson())",
                "type": "ADD",
                "lineNo": 140
              },
              {
                "line": ".build();",
                "type": "ADD",
                "lineNo": 141
              },
              {
                "line": "RuleConditionDTO ruleConditionDTO = RuleConditionDTO.builder()",
                "type": "ADD",
                "lineNo": 142
              },
              {
                "line": ".paramType(ParamTypeEnum.URI.getName())",
                "type": "ADD",
                "lineNo": 143
              },
              {
                "line": ".paramName(\"/\")",
                "type": "ADD",
                "lineNo": 144
              },
              {
                "line": ".paramValue(path)",
                "type": "ADD",
                "lineNo": 145
              },
              {
                "line": ".build();",
                "type": "ADD",
                "lineNo": 146
              },
              {
                "line": "if (path.indexOf(\"*\") > 1) {",
                "type": "ADD",
                "lineNo": 147
              },
              {
                "line": "ruleConditionDTO.setOperator(OperatorEnum.MATCH.getAlias());",
                "type": "ADD",
                "lineNo": 148
              },
              {
                "line": "} else {",
                "type": "ADD",
                "lineNo": 149
              },
              {
                "line": "ruleConditionDTO.setOperator(OperatorEnum.EQ.getAlias());",
                "type": "ADD",
                "lineNo": 150
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 151
              },
              {
                "line": "ruleDTO.setRuleConditions(Collections.singletonList(ruleConditionDTO));",
                "type": "ADD",
                "lineNo": 152
              },
              {
                "line": "return ruleDTO;",
                "type": "ADD",
                "lineNo": 153
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 154
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.getRuleDTO(String,String,RuleHandle,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle ruleHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO ruleDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.handle(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.sort(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.loged(Boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.enabled(Boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.matchMode(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.name(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.selectorId(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO.builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.selectorId(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.name(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String ruleName"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.matchMode(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.MatchModeEnum.getCode()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.MatchModeEnum AND"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.MatchModeEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.MatchModeEnum AND"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.MatchModeEnum.getCode()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.enabled(Boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.loged(Boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.sort(Integer)"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.handle(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle.toJson()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle ruleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle.toJson()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO$RuleDTOBuilder.build()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO ruleConditionDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.paramValue(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.paramName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.paramType(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO.builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.paramType(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.ParamTypeEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.ParamTypeEnum URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.ParamTypeEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.ParamTypeEnum URI"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.ParamTypeEnum.getName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.paramName(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/'"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.paramValue(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO$RuleConditionDTOBuilder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.indexOf(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.indexOf(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '*'"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO.setOperator(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO ruleConditionDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO.setOperator(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.OperatorEnum.getAlias()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.OperatorEnum MATCH"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.OperatorEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.OperatorEnum MATCH"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.OperatorEnum.getAlias()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO.setOperator(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO ruleConditionDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO.setOperator(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.OperatorEnum.getAlias()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.OperatorEnum EQ"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.OperatorEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.OperatorEnum EQ"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.OperatorEnum.getAlias()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO.setRuleConditions(List)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO ruleDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO.setRuleConditions(List)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collections.singletonList(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collections.singletonList(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.RuleConditionDTO ruleConditionDTO"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.dto.RuleDTO ruleDTO"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterDubboServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterDubboServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterDubboServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "SelectorDO selectorDO = selectorService.findByName(metaDataDTO.getContextPath());",
                "type": "DELETE",
                "lineNo": 75
              },
              {
                "line": "if (Objects.nonNull(selectorDO)) {",
                "type": "DELETE",
                "lineNo": 76
              },
              {
                "line": "return selectorDO.getId();",
                "type": "DELETE",
                "lineNo": 77
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 78
              },
              {
                "line": "return selectorService.register(registerSelector(metaDataDTO.getContextPath(), pluginService.selectIdByName(metaDataDTO.getRpcType())));",
                "type": "DELETE",
                "lineNo": 79
              }
            ],
            "targetChanges": [
              {
                "line": "return selectorService.handlerSelectorNeedUpstreamCheck(metaDataDTO, PluginEnum.DUBBO.getName());",
                "type": "ADD",
                "lineNo": 72
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.SelectorService.findByName(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.SelectorService selectorService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.SelectorService.findByName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getContextPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getContextPath()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.entity.BaseDO.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.BaseDO.getId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.SelectorService.register(SelectorDTO)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.SelectorService selectorService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.SelectorService.register(SelectorDTO)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerSelector(String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerSelector(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getContextPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getContextPath()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.PluginService.selectIdByName(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.PluginService pluginService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.PluginService.selectIdByName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRpcType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRpcType()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.SelectorService.handlerSelectorNeedUpstreamCheck(MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.SelectorService selectorService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.SelectorService.handlerSelectorNeedUpstreamCheck(MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, metaDataDTO.getPath(), PluginEnum.DUBBO.getName(), metaDataDTO.getRuleName()),",
                "type": "DELETE",
                "lineNo": 84
              }
            ],
            "targetChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, metaDataDTO, PluginEnum.DUBBO.getName()),",
                "type": "ADD",
                "lineNo": 77
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterGrpcServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterGrpcServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterGrpcServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, metaDataDTO.getPath(), PluginEnum.GRPC.getName(), metaDataDTO.getRuleName()),",
                "type": "DELETE",
                "lineNo": 74
              }
            ],
            "targetChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, metaDataDTO, PluginEnum.GRPC.getName()),",
                "type": "ADD",
                "lineNo": 74
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum GRPC"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum GRPC"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum GRPC"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum GRPC"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterMotanServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterMotanServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterMotanServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, metaDataDTO.getPath(), PluginEnum.MOTAN.getName(), metaDataDTO.getRuleName()),",
                "type": "DELETE",
                "lineNo": 74
              }
            ],
            "targetChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, metaDataDTO, PluginEnum.MOTAN.getName()),",
                "type": "ADD",
                "lineNo": 74
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum MOTAN"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum MOTAN"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum MOTAN"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum MOTAN"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterSofaServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterSofaServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterSofaServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, metaDataDTO.getPath(), PluginEnum.SOFA.getName(), metaDataDTO.getRuleName()),",
                "type": "DELETE",
                "lineNo": 91
              }
            ],
            "targetChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, metaDataDTO, PluginEnum.SOFA.getName()),",
                "type": "ADD",
                "lineNo": 91
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum SOFA"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum SOFA"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum SOFA"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum SOFA"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterSpringCloudServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterSpringCloudServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterSpringCloudServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, dto.getPath(), PluginEnum.SPRING_CLOUD.getName(), dto.getRuleName()),",
                "type": "DELETE",
                "lineNo": 178
              }
            ],
            "targetChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, dto, PluginEnum.SPRING_CLOUD.getName()),",
                "type": "ADD",
                "lineNo": 178
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO dto"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum SPRING_CLOUD"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum SPRING_CLOUD"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO dto"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO dto"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum SPRING_CLOUD"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum SPRING_CLOUD"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ruleService.register(registerRule(contextPathSelectorId, contextPath + \"/**\", PluginEnum.CONTEXT_PATH.getName(), name),",
                "type": "DELETE",
                "lineNo": 188
              }
            ],
            "targetChanges": [
              {
                "line": "ruleService.register(registerContextPathRule(contextPathSelectorId, contextPath + \"/**\", PluginEnum.CONTEXT_PATH.getName(), name),",
                "type": "ADD",
                "lineNo": 188
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPathSelectorId"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/**'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum CONTEXT_PATH"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum CONTEXT_PATH"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerContextPathRule(String,String,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerContextPathRule(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPathSelectorId"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/**'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum CONTEXT_PATH"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum CONTEXT_PATH"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterSpringMVCServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterSpringMVCServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterSpringMVCServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, dto.getPath(), PluginEnum.DIVIDE.getName(), dto.getRuleName()),",
                "type": "DELETE",
                "lineNo": 118
              }
            ],
            "targetChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, dto, PluginEnum.DIVIDE.getName()),",
                "type": "ADD",
                "lineNo": 118
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO dto"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO dto"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO dto"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ruleService.register(registerRule(contextPathSelectorId, contextPath + \"/**\", PluginEnum.CONTEXT_PATH.getName(), name),",
                "type": "DELETE",
                "lineNo": 128
              }
            ],
            "targetChanges": [
              {
                "line": "ruleService.register(registerContextPathRule(contextPathSelectorId, contextPath + \"/**\", PluginEnum.CONTEXT_PATH.getName(), name),",
                "type": "ADD",
                "lineNo": 128
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPathSelectorId"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/**'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum CONTEXT_PATH"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum CONTEXT_PATH"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerContextPathRule(String,String,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerContextPathRule(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPathSelectorId"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/**'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum CONTEXT_PATH"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum CONTEXT_PATH"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterTarsServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterTarsServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterTarsServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, metaDataDTO.getPath(), PluginEnum.TARS.getName(), metaDataDTO.getRuleName()), metaDataDTO.getPath(), Objects.isNull(exist));",
                "type": "DELETE",
                "lineNo": 78
              }
            ],
            "targetChanges": [
              {
                "line": "ruleService.register(registerRule(selectorId, metaDataDTO, PluginEnum.TARS.getName()), metaDataDTO.getPath(), Objects.isNull(exist));",
                "type": "ADD",
                "lineNo": 78
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,String,String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum TARS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum TARS"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getRuleName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.MetaDataDO exist"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.RuleService ruleService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.RuleService.register(RuleDTO,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.registerRule(String,MetaDataRegisterDTO,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorId"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum TARS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum TARS"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.MetaDataDO exist"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/service/ShenyuClientRegisterServiceTest.java",
        "aPath": "shenyu-admin/src/test/java/org/apache/shenyu/admin/service/ShenyuClientRegisterServiceTest.java",
        "name": "org.apache.shenyu.admin.service.ShenyuClientRegisterServiceTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "metaDataDTO.setRpcExt(\"rpcExt3\");",
                "type": "DELETE",
                "lineNo": 524
              }
            ],
            "targetChanges": [
              {
                "line": "metaDataDTO.setRpcExt(\"{\\\"loadbalance\\\":\\\"random\\\"}\");",
                "type": "ADD",
                "lineNo": 524
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setRpcExt(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setRpcExt(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'rpcExt3'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setRpcExt(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.setRpcExt(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{\"loadbalance\":\"random\"}'"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/constant/Constants.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/constant/Constants.java",
        "name": "org.apache.shenyu.common.constant.Constants",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* dubbo gray release selector id.",
                "type": "ADD",
                "lineNo": 422
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 423
              },
              {
                "line": "String DUBBO_SELECTOR_ID = \"dubboSelectorId\";",
                "type": "ADD",
                "lineNo": 424
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 426
              },
              {
                "line": "* dubbo gray release rule id.",
                "type": "ADD",
                "lineNo": 427
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 428
              },
              {
                "line": "String DUBBO_RULE_ID = \"dubboRuleId\";",
                "type": "ADD",
                "lineNo": 429
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 431
              },
              {
                "line": "* dubbo remote address.",
                "type": "ADD",
                "lineNo": 432
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 433
              },
              {
                "line": "String DUBBO_REMOTE_ADDRESS = \"dubboRemoteAddress\";",
                "type": "ADD",
                "lineNo": 434
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 436
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String DUBBO_SELECTOR_ID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'dubboSelectorId'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String DUBBO_RULE_ID"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'dubboRuleId'"
              },
              {
                "type": "CtField",
                "value": "java.lang.String DUBBO_REMOTE_ADDRESS"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'dubboRemoteAddress'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/RuleHandle.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/RuleHandle.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.RuleHandle",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* @param path  path.",
                "type": "DELETE",
                "lineNo": 31
              }
            ],
            "targetChanges": [
              {
                "line": "* @param path   path.",
                "type": "ADD",
                "lineNo": 31
              },
              {
                "line": "* @param rpcExt rpc ext.",
                "type": "ADD",
                "lineNo": 32
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "RuleHandle createDefault(String path);",
                "type": "DELETE",
                "lineNo": 34
              }
            ],
            "targetChanges": [
              {
                "line": "RuleHandle createDefault(String path, String rpcExt);",
                "type": "ADD",
                "lineNo": 35
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle.createDefault(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle.createDefault(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/RuleHandleFactory.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/RuleHandleFactory.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* @param name   name.",
                "type": "DELETE",
                "lineNo": 56
              },
              {
                "line": "* @param path      path.",
                "type": "DELETE",
                "lineNo": 57
              },
              {
                "line": "* @return          RuleHandle object.",
                "type": "DELETE",
                "lineNo": 58
              }
            ],
            "targetChanges": [
              {
                "line": "* @param pluginName plugin's name.",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "* @param path       path.",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "* @param rpcExt     rpc ext.",
                "type": "ADD",
                "lineNo": 58
              },
              {
                "line": "* @return           RuleHandle object.",
                "type": "ADD",
                "lineNo": 59
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public static RuleHandle ruleHandle(final String name, final String path) {",
                "type": "DELETE",
                "lineNo": 60
              },
              {
                "line": "Class<? extends RuleHandle> clazz = RPC_TYPE_TO_RULE_HANDLE_CLASS.getOrDefault(name, DEFAULT_RULE_HANDLE);",
                "type": "DELETE",
                "lineNo": 61
              }
            ],
            "targetChanges": [
              {
                "line": "public static RuleHandle ruleHandle(final String pluginName, final String path, final String rpcExt) {",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "Class<? extends RuleHandle> clazz = RPC_TYPE_TO_RULE_HANDLE_CLASS.getOrDefault(pluginName, DEFAULT_RULE_HANDLE);",
                "type": "ADD",
                "lineNo": 62
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String name"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Class clazz"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Class"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.getOrDefault(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map RPC_TYPE_TO_RULE_HANDLE_CLASS"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.getOrDefault(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class DEFAULT_RULE_HANDLE"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Class clazz"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Class"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.getOrDefault(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map RPC_TYPE_TO_RULE_HANDLE_CLASS"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.getOrDefault(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class DEFAULT_RULE_HANDLE"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return clazz.newInstance().createDefault(path);",
                "type": "DELETE",
                "lineNo": 63
              }
            ],
            "targetChanges": [
              {
                "line": "return clazz.newInstance().createDefault(path, rpcExt);",
                "type": "ADD",
                "lineNo": 64
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle.createDefault(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Class.newInstance()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Class clazz"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.newInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle.createDefault(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle.createDefault(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Class.newInstance()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Class clazz"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.newInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle.createDefault(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String path"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcExt"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "name,",
                "type": "DELETE",
                "lineNo": 67
              }
            ],
            "targetChanges": [
              {
                "line": "pluginName,",
                "type": "ADD",
                "lineNo": 68
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.String name"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.String pluginName"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/ContextMappingHandle.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/ContextMappingHandle.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.impl.ContextMappingHandle",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public RuleHandle createDefault(final String path) {",
                "type": "DELETE",
                "lineNo": 101
              }
            ],
            "targetChanges": [
              {
                "line": "public RuleHandle createDefault(final String path, final String rpcExt) {",
                "type": "ADD",
                "lineNo": 101
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ContextMappingHandle.createDefault(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ContextMappingHandle.createDefault(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/CryptorRequestRuleHandle.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/CryptorRequestRuleHandle.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.impl.CryptorRequestRuleHandle",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public RuleHandle createDefault(final String path) {",
                "type": "DELETE",
                "lineNo": 97
              }
            ],
            "targetChanges": [
              {
                "line": "public RuleHandle createDefault(final String path, final String rpcExt) {",
                "type": "ADD",
                "lineNo": 97
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.CryptorRequestRuleHandle.createDefault(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.CryptorRequestRuleHandle.createDefault(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/CryptorResponseRuleHandle.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/CryptorResponseRuleHandle.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.impl.CryptorResponseRuleHandle",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public RuleHandle createDefault(final String path) {",
                "type": "DELETE",
                "lineNo": 91
              }
            ],
            "targetChanges": [
              {
                "line": "public RuleHandle createDefault(final String path, final String rpcExt) {",
                "type": "ADD",
                "lineNo": 91
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.CryptorResponseRuleHandle.createDefault(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.CryptorResponseRuleHandle.createDefault(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/DivideRuleHandle.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/DivideRuleHandle.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public RuleHandle createDefault(final String path) {",
                "type": "DELETE",
                "lineNo": 186
              }
            ],
            "targetChanges": [
              {
                "line": "public RuleHandle createDefault(final String path, final String rpcExt) {",
                "type": "ADD",
                "lineNo": 186
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle.createDefault(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle.createDefault(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/DubboRuleHandle.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/DubboRuleHandle.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* the loadBalance.",
                "type": "DELETE",
                "lineNo": 50
              }
            ],
            "targetChanges": [
              {
                "line": "* the loadbalance.",
                "type": "ADD",
                "lineNo": 52
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "private String loadBalance;",
                "type": "DELETE",
                "lineNo": 53
              }
            ],
            "targetChanges": [
              {
                "line": "private String loadbalance;",
                "type": "ADD",
                "lineNo": 55
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "java.lang.String loadBalance"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String loadbalance"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "* get loadBalance.",
                "type": "DELETE",
                "lineNo": 115
              }
            ],
            "targetChanges": [
              {
                "line": "* Gets the value of loadbalance.",
                "type": "ADD",
                "lineNo": 117
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* @return loadBalance",
                "type": "DELETE",
                "lineNo": 117
              }
            ],
            "targetChanges": [
              {
                "line": "* @return the value of loadbalance",
                "type": "ADD",
                "lineNo": 119
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public String getLoadBalance() {",
                "type": "DELETE",
                "lineNo": 119
              },
              {
                "line": "return loadBalance;",
                "type": "DELETE",
                "lineNo": 120
              }
            ],
            "targetChanges": [
              {
                "line": "public String getLoadbalance() {",
                "type": "ADD",
                "lineNo": 121
              },
              {
                "line": "return loadbalance;",
                "type": "ADD",
                "lineNo": 122
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle.getLoadBalance()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String loadBalance"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle.getLoadbalance()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String loadbalance"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "* set loadBalance.",
                "type": "DELETE",
                "lineNo": 124
              }
            ],
            "targetChanges": [
              {
                "line": "* Sets the loadbalance.",
                "type": "ADD",
                "lineNo": 126
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* @param loadBalance loadBalance",
                "type": "DELETE",
                "lineNo": 126
              }
            ],
            "targetChanges": [
              {
                "line": "* @param loadbalance loadbalance",
                "type": "ADD",
                "lineNo": 128
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public void setLoadBalance(final String loadBalance) {",
                "type": "DELETE",
                "lineNo": 128
              },
              {
                "line": "this.loadBalance = loadBalance;",
                "type": "DELETE",
                "lineNo": 129
              }
            ],
            "targetChanges": [
              {
                "line": "public void setLoadbalance(final String loadbalance) {",
                "type": "ADD",
                "lineNo": 130
              },
              {
                "line": "this.loadbalance = loadbalance;",
                "type": "ADD",
                "lineNo": 131
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle.setLoadBalance(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String loadBalance"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String loadBalance"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String loadBalance"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle.setLoadbalance(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String loadbalance"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String loadbalance"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String loadbalance"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (o == null || getClass() != o.getClass()) {",
                "type": "DELETE",
                "lineNo": 155
              }
            ],
            "targetChanges": [
              {
                "line": "if (!(o instanceof DubboRuleHandle)) {",
                "type": "ADD",
                "lineNo": 157
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object o"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object o"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.getClass()"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object o"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return timeout == that.timeout && Objects.equals(version, that.version) && Objects.equals(group, that.group)",
                "type": "DELETE",
                "lineNo": 159
              },
              {
                "line": "&& Objects.equals(retries, that.retries) && Objects.equals(loadBalance, that.loadBalance);",
                "type": "DELETE",
                "lineNo": 160
              }
            ],
            "targetChanges": [
              {
                "line": "return timeout == that.timeout",
                "type": "ADD",
                "lineNo": 161
              },
              {
                "line": "&& Objects.equals(version, that.version)",
                "type": "ADD",
                "lineNo": 162
              },
              {
                "line": "&& Objects.equals(group, that.group)",
                "type": "ADD",
                "lineNo": 163
              },
              {
                "line": "&& Objects.equals(retries, that.retries)",
                "type": "ADD",
                "lineNo": 164
              },
              {
                "line": "&& Objects.equals(loadbalance, that.loadbalance);",
                "type": "ADD",
                "lineNo": 165
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtFieldRead",
                "value": "long timeout"
              },
              {
                "type": "CtFieldRead",
                "value": "long timeout"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Integer retries"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Integer retries"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String loadBalance"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String loadBalance"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              }
            ],
            "targetElements": [
              {
                "type": "CtFieldRead",
                "value": "long timeout"
              },
              {
                "type": "CtFieldRead",
                "value": "long timeout"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Integer retries"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Integer retries"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String loadbalance"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String loadbalance"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle that"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return Objects.hash(version, group, retries, loadBalance, timeout);",
                "type": "DELETE",
                "lineNo": 165
              }
            ],
            "targetChanges": [
              {
                "line": "return Objects.hash(version, group, retries, loadbalance, timeout);",
                "type": "ADD",
                "lineNo": 170
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.hash(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.hash(Object[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Integer retries"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String loadBalance"
              },
              {
                "type": "CtFieldRead",
                "value": "long timeout"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.hash(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.hash(Object[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Integer retries"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String loadbalance"
              },
              {
                "type": "CtFieldRead",
                "value": "long timeout"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "+ \"version='\"",
                "type": "DELETE",
                "lineNo": 171
              },
              {
                "line": "+ version",
                "type": "DELETE",
                "lineNo": 172
              },
              {
                "line": "+ '\\''",
                "type": "DELETE",
                "lineNo": 173
              },
              {
                "line": "+ \", group='\"",
                "type": "DELETE",
                "lineNo": 174
              },
              {
                "line": "+ group",
                "type": "DELETE",
                "lineNo": 175
              },
              {
                "line": "+ '\\''",
                "type": "DELETE",
                "lineNo": 176
              },
              {
                "line": "+ \", retries=\"",
                "type": "DELETE",
                "lineNo": 177
              },
              {
                "line": "+ retries",
                "type": "DELETE",
                "lineNo": 178
              },
              {
                "line": "+ \", loadBalance='\"",
                "type": "DELETE",
                "lineNo": 179
              },
              {
                "line": "+ loadBalance",
                "type": "DELETE",
                "lineNo": 180
              },
              {
                "line": "+ '\\''",
                "type": "DELETE",
                "lineNo": 181
              },
              {
                "line": "+ \", timeout=\"",
                "type": "DELETE",
                "lineNo": 182
              },
              {
                "line": "+ timeout",
                "type": "DELETE",
                "lineNo": 183
              }
            ],
            "targetChanges": [
              {
                "line": "+ \"version='\" + version + '\\''",
                "type": "ADD",
                "lineNo": 176
              },
              {
                "line": "+ \", group='\" + group + '\\''",
                "type": "ADD",
                "lineNo": 177
              },
              {
                "line": "+ \", retries=\" + retries",
                "type": "ADD",
                "lineNo": 178
              },
              {
                "line": "+ \", loadbalance='\" + loadbalance + '\\''",
                "type": "ADD",
                "lineNo": 179
              },
              {
                "line": "+ \", timeout=\" + timeout",
                "type": "ADD",
                "lineNo": 180
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'version=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              },
              {
                "type": "CtLiteral",
                "value": "char '''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', group=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtLiteral",
                "value": "char '''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', retries='"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Integer retries"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', loadBalance=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String loadBalance"
              },
              {
                "type": "CtLiteral",
                "value": "char '''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', timeout='"
              },
              {
                "type": "CtFieldRead",
                "value": "long timeout"
              }
            ],
            "targetElements": [
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'version=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              },
              {
                "type": "CtLiteral",
                "value": "char '''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', group=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtLiteral",
                "value": "char '''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', retries='"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Integer retries"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', loadbalance=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String loadbalance"
              },
              {
                "type": "CtLiteral",
                "value": "char '''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', timeout='"
              },
              {
                "type": "CtFieldRead",
                "value": "long timeout"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public RuleHandle createDefault(final String path) {",
                "type": "DELETE",
                "lineNo": 188
              },
              {
                "line": "this.loadBalance = RuleHandleConstants.DEFAULT_LOAD_BALANCE.getName();",
                "type": "DELETE",
                "lineNo": 189
              },
              {
                "line": "this.retries = RuleHandleConstants.DEFAULT_RETRIES;",
                "type": "DELETE",
                "lineNo": 190
              },
              {
                "line": "return this;",
                "type": "DELETE",
                "lineNo": 191
              }
            ],
            "targetChanges": [
              {
                "line": "public RuleHandle createDefault(final String path, final String rpcExt) {",
                "type": "ADD",
                "lineNo": 185
              },
              {
                "line": "if (StringUtils.isBlank(rpcExt)) {",
                "type": "ADD",
                "lineNo": 186
              },
              {
                "line": "this.loadbalance = RuleHandleConstants.DEFAULT_LOAD_BALANCE.getName();",
                "type": "ADD",
                "lineNo": 187
              },
              {
                "line": "this.retries = RuleHandleConstants.DEFAULT_RETRIES;",
                "type": "ADD",
                "lineNo": 188
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 189
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 190
              },
              {
                "line": "return GsonUtils.getInstance().fromJson(rpcExt, DubboRuleHandle.class);",
                "type": "ADD",
                "lineNo": 191
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle.createDefault(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String loadBalance"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.LoadBalanceEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.LoadBalanceEnum DEFAULT_LOAD_BALANCE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.RuleHandleConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.LoadBalanceEnum DEFAULT_LOAD_BALANCE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.LoadBalanceEnum.getName()"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.Integer retries"
              },
              {
                "type": "CtFieldRead",
                "value": "int DEFAULT_RETRIES"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.RuleHandleConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "int DEFAULT_RETRIES"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle.createDefault(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String loadbalance"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.LoadBalanceEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.LoadBalanceEnum DEFAULT_LOAD_BALANCE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.RuleHandleConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.LoadBalanceEnum DEFAULT_LOAD_BALANCE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.LoadBalanceEnum.getName()"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.Integer retries"
              },
              {
                "type": "CtFieldRead",
                "value": "int DEFAULT_RETRIES"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.RuleHandleConstants"
              },
              {
                "type": "CtFieldReference",
                "value": "int DEFAULT_RETRIES"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/ModifyResponseRuleHandle.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/ModifyResponseRuleHandle.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.impl.ModifyResponseRuleHandle",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public RuleHandle createDefault(final String path) {",
                "type": "DELETE",
                "lineNo": 272
              }
            ],
            "targetChanges": [
              {
                "line": "public RuleHandle createDefault(final String path, final String rpcExt) {",
                "type": "ADD",
                "lineNo": 272
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ModifyResponseRuleHandle.createDefault(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ModifyResponseRuleHandle.createDefault(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/ParamMappingHandle.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/ParamMappingHandle.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.impl.ParamMappingHandle",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public RuleHandle createDefault(final String path) {",
                "type": "DELETE",
                "lineNo": 122
              }
            ],
            "targetChanges": [
              {
                "line": "public RuleHandle createDefault(final String path, final String rpcExt) {",
                "type": "ADD",
                "lineNo": 122
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ParamMappingHandle.createDefault(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ParamMappingHandle.createDefault(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/SofaRuleHandle.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/SofaRuleHandle.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.impl.SofaRuleHandle",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public RuleHandle createDefault(final String path) {",
                "type": "DELETE",
                "lineNo": 136
              }
            ],
            "targetChanges": [
              {
                "line": "public RuleHandle createDefault(final String path, final String rpcExt) {",
                "type": "ADD",
                "lineNo": 136
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.SofaRuleHandle.createDefault(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.SofaRuleHandle.createDefault(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/SpringCloudRuleHandle.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/SpringCloudRuleHandle.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.impl.SpringCloudRuleHandle",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public RuleHandle createDefault(final String path) {",
                "type": "DELETE",
                "lineNo": 132
              }
            ],
            "targetChanges": [
              {
                "line": "public RuleHandle createDefault(final String path, final String rpcExt) {",
                "type": "ADD",
                "lineNo": 132
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.SpringCloudRuleHandle.createDefault(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.SpringCloudRuleHandle.createDefault(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/WebSocketRuleHandle.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/rule/impl/WebSocketRuleHandle.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.impl.WebSocketRuleHandle",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public RuleHandle createDefault(final String path) {",
                "type": "DELETE",
                "lineNo": 134
              }
            ],
            "targetChanges": [
              {
                "line": "public RuleHandle createDefault(final String path, final String rpcExt) {",
                "type": "ADD",
                "lineNo": 134
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.WebSocketRuleHandle.createDefault(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.WebSocketRuleHandle.createDefault(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String path"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String rpcExt"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/selector/DubboSelectorHandle.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/dto/convert/selector/DubboSelectorHandle.java",
        "name": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* upstreamUrl.",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "private String upstreamUrl;",
                "type": "ADD",
                "lineNo": 53
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 55
              },
              {
                "line": "* gray status.",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "private Boolean gray;",
                "type": "ADD",
                "lineNo": 58
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 60
              },
              {
                "line": "* group.",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "private String group;",
                "type": "ADD",
                "lineNo": 63
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 65
              },
              {
                "line": "* version.",
                "type": "ADD",
                "lineNo": 66
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 67
              },
              {
                "line": "private String version;",
                "type": "ADD",
                "lineNo": 68
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "* weight.",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "private int weight;",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 75
              },
              {
                "line": "* false close/ true open.",
                "type": "ADD",
                "lineNo": 76
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 77
              },
              {
                "line": "private boolean status = true;",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "* startup time.",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "private long timestamp;",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "* warmup.",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "private int warmup;",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 90
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String upstreamUrl"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.Boolean gray"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtField",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String version"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "int weight"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtField",
                "value": "boolean status"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtField",
                "value": "long timestamp"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtField",
                "value": "int warmup"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 162
              },
              {
                "line": "* Gets the value of gray.",
                "type": "ADD",
                "lineNo": 163
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 164
              },
              {
                "line": "* @return the value of gray",
                "type": "ADD",
                "lineNo": 165
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 166
              },
              {
                "line": "public Boolean isGray() {",
                "type": "ADD",
                "lineNo": 167
              },
              {
                "line": "return gray;",
                "type": "ADD",
                "lineNo": 168
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 169
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 171
              },
              {
                "line": "* Sets the gray.",
                "type": "ADD",
                "lineNo": 172
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 173
              },
              {
                "line": "* @param gray gray",
                "type": "ADD",
                "lineNo": 174
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 175
              },
              {
                "line": "public void setGray(final Boolean gray) {",
                "type": "ADD",
                "lineNo": 176
              },
              {
                "line": "this.gray = gray;",
                "type": "ADD",
                "lineNo": 177
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 178
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 180
              },
              {
                "line": "* Gets the value of upstreamUrl.",
                "type": "ADD",
                "lineNo": 181
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 182
              },
              {
                "line": "* @return the value of upstreamUrl",
                "type": "ADD",
                "lineNo": 183
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 184
              },
              {
                "line": "public String getUpstreamUrl() {",
                "type": "ADD",
                "lineNo": 185
              },
              {
                "line": "return upstreamUrl;",
                "type": "ADD",
                "lineNo": 186
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 187
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 189
              },
              {
                "line": "* Sets the upstreamUrl.",
                "type": "ADD",
                "lineNo": 190
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 191
              },
              {
                "line": "* @param upstreamUrl upstreamUrl",
                "type": "ADD",
                "lineNo": 192
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 193
              },
              {
                "line": "public void setUpstreamUrl(final String upstreamUrl) {",
                "type": "ADD",
                "lineNo": 194
              },
              {
                "line": "this.upstreamUrl = upstreamUrl;",
                "type": "ADD",
                "lineNo": 195
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 196
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 198
              },
              {
                "line": "* Gets the value of weight.",
                "type": "ADD",
                "lineNo": 199
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 200
              },
              {
                "line": "* @return the value of weight",
                "type": "ADD",
                "lineNo": 201
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 202
              },
              {
                "line": "public int getWeight() {",
                "type": "ADD",
                "lineNo": 203
              },
              {
                "line": "return weight;",
                "type": "ADD",
                "lineNo": 204
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 205
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 207
              },
              {
                "line": "* Sets the weight.",
                "type": "ADD",
                "lineNo": 208
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 209
              },
              {
                "line": "* @param weight weight",
                "type": "ADD",
                "lineNo": 210
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 211
              },
              {
                "line": "public void setWeight(final int weight) {",
                "type": "ADD",
                "lineNo": 212
              },
              {
                "line": "this.weight = weight;",
                "type": "ADD",
                "lineNo": 213
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 214
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 216
              },
              {
                "line": "* Gets the value of status.",
                "type": "ADD",
                "lineNo": 217
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 218
              },
              {
                "line": "* @return the value of status",
                "type": "ADD",
                "lineNo": 219
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 220
              },
              {
                "line": "public boolean isStatus() {",
                "type": "ADD",
                "lineNo": 221
              },
              {
                "line": "return status;",
                "type": "ADD",
                "lineNo": 222
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 223
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 225
              },
              {
                "line": "* Sets the status.",
                "type": "ADD",
                "lineNo": 226
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 227
              },
              {
                "line": "* @param status status",
                "type": "ADD",
                "lineNo": 228
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 229
              },
              {
                "line": "public void setStatus(final boolean status) {",
                "type": "ADD",
                "lineNo": 230
              },
              {
                "line": "this.status = status;",
                "type": "ADD",
                "lineNo": 231
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 232
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 234
              },
              {
                "line": "* Gets the value of timestamp.",
                "type": "ADD",
                "lineNo": 235
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 236
              },
              {
                "line": "* @return the value of timestamp",
                "type": "ADD",
                "lineNo": 237
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 238
              },
              {
                "line": "public long getTimestamp() {",
                "type": "ADD",
                "lineNo": 239
              },
              {
                "line": "return timestamp;",
                "type": "ADD",
                "lineNo": 240
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 241
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 243
              },
              {
                "line": "* Sets the timestamp.",
                "type": "ADD",
                "lineNo": 244
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 245
              },
              {
                "line": "* @param timestamp timestamp",
                "type": "ADD",
                "lineNo": 246
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 247
              },
              {
                "line": "public void setTimestamp(final long timestamp) {",
                "type": "ADD",
                "lineNo": 248
              },
              {
                "line": "this.timestamp = timestamp;",
                "type": "ADD",
                "lineNo": 249
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 250
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 252
              },
              {
                "line": "* Gets the value of warmup.",
                "type": "ADD",
                "lineNo": 253
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 254
              },
              {
                "line": "* @return the value of warmup",
                "type": "ADD",
                "lineNo": 255
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 256
              },
              {
                "line": "public int getWarmup() {",
                "type": "ADD",
                "lineNo": 257
              },
              {
                "line": "return warmup;",
                "type": "ADD",
                "lineNo": 258
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 259
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 261
              },
              {
                "line": "* Sets the warmup.",
                "type": "ADD",
                "lineNo": 262
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 263
              },
              {
                "line": "* @param warmup warmup",
                "type": "ADD",
                "lineNo": 264
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 265
              },
              {
                "line": "public void setWarmup(final int warmup) {",
                "type": "ADD",
                "lineNo": 266
              },
              {
                "line": "this.warmup = warmup;",
                "type": "ADD",
                "lineNo": 267
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 268
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 270
              },
              {
                "line": "* Gets the value of group.",
                "type": "ADD",
                "lineNo": 271
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 272
              },
              {
                "line": "* @return the value of group",
                "type": "ADD",
                "lineNo": 273
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 274
              },
              {
                "line": "public String getGroup() {",
                "type": "ADD",
                "lineNo": 275
              },
              {
                "line": "return group;",
                "type": "ADD",
                "lineNo": 276
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 277
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 279
              },
              {
                "line": "* Sets the group.",
                "type": "ADD",
                "lineNo": 280
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 281
              },
              {
                "line": "* @param group group",
                "type": "ADD",
                "lineNo": 282
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 283
              },
              {
                "line": "public void setGroup(final String group) {",
                "type": "ADD",
                "lineNo": 284
              },
              {
                "line": "this.group = group;",
                "type": "ADD",
                "lineNo": 285
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 286
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 288
              },
              {
                "line": "* Gets the value of version.",
                "type": "ADD",
                "lineNo": 289
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 290
              },
              {
                "line": "* @return the value of version",
                "type": "ADD",
                "lineNo": 291
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 292
              },
              {
                "line": "public String getVersion() {",
                "type": "ADD",
                "lineNo": 293
              },
              {
                "line": "return version;",
                "type": "ADD",
                "lineNo": 294
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 295
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 297
              },
              {
                "line": "* Sets the version.",
                "type": "ADD",
                "lineNo": 298
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 299
              },
              {
                "line": "* @param version version",
                "type": "ADD",
                "lineNo": 300
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 301
              },
              {
                "line": "public void setVersion(final String version) {",
                "type": "ADD",
                "lineNo": 302
              },
              {
                "line": "this.version = version;",
                "type": "ADD",
                "lineNo": 303
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 304
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.isGray()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean gray"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.setGray(Boolean)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Boolean gray"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.Boolean gray"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Boolean gray"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getUpstreamUrl()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String upstreamUrl"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.setUpstreamUrl(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String upstreamUrl"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String upstreamUrl"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String upstreamUrl"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getWeight()"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtFieldRead",
                "value": "int weight"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.setWeight(int)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "int weight"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtFieldWrite",
                "value": "int weight"
              },
              {
                "type": "CtVariableRead",
                "value": "int weight"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.isStatus()"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtFieldRead",
                "value": "boolean status"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.setStatus(boolean)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "boolean status"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtFieldWrite",
                "value": "boolean status"
              },
              {
                "type": "CtVariableRead",
                "value": "boolean status"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getTimestamp()"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtFieldRead",
                "value": "long timestamp"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.setTimestamp(long)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "long timestamp"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtFieldWrite",
                "value": "long timestamp"
              },
              {
                "type": "CtVariableRead",
                "value": "long timestamp"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getWarmup()"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtFieldRead",
                "value": "int warmup"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.setWarmup(int)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "int warmup"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtFieldWrite",
                "value": "int warmup"
              },
              {
                "type": "CtVariableRead",
                "value": "int warmup"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getGroup()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.setGroup(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String group"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getVersion()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.setVersion(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String version"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String version"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String version"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (o == null || getClass() != o.getClass()) {",
                "type": "DELETE",
                "lineNo": 127
              }
            ],
            "targetChanges": [
              {
                "line": "if (!(o instanceof DubboSelectorHandle)) {",
                "type": "ADD",
                "lineNo": 311
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object o"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Object.getClass()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object o"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Object.getClass()"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object o"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return port == that.port && Objects.equals(registry, that.registry)",
                "type": "DELETE",
                "lineNo": 131
              },
              {
                "line": "&& Objects.equals(appName, that.appName) && Objects.equals(protocol, that.protocol);",
                "type": "DELETE",
                "lineNo": 132
              }
            ],
            "targetChanges": [
              {
                "line": "return port == that.port",
                "type": "ADD",
                "lineNo": 315
              },
              {
                "line": "&& weight == that.weight",
                "type": "ADD",
                "lineNo": 316
              },
              {
                "line": "&& status == that.status",
                "type": "ADD",
                "lineNo": 317
              },
              {
                "line": "&& timestamp == that.timestamp",
                "type": "ADD",
                "lineNo": 318
              },
              {
                "line": "&& warmup == that.warmup",
                "type": "ADD",
                "lineNo": 319
              },
              {
                "line": "&& Objects.equals(registry, that.registry)",
                "type": "ADD",
                "lineNo": 320
              },
              {
                "line": "&& Objects.equals(appName, that.appName)",
                "type": "ADD",
                "lineNo": 321
              },
              {
                "line": "&& Objects.equals(protocol, that.protocol)",
                "type": "ADD",
                "lineNo": 322
              },
              {
                "line": "&& Objects.equals(upstreamUrl, that.upstreamUrl)",
                "type": "ADD",
                "lineNo": 323
              },
              {
                "line": "&& Objects.equals(gray, that.gray)",
                "type": "ADD",
                "lineNo": 324
              },
              {
                "line": "&& Objects.equals(group, that.group)",
                "type": "ADD",
                "lineNo": 325
              },
              {
                "line": "&& Objects.equals(version, that.version);",
                "type": "ADD",
                "lineNo": 326
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtFieldRead",
                "value": "int port"
              },
              {
                "type": "CtFieldRead",
                "value": "int port"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String registry"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String registry"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String protocol"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String protocol"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              }
            ],
            "targetElements": [
              {
                "type": "CtFieldRead",
                "value": "int port"
              },
              {
                "type": "CtFieldRead",
                "value": "int port"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtFieldRead",
                "value": "int weight"
              },
              {
                "type": "CtFieldRead",
                "value": "int weight"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtFieldRead",
                "value": "boolean status"
              },
              {
                "type": "CtFieldRead",
                "value": "boolean status"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtFieldRead",
                "value": "long timestamp"
              },
              {
                "type": "CtFieldRead",
                "value": "long timestamp"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtFieldRead",
                "value": "int warmup"
              },
              {
                "type": "CtFieldRead",
                "value": "int warmup"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String registry"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String registry"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String protocol"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String protocol"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String upstreamUrl"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String upstreamUrl"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean gray"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean gray"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle that"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return Objects.hash(registry, appName, protocol, port);",
                "type": "DELETE",
                "lineNo": 137
              }
            ],
            "targetChanges": [
              {
                "line": "return Objects.hash(registry, appName, protocol, port, upstreamUrl, gray, weight, status, timestamp, warmup, group, version);",
                "type": "ADD",
                "lineNo": 331
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.hash(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.hash(Object[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String registry"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String protocol"
              },
              {
                "type": "CtFieldRead",
                "value": "int port"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.hash(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.hash(Object[])"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String registry"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String protocol"
              },
              {
                "type": "CtFieldRead",
                "value": "int port"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String upstreamUrl"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean gray"
              },
              {
                "type": "CtFieldRead",
                "value": "int weight"
              },
              {
                "type": "CtFieldRead",
                "value": "boolean status"
              },
              {
                "type": "CtFieldRead",
                "value": "long timestamp"
              },
              {
                "type": "CtFieldRead",
                "value": "int warmup"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "+ \"registry='\"",
                "type": "DELETE",
                "lineNo": 143
              },
              {
                "line": "+ registry",
                "type": "DELETE",
                "lineNo": 144
              },
              {
                "line": "+ '\\''",
                "type": "DELETE",
                "lineNo": 145
              },
              {
                "line": "+ \", appName='\"",
                "type": "DELETE",
                "lineNo": 146
              },
              {
                "line": "+ appName",
                "type": "DELETE",
                "lineNo": 147
              },
              {
                "line": "+ '\\''",
                "type": "DELETE",
                "lineNo": 148
              },
              {
                "line": "+ \", protocol='\"",
                "type": "DELETE",
                "lineNo": 149
              },
              {
                "line": "+ protocol",
                "type": "DELETE",
                "lineNo": 150
              },
              {
                "line": "+ '\\''",
                "type": "DELETE",
                "lineNo": 151
              },
              {
                "line": "+ \", port=\"",
                "type": "DELETE",
                "lineNo": 152
              },
              {
                "line": "+ port",
                "type": "DELETE",
                "lineNo": 153
              }
            ],
            "targetChanges": [
              {
                "line": "+ \"registry='\" + registry",
                "type": "ADD",
                "lineNo": 337
              },
              {
                "line": "+ \", appName='\" + appName",
                "type": "ADD",
                "lineNo": 338
              },
              {
                "line": "+ \", protocol='\" + protocol",
                "type": "ADD",
                "lineNo": 339
              },
              {
                "line": "+ \", port=\" + port",
                "type": "ADD",
                "lineNo": 340
              },
              {
                "line": "+ \", upstreamUrl='\" + upstreamUrl",
                "type": "ADD",
                "lineNo": 341
              },
              {
                "line": "+ \", gray=\" + gray",
                "type": "ADD",
                "lineNo": 342
              },
              {
                "line": "+ \", weight=\" + weight",
                "type": "ADD",
                "lineNo": 343
              },
              {
                "line": "+ \", status=\" + status",
                "type": "ADD",
                "lineNo": 344
              },
              {
                "line": "+ \", timestamp=\" + timestamp",
                "type": "ADD",
                "lineNo": 345
              },
              {
                "line": "+ \", warmup=\" + warmup",
                "type": "ADD",
                "lineNo": 346
              },
              {
                "line": "+ \", group='\" + group",
                "type": "ADD",
                "lineNo": 347
              },
              {
                "line": "+ \", version='\" + version",
                "type": "ADD",
                "lineNo": 348
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'registry=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String registry"
              },
              {
                "type": "CtLiteral",
                "value": "char '''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', appName=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtLiteral",
                "value": "char '''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', protocol=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String protocol"
              },
              {
                "type": "CtLiteral",
                "value": "char '''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', port='"
              },
              {
                "type": "CtFieldRead",
                "value": "int port"
              }
            ],
            "targetElements": [
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'registry=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String registry"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', appName=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', protocol=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String protocol"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', port='"
              },
              {
                "type": "CtFieldRead",
                "value": "int port"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', upstreamUrl=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String upstreamUrl"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', gray='"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean gray"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', weight='"
              },
              {
                "type": "CtFieldRead",
                "value": "int weight"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', status='"
              },
              {
                "type": "CtFieldRead",
                "value": "boolean status"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', timestamp='"
              },
              {
                "type": "CtFieldRead",
                "value": "long timestamp"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', warmup='"
              },
              {
                "type": "CtFieldRead",
                "value": "int warmup"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', group=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', version=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/test/java/org/apache/shenyu/common/dto/convert/rule/RuleHandleFactoryTest.java",
        "aPath": "shenyu-common/src/test/java/org/apache/shenyu/common/dto/convert/rule/RuleHandleFactoryTest.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactoryTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "RuleHandle handle = RuleHandleFactory.ruleHandle(PluginEnum.DUBBO.getName(), \"\");",
                "type": "DELETE",
                "lineNo": 38
              }
            ],
            "targetChanges": [
              {
                "line": "RuleHandle handle = RuleHandleFactory.ruleHandle(PluginEnum.DUBBO.getName(), \"\", \"{\\\"loadbalance\\\":\\\"random\\\"}\");",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle handle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle handle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DUBBO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{\"loadbalance\":\"random\"}'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "handle = RuleHandleFactory.ruleHandle(PluginEnum.SOFA.getName(), \"\");",
                "type": "DELETE",
                "lineNo": 42
              }
            ],
            "targetChanges": [
              {
                "line": "handle = RuleHandleFactory.ruleHandle(PluginEnum.SOFA.getName(), \"\", \"\");",
                "type": "ADD",
                "lineNo": 42
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle handle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum SOFA"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum SOFA"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle handle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum SOFA"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum SOFA"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "handle = RuleHandleFactory.ruleHandle(PluginEnum.DIVIDE.getName(), \"\");",
                "type": "DELETE",
                "lineNo": 46
              }
            ],
            "targetChanges": [
              {
                "line": "handle = RuleHandleFactory.ruleHandle(PluginEnum.DIVIDE.getName(), \"\", \"\");",
                "type": "ADD",
                "lineNo": 46
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle handle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle handle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "handle = RuleHandleFactory.ruleHandle(PluginEnum.GRPC.getName(), \"\");",
                "type": "DELETE",
                "lineNo": 50
              }
            ],
            "targetChanges": [
              {
                "line": "handle = RuleHandleFactory.ruleHandle(PluginEnum.GRPC.getName(), \"\", \"\");",
                "type": "ADD",
                "lineNo": 50
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle handle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum GRPC"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum GRPC"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle handle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum GRPC"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum GRPC"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "handle = RuleHandleFactory.ruleHandle(PluginEnum.SPRING_CLOUD.getName(), \"\");",
                "type": "DELETE",
                "lineNo": 54
              }
            ],
            "targetChanges": [
              {
                "line": "handle = RuleHandleFactory.ruleHandle(PluginEnum.SPRING_CLOUD.getName(), \"\", \"\");",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle handle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum SPRING_CLOUD"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum SPRING_CLOUD"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableWrite",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle handle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum SPRING_CLOUD"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum SPRING_CLOUD"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-common/src/test/java/org/apache/shenyu/common/dto/convert/rule/impl/ContextMappingHandleTest.java",
        "aPath": "shenyu-common/src/test/java/org/apache/shenyu/common/dto/convert/rule/impl/ContextMappingHandleTest.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.impl.ContextMappingHandleTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "RuleHandle aDefault = contextMappingHandle.createDefault(PATH);",
                "type": "DELETE",
                "lineNo": 38
              }
            ],
            "targetChanges": [
              {
                "line": "RuleHandle aDefault = contextMappingHandle.createDefault(PATH, \"\");",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle aDefault"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ContextMappingHandle.createDefault(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ContextMappingHandle contextMappingHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ContextMappingHandle.createDefault(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PATH"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle aDefault"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ContextMappingHandle.createDefault(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ContextMappingHandle contextMappingHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ContextMappingHandle.createDefault(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PATH"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-common/src/test/java/org/apache/shenyu/common/dto/convert/rule/impl/ModifyResponseRuleHandleTest.java",
        "aPath": "shenyu-common/src/test/java/org/apache/shenyu/common/dto/convert/rule/impl/ModifyResponseRuleHandleTest.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.impl.ModifyResponseRuleHandleTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "RuleHandle aDefault = modifyResponseRuleHandle.createDefault(PATH);",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "RuleHandle aDefault = modifyResponseRuleHandle.createDefault(PATH, \"\");",
                "type": "ADD",
                "lineNo": 39
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle aDefault"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ModifyResponseRuleHandle.createDefault(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ModifyResponseRuleHandle modifyResponseRuleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ModifyResponseRuleHandle.createDefault(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PATH"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle aDefault"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ModifyResponseRuleHandle.createDefault(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ModifyResponseRuleHandle modifyResponseRuleHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ModifyResponseRuleHandle.createDefault(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PATH"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-common/src/test/java/org/apache/shenyu/common/dto/convert/rule/impl/ParamMappingHandleTest.java",
        "aPath": "shenyu-common/src/test/java/org/apache/shenyu/common/dto/convert/rule/impl/ParamMappingHandleTest.java",
        "name": "org.apache.shenyu.common.dto.convert.rule.impl.ParamMappingHandleTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "RuleHandle aDefault = paramMappingHandle.createDefault(PATH);",
                "type": "DELETE",
                "lineNo": 40
              }
            ],
            "targetChanges": [
              {
                "line": "RuleHandle aDefault = paramMappingHandle.createDefault(PATH, \"\");",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle aDefault"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ParamMappingHandle.createDefault(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ParamMappingHandle paramMappingHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ParamMappingHandle.createDefault(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PATH"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle aDefault"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ParamMappingHandle.createDefault(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ParamMappingHandle paramMappingHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.ParamMappingHandle.createDefault(String,String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String PATH"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-examples/shenyu-examples-dubbo/shenyu-examples-apache-dubbo-service-annotation/src/main/java/org/apache/shenyu/examples/apache/dubbo/service/annotation/impl/DubboTestServiceImpl.java",
        "aPath": "shenyu-examples/shenyu-examples-dubbo/shenyu-examples-apache-dubbo-service-annotation/src/main/java/org/apache/shenyu/examples/apache/dubbo/service/annotation/impl/DubboTestServiceImpl.java",
        "name": "org.apache.shenyu.examples.apache.dubbo.service.annotation.impl.DubboTestServiceImpl",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "private static final Logger logger = LoggerFactory.getLogger(DubboTestServiceImpl.class);",
                "type": "ADD",
                "lineNo": 36
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtTypeReference",
                "value": "org.slf4j.Logger"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.slf4j.LoggerFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.LoggerFactory.getLogger(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "logger.info(\"==========================================\u63a5\u53e3\u88ab\u8c03\u7528===================================\");",
                "type": "ADD",
                "lineNo": 44
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger logger"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '==========================================\u63a5\u53e3\u88ab\u8c03\u7528==================================='"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-loadbalancer/src/main/java/org/apache/shenyu/loadbalancer/entity/Upstream.java",
        "aPath": "shenyu-loadbalancer/src/main/java/org/apache/shenyu/loadbalancer/entity/Upstream.java",
        "name": "org.apache.shenyu.loadbalancer.entity.Upstream",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "* healthy.",
                "type": "ADD",
                "lineNo": 58
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 59
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "* lastHealthTimestamp.",
                "type": "ADD",
                "lineNo": 63
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 64
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 67
              },
              {
                "line": "* lastUnhealthyTimestamp.",
                "type": "ADD",
                "lineNo": 68
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 69
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "* group.",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "private String group;",
                "type": "ADD",
                "lineNo": 75
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 77
              },
              {
                "line": "* version.",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "private String version;",
                "type": "ADD",
                "lineNo": 80
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String version"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "this.group = builder.group;",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "this.version = builder.version;",
                "type": "ADD",
                "lineNo": 90
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String group"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder builder"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String version"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder builder"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder builder"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "* Gets group.",
                "type": "ADD",
                "lineNo": 220
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 221
              },
              {
                "line": "* @return the group",
                "type": "ADD",
                "lineNo": 222
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 223
              },
              {
                "line": "public String getGroup() {",
                "type": "ADD",
                "lineNo": 224
              },
              {
                "line": "return group;",
                "type": "ADD",
                "lineNo": 225
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 226
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 228
              },
              {
                "line": "* Sets group.",
                "type": "ADD",
                "lineNo": 229
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 230
              },
              {
                "line": "* @param group the group",
                "type": "ADD",
                "lineNo": 231
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 232
              },
              {
                "line": "public void setGroup(final String group) {",
                "type": "ADD",
                "lineNo": 233
              },
              {
                "line": "this.group = group;",
                "type": "ADD",
                "lineNo": 234
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 235
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 237
              },
              {
                "line": "* Gets version.",
                "type": "ADD",
                "lineNo": 238
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 239
              },
              {
                "line": "* @return the version",
                "type": "ADD",
                "lineNo": 240
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 241
              },
              {
                "line": "public String getVersion() {",
                "type": "ADD",
                "lineNo": 242
              },
              {
                "line": "return version;",
                "type": "ADD",
                "lineNo": 243
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 244
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 246
              },
              {
                "line": "* Sets version.",
                "type": "ADD",
                "lineNo": 247
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 248
              },
              {
                "line": "* @param version the version",
                "type": "ADD",
                "lineNo": 249
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 250
              },
              {
                "line": "public void setVersion(final String version) {",
                "type": "ADD",
                "lineNo": 251
              },
              {
                "line": "this.version = version;",
                "type": "ADD",
                "lineNo": 252
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 253
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 255
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream.getGroup()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream.setGroup(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String group"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream.getVersion()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream.setVersion(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String version"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String version"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String version"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "+ \"protocol='\"",
                "type": "DELETE",
                "lineNo": 227
              },
              {
                "line": "+ protocol",
                "type": "DELETE",
                "lineNo": 228
              },
              {
                "line": "+ \", url='\"",
                "type": "DELETE",
                "lineNo": 229
              },
              {
                "line": "+ url",
                "type": "DELETE",
                "lineNo": 230
              },
              {
                "line": "+ \", weight=\"",
                "type": "DELETE",
                "lineNo": 231
              },
              {
                "line": "+ weight",
                "type": "DELETE",
                "lineNo": 232
              },
              {
                "line": "+ \", status=\"",
                "type": "DELETE",
                "lineNo": 233
              },
              {
                "line": "+ status",
                "type": "DELETE",
                "lineNo": 234
              },
              {
                "line": "+ \", timestamp=\"",
                "type": "DELETE",
                "lineNo": 235
              },
              {
                "line": "+ timestamp",
                "type": "DELETE",
                "lineNo": 236
              },
              {
                "line": "+ \", warmup=\"",
                "type": "DELETE",
                "lineNo": 237
              },
              {
                "line": "+ warmup",
                "type": "DELETE",
                "lineNo": 238
              }
            ],
            "targetChanges": [
              {
                "line": "+ \"protocol='\" + protocol",
                "type": "ADD",
                "lineNo": 284
              },
              {
                "line": "+ \", url='\" + url",
                "type": "ADD",
                "lineNo": 285
              },
              {
                "line": "+ \", weight=\" + weight",
                "type": "ADD",
                "lineNo": 286
              },
              {
                "line": "+ \", status=\" + status",
                "type": "ADD",
                "lineNo": 287
              },
              {
                "line": "+ \", timestamp=\" + timestamp",
                "type": "ADD",
                "lineNo": 288
              },
              {
                "line": "+ \", warmup=\" + warmup",
                "type": "ADD",
                "lineNo": 289
              },
              {
                "line": "+ \", group='\" + group",
                "type": "ADD",
                "lineNo": 290
              },
              {
                "line": "+ \", version='\" + version",
                "type": "ADD",
                "lineNo": 291
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'protocol=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String protocol"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', url=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String url"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', weight='"
              },
              {
                "type": "CtFieldRead",
                "value": "int weight"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', status='"
              },
              {
                "type": "CtFieldRead",
                "value": "boolean status"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', timestamp='"
              },
              {
                "type": "CtFieldRead",
                "value": "long timestamp"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', warmup='"
              },
              {
                "type": "CtFieldRead",
                "value": "int warmup"
              }
            ],
            "targetElements": [
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'protocol=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String protocol"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', url=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String url"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', weight='"
              },
              {
                "type": "CtFieldRead",
                "value": "int weight"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', status='"
              },
              {
                "type": "CtFieldRead",
                "value": "boolean status"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', timestamp='"
              },
              {
                "type": "CtFieldRead",
                "value": "long timestamp"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', warmup='"
              },
              {
                "type": "CtFieldRead",
                "value": "int warmup"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', group=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ', version=''"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String version"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "* group.",
                "type": "ADD",
                "lineNo": 331
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 332
              },
              {
                "line": "private String group;",
                "type": "ADD",
                "lineNo": 333
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 335
              },
              {
                "line": "* version.",
                "type": "ADD",
                "lineNo": 336
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 337
              },
              {
                "line": "private String version;",
                "type": "ADD",
                "lineNo": 338
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 340
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String version"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 421
              },
              {
                "line": "* build group.",
                "type": "ADD",
                "lineNo": 422
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 423
              },
              {
                "line": "* @param group group",
                "type": "ADD",
                "lineNo": 424
              },
              {
                "line": "* @return this builder",
                "type": "ADD",
                "lineNo": 425
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 426
              },
              {
                "line": "public Builder group(final String group) {",
                "type": "ADD",
                "lineNo": 427
              },
              {
                "line": "this.group = group;",
                "type": "ADD",
                "lineNo": 428
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 429
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 430
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 432
              },
              {
                "line": "* build version.",
                "type": "ADD",
                "lineNo": 433
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 434
              },
              {
                "line": "* @param version version",
                "type": "ADD",
                "lineNo": 435
              },
              {
                "line": "* @return this builder",
                "type": "ADD",
                "lineNo": 436
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 437
              },
              {
                "line": "public Builder version(final String version) {",
                "type": "ADD",
                "lineNo": 438
              },
              {
                "line": "this.version = version;",
                "type": "ADD",
                "lineNo": 439
              },
              {
                "line": "return this;",
                "type": "ADD",
                "lineNo": 440
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 441
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.group(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String group"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String group"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String group"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.version(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String version"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String version"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String version"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/ApacheDubboPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/ApacheDubboPlugin.java",
        "name": "org.apache.shenyu.plugin.apache.dubbo.ApacheDubboPlugin",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "RpcContext.getContext().setAttachment(Constants.DUBBO_SELECTOR_ID, selector.getId());",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": "RpcContext.getContext().setAttachment(Constants.DUBBO_RULE_ID, rule.getId());",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "RpcContext.getContext().setAttachment(Constants.DUBBO_REMOTE_ADDRESS, Objects.requireNonNull(exchange.getRequest().getRemoteAddress()).getAddress().getHostAddress());",
                "type": "ADD",
                "lineNo": 80
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getContext()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.dubbo.rpc.RpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getContext()"
              },
              {
                "type": "CtExecutableReference",
                "value": "setAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String DUBBO_SELECTOR_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String DUBBO_SELECTOR_ID"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selector"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtInvocation",
                "value": "setAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getContext()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.dubbo.rpc.RpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getContext()"
              },
              {
                "type": "CtExecutableReference",
                "value": "setAttachment(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String DUBBO_RULE_ID"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String DUBBO_RULE_ID"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData rule"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtInvocation",
                "value": "setAttachment(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getContext()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.dubbo.rpc.RpcContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "getContext()"
              },
              {
                "type": "CtExecutableReference",
                "value": "setAttachment(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String DUBBO_REMOTE_ADDRESS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String DUBBO_REMOTE_ADDRESS"
              },
              {
                "type": "CtInvocation",
                "value": "getHostAddress()"
              },
              {
                "type": "CtInvocation",
                "value": "getAddress()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.requireNonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.requireNonNull(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "getRemoteAddress()"
              },
              {
                "type": "CtInvocation",
                "value": "getRequest()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRequest()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getRemoteAddress()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAddress()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getHostAddress()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/cache/ApplicationConfigCache.java",
        "aPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/cache/ApplicationConfigCache.java",
        "name": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "reference.setLoadbalance(\"gray\");",
                "type": "ADD",
                "lineNo": 158
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setLoadbalance(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig reference"
              },
              {
                "type": "CtExecutableReference",
                "value": "setLoadbalance(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'gray'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (StringUtils.isNoneBlank(dubboParamExtInfo.getLoadbalance())) {",
                "type": "DELETE",
                "lineNo": 167
              },
              {
                "line": "reference.setLoadbalance(dubboParamExtInfo.getLoadbalance());",
                "type": "DELETE",
                "lineNo": 168
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 169
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache$DubboParamExtInfo.getLoadbalance()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache$DubboParamExtInfo dubboParamExtInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache$DubboParamExtInfo.getLoadbalance()"
              },
              {
                "type": "CtInvocation",
                "value": "setLoadbalance(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig reference"
              },
              {
                "type": "CtExecutableReference",
                "value": "setLoadbalance(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache$DubboParamExtInfo.getLoadbalance()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache$DubboParamExtInfo dubboParamExtInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApplicationConfigCache$DubboParamExtInfo.getLoadbalance()"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/handler/ApacheDubboPluginDataHandler.java",
        "aPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/handler/ApacheDubboPluginDataHandler.java",
        "name": "org.apache.shenyu.plugin.apache.dubbo.handler.ApacheDubboPluginDataHandler",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "public static final Supplier<RuleHandleCache<String, DubboRuleHandle>> RULE_CACHED_HANDLE = new BeanHolder<>(RuleHandleCache::new);",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "public static final Supplier<RuleHandleCache<String, List<DubboSelectorHandle>>> SELECTOR_CACHED_HANDLE = new BeanHolder<>(RuleHandleCache::new);",
                "type": "ADD",
                "lineNo": 51
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.util.function.Supplier RULE_CACHED_HANDLE"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DubboRuleHandle"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.base.utils.BeanHolder.BeanHolder(Supplier)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.utils.BeanHolder"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache.RuleHandleCache()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache.RuleHandleCache()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache"
              },
              {
                "type": "CtField",
                "value": "java.util.function.Supplier SELECTOR_CACHED_HANDLE"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Supplier"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.base.utils.BeanHolder.BeanHolder(Supplier)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.utils.BeanHolder"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache.RuleHandleCache()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache.RuleHandleCache()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "public void handlerSelector(final SelectorData selectorData) {",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "List<DubboSelectorHandle> dubboSelectorHandles = GsonUtils.getInstance().fromList(selectorData.getHandle(), DubboSelectorHandle.class);",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "if (CollectionUtils.isEmpty(dubboSelectorHandles)) {",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "return;",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 75
              },
              {
                "line": "List<DubboSelectorHandle> graySelectorHandle = new ArrayList<>();",
                "type": "ADD",
                "lineNo": 76
              },
              {
                "line": "for (DubboSelectorHandle each : dubboSelectorHandles) {",
                "type": "ADD",
                "lineNo": 77
              },
              {
                "line": "if (StringUtils.isNotBlank(each.getUpstreamUrl()) && Objects.nonNull(each.isGray()) && each.isGray()) {",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": "graySelectorHandle.add(each);",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "if (CollectionUtils.isNotEmpty(graySelectorHandle)) {",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "SELECTOR_CACHED_HANDLE.get().cachedHandle(selectorData.getId(), graySelectorHandle);",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "UpstreamCacheManager.getInstance().submit(selectorData.getId(), convertUpstreamList(graySelectorHandle));",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "public void removeSelector(final SelectorData selectorData) {",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "SELECTOR_CACHED_HANDLE.get().removeHandle(selectorData.getId());",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "UpstreamCacheManager.getInstance().removeByKey(selectorData.getId());",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "public void handlerRule(final RuleData ruleData) {",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "RULE_CACHED_HANDLE.get().cachedHandle(ruleData.getId(), GsonUtils.getInstance().fromJson(ruleData.getHandle(), DubboRuleHandle.class));",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 97
              },
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 99
              },
              {
                "line": "public void removeRule(final RuleData ruleData) {",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": "RULE_CACHED_HANDLE.get().removeHandle(ruleData.getId());",
                "type": "ADD",
                "lineNo": 101
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 104
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.apache.dubbo.handler.ApacheDubboPluginDataHandler.handlerSelector(SelectorData)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.SelectorData"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List dubboSelectorHandles"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromList(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromList(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getHandle()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List dubboSelectorHandles"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List graySelectorHandle"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle each"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List dubboSelectorHandles"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getUpstreamUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle each"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getUpstreamUrl()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.isGray()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle each"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.isGray()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.isGray()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle each"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.isGray()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List graySelectorHandle"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle each"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List graySelectorHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.function.Supplier SELECTOR_CACHED_HANDLE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List graySelectorHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.submit(String,List)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.submit(String,List)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.apache.dubbo.handler.ApacheDubboPluginDataHandler.convertUpstreamList(List)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.apache.dubbo.handler.ApacheDubboPluginDataHandler.convertUpstreamList(List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List graySelectorHandle"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.apache.dubbo.handler.ApacheDubboPluginDataHandler.removeSelector(SelectorData)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.SelectorData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache.removeHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.function.Supplier SELECTOR_CACHED_HANDLE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache.removeHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.removeByKey(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.removeByKey(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.apache.dubbo.handler.ApacheDubboPluginDataHandler.handlerRule(RuleData)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.RuleData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.function.Supplier RULE_CACHED_HANDLE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache.cachedHandle(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getHandle()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.apache.dubbo.handler.ApacheDubboPluginDataHandler.removeRule(RuleData)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.RuleData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache.removeHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.function.Supplier RULE_CACHED_HANDLE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.function.Supplier.get()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.cache.RuleHandleCache.removeHandle(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData ruleData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.getId()"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private List<Upstream> convertUpstreamList(final List<DubboSelectorHandle> handleList) {",
                "type": "ADD",
                "lineNo": 109
              },
              {
                "line": "return handleList.stream().map(u -> Upstream.builder()",
                "type": "ADD",
                "lineNo": 110
              },
              {
                "line": ".protocol(u.getProtocol())",
                "type": "ADD",
                "lineNo": 111
              },
              {
                "line": ".url(u.getUpstreamUrl())",
                "type": "ADD",
                "lineNo": 112
              },
              {
                "line": ".weight(u.getWeight())",
                "type": "ADD",
                "lineNo": 113
              },
              {
                "line": ".status(u.isStatus())",
                "type": "ADD",
                "lineNo": 114
              },
              {
                "line": ".timestamp(u.getTimestamp())",
                "type": "ADD",
                "lineNo": 115
              },
              {
                "line": ".warmup(u.getWarmup())",
                "type": "ADD",
                "lineNo": 116
              },
              {
                "line": ".group(u.getGroup())",
                "type": "ADD",
                "lineNo": 117
              },
              {
                "line": ".version(u.getVersion())",
                "type": "ADD",
                "lineNo": 118
              },
              {
                "line": ".build()).collect(Collectors.toList());",
                "type": "ADD",
                "lineNo": 119
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 120
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.apache.dubbo.handler.ApacheDubboPluginDataHandler.convertUpstreamList(List)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List handleList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List handleList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle u"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.version(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.group(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.warmup(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.timestamp(long)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.status(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.weight(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.url(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.protocol(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream.builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.protocol(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getProtocol()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getProtocol()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.url(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getUpstreamUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getUpstreamUrl()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.weight(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getWeight()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getWeight()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.status(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.isStatus()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.isStatus()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.timestamp(long)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getTimestamp()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getTimestamp()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.warmup(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getWarmup()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getWarmup()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.group(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getGroup()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getGroup()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.version(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getVersion()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboSelectorHandle.getVersion()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.build()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/test/java/org/apache/shenyu/plugin/apache/dubbo/ApacheDubboPluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-apache-dubbo/src/test/java/org/apache/shenyu/plugin/apache/dubbo/ApacheDubboPluginTest.java",
        "name": "org.apache.shenyu.plugin.apache.dubbo.ApacheDubboPluginTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "when(chain.execute(exchange)).thenReturn(Mono.empty());",
                "type": "DELETE",
                "lineNo": 80
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn()"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain.execute(ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain chain"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain.execute(ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn()"
              },
              {
                "type": "CtInvocation",
                "value": "empty()"
              },
              {
                "type": "CtTypeAccess",
                "value": "reactor.core.publisher.Mono"
              },
              {
                "type": "CtExecutableReference",
                "value": "empty()"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-divide/src/test/java/org/apache/shenyu/plugin/divide/DividePluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-divide/src/test/java/org/apache/shenyu/plugin/divide/DividePluginTest.java",
        "name": "org.apache.shenyu.plugin.divide.DividePluginTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "DivideRuleHandle handle = (DivideRuleHandle) RuleHandleFactory.ruleHandle(PluginEnum.DIVIDE.getName(), \"\");",
                "type": "DELETE",
                "lineNo": 160
              }
            ],
            "targetChanges": [
              {
                "line": "DivideRuleHandle handle = (DivideRuleHandle) RuleHandleFactory.ruleHandle(PluginEnum.DIVIDE.getName(), \"\", \"\");",
                "type": "ADD",
                "lineNo": 160
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle handle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle handle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-websocket/src/test/java/org/apache/shenyu/plugin/websocket/WebSocketPluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-websocket/src/test/java/org/apache/shenyu/plugin/websocket/WebSocketPluginTest.java",
        "name": "org.apache.shenyu.plugin.websocket.WebSocketPluginTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "DivideRuleHandle handle = (DivideRuleHandle) RuleHandleFactory.ruleHandle(PluginEnum.DIVIDE.getName(), \"\");",
                "type": "DELETE",
                "lineNo": 152
              }
            ],
            "targetChanges": [
              {
                "line": "DivideRuleHandle handle = (DivideRuleHandle) RuleHandleFactory.ruleHandle(PluginEnum.DIVIDE.getName(), \"\", \"\");",
                "type": "ADD",
                "lineNo": 152
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle handle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle handle"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.impl.DivideRuleHandle"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.rule.RuleHandleFactory.ruleHandle(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.PluginEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum DIVIDE"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.enums.PluginEnum.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ''"
              }
            ]
          }
        ],
        "is_test_source": true
      }
    ]
  },
  {
    "bCommit": "bc16c5fdc",
    "aCommit": "846ec64bd",
    "changes": [
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/controller/ShenyuClientHttpRegistryController.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/controller/ShenyuClientHttpRegistryController.java",
        "name": "org.apache.shenyu.admin.controller.ShenyuClientHttpRegistryController",
        "hunks": [
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "* Offline result string.",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "* @param offlineDTO the offline dto",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "* @return the string",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "@PostMapping(\"/offline\")",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "@ResponseBody",
                "type": "ADD",
                "lineNo": 97
              },
              {
                "line": "public String offline(@RequestBody final URIRegisterDTO offlineDTO) {",
                "type": "ADD",
                "lineNo": 98
              },
              {
                "line": "publisher.publish(offlineDTO);",
                "type": "ADD",
                "lineNo": 99
              },
              {
                "line": "return ShenyuResultMessage.SUCCESS;",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 101
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.controller.ShenyuClientHttpRegistryController.offline(URIRegisterDTO)"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.web.bind.annotation.PostMapping"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/offline'"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.web.bind.annotation.ResponseBody"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO offlineDTO"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.web.bind.annotation.RequestBody"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.client.server.api.ShenyuClientServerRegisterPublisher.publish(DataTypeParent)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.server.api.ShenyuClientServerRegisterPublisher publisher"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.client.server.api.ShenyuClientServerRegisterPublisher.publish(DataTypeParent)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO offlineDTO"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String SUCCESS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.admin.utils.ShenyuResultMessage"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String SUCCESS"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/disruptor/subscriber/URIRegisterExecutorSubscriber.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/disruptor/subscriber/URIRegisterExecutorSubscriber.java",
        "name": "org.apache.shenyu.admin.disruptor.subscriber.URIRegisterExecutorSubscriber",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "listMap.forEach(service::registerURI);",
                "type": "DELETE",
                "lineNo": 70
              }
            ],
            "targetChanges": [
              {
                "line": "listMap.forEach((selectorName, uriList) -> {",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "final List<URIRegisterDTO> register = new LinkedList<>();",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "final List<URIRegisterDTO> offline = new LinkedList<>();",
                "type": "ADD",
                "lineNo": 75
              },
              {
                "line": "for (URIRegisterDTO d : uriList) {",
                "type": "ADD",
                "lineNo": 76
              },
              {
                "line": "final EventType eventType = d.getEventType();",
                "type": "ADD",
                "lineNo": 77
              },
              {
                "line": "if (Objects.isNull(eventType) || EventType.REGISTER.equals(eventType)) {",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": "// eventType is null, should be old versions",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "register.add(d);",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "} else if (EventType.OFFLINE.equals(eventType)) {",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "offline.add(d);",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "service.registerURI(selectorName, register);",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "service.offline(selectorName, offline);",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "});",
                "type": "ADD",
                "lineNo": 87
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map listMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterService.registerURI(String,List)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterService.registerURI(String,List)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterService service"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map listMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.forEach(BiConsumer)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectorName"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List uriList"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List register"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.LinkedList.LinkedList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.LinkedList"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List offline"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.LinkedList.LinkedList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.LinkedList"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO d"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List uriList"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getEventType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO d"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getEventType()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Enum.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Enum.equals(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List register"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO d"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Enum.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType OFFLINE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.register.common.enums.EventType OFFLINE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Enum.equals(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.enums.EventType eventType"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List offline"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO d"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterService.registerURI(String,List)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterService service"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterService.registerURI(String,List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List register"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterService.offline(String,List)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterService service"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterService.offline(String,List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorName"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List offline"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/impl/SelectorServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/impl/SelectorServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.impl.SelectorServiceImpl",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return selectorMapper.updateSelective(selectorDO);",
                "type": "DELETE",
                "lineNo": 209
              }
            ],
            "targetChanges": [
              {
                "line": "final SelectorDO before = selectorMapper.selectById(selectorDO.getId());",
                "type": "ADD",
                "lineNo": 209
              },
              {
                "line": "final int updateCount = selectorMapper.updateSelective(selectorDO);",
                "type": "ADD",
                "lineNo": 210
              },
              {
                "line": "if (updateCount > 0) {",
                "type": "ADD",
                "lineNo": 211
              },
              {
                "line": "selectorEventPublisher.onUpdated(selectorDO, before);",
                "type": "ADD",
                "lineNo": 212
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 213
              },
              {
                "line": "return updateCount;",
                "type": "ADD",
                "lineNo": 214
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.updateSelective(SelectorDO)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.updateSelective(SelectorDO)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO before"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.selectById(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.selectById(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.entity.BaseDO.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.BaseDO.getId()"
              },
              {
                "type": "CtLocalVariable",
                "value": "int updateCount"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.updateSelective(SelectorDO)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper selectorMapper"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.mapper.SelectorMapper.updateSelective(SelectorDO)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtVariableRead",
                "value": "int updateCount"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.publish.SelectorEventPublisher.onUpdated(SelectorDO,SelectorDO)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.admin.service.publish.SelectorEventPublisher selectorEventPublisher"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.publish.SelectorEventPublisher.onUpdated(SelectorDO,SelectorDO)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO before"
              },
              {
                "type": "CtVariableRead",
                "value": "int updateCount"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/AbstractShenyuClientRegisterServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/AbstractShenyuClientRegisterServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* Gets event publisher.",
                "type": "ADD",
                "lineNo": 266
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 267
              },
              {
                "line": "* @return the event publisher",
                "type": "ADD",
                "lineNo": 268
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 269
              },
              {
                "line": "public ApplicationEventPublisher getEventPublisher() {",
                "type": "ADD",
                "lineNo": 270
              },
              {
                "line": "return eventPublisher;",
                "type": "ADD",
                "lineNo": 271
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 272
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 274
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.getEventPublisher()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.context.ApplicationEventPublisher"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.context.ApplicationEventPublisher eventPublisher"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterDivideServiceImpl.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterDivideServiceImpl.java",
        "name": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterDivideServiceImpl",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 132
              },
              {
                "line": "public String offline(final String selectorName, final List<URIRegisterDTO> uriList) {",
                "type": "ADD",
                "lineNo": 133
              },
              {
                "line": "final SelectorService selectorService = getSelectorService();",
                "type": "ADD",
                "lineNo": 134
              },
              {
                "line": "SelectorDO selectorDO = selectorService.findByNameAndPluginName(selectorName, PluginNameAdapter.rpcTypeAdapter(rpcType()));",
                "type": "ADD",
                "lineNo": 135
              },
              {
                "line": "if (Objects.isNull(selectorDO)) {",
                "type": "ADD",
                "lineNo": 136
              },
              {
                "line": "return Constants.SUCCESS;",
                "type": "ADD",
                "lineNo": 137
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 138
              },
              {
                "line": "List<URIRegisterDTO> validUriList = uriList.stream()",
                "type": "ADD",
                "lineNo": 139
              },
              {
                "line": ".filter(dto -> Objects.nonNull(dto.getPort()) && StringUtils.isNotBlank(dto.getHost()))",
                "type": "ADD",
                "lineNo": 140
              },
              {
                "line": ".collect(Collectors.toList());",
                "type": "ADD",
                "lineNo": 141
              },
              {
                "line": "final List<DivideUpstream> needToRemove = buildDivideUpstreamList(validUriList);",
                "type": "ADD",
                "lineNo": 142
              },
              {
                "line": "List<DivideUpstream> existList = GsonUtils.getInstance().fromCurrentList(selectorDO.getHandle(), DivideUpstream.class);",
                "type": "ADD",
                "lineNo": 143
              },
              {
                "line": "existList.removeAll(needToRemove);",
                "type": "ADD",
                "lineNo": 144
              },
              {
                "line": "final String handler = GsonUtils.getInstance().toJson(existList);",
                "type": "ADD",
                "lineNo": 145
              },
              {
                "line": "selectorDO.setHandle(handler);",
                "type": "ADD",
                "lineNo": 146
              },
              {
                "line": "SelectorData selectorData = selectorService.buildByName(selectorName, PluginNameAdapter.rpcTypeAdapter(rpcType()));",
                "type": "ADD",
                "lineNo": 147
              },
              {
                "line": "selectorData.setHandle(handler);",
                "type": "ADD",
                "lineNo": 148
              },
              {
                "line": "// update db",
                "type": "ADD",
                "lineNo": 149
              },
              {
                "line": "selectorService.updateSelective(selectorDO);",
                "type": "ADD",
                "lineNo": 150
              },
              {
                "line": "// publish change event.",
                "type": "ADD",
                "lineNo": 151
              },
              {
                "line": "getEventPublisher().publishEvent(new DataChangedEvent(ConfigGroupEnum.SELECTOR, DataEventTypeEnum.UPDATE, Collections.singletonList(selectorData)));",
                "type": "ADD",
                "lineNo": 152
              },
              {
                "line": "return Constants.SUCCESS;",
                "type": "ADD",
                "lineNo": 153
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 154
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterDivideServiceImpl.offline(String,List)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectorName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List uriList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.service.SelectorService selectorService"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.service.SelectorService"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.getSelectorService()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.getSelectorService()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.SelectorService.findByNameAndPluginName(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.service.SelectorService selectorService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.SelectorService.findByNameAndPluginName(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorName"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.PluginNameAdapter.rpcTypeAdapter(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.PluginNameAdapter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.PluginNameAdapter.rpcTypeAdapter(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterDivideServiceImpl.rpcType()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterDivideServiceImpl.rpcType()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String SUCCESS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String SUCCESS"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List validUriList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List uriList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.filter(Predicate)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO dto"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getPort()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO dto"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getPort()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getHost()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO dto"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.getHost()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List needToRemove"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DivideUpstream"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterDivideServiceImpl.buildDivideUpstreamList(List)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterDivideServiceImpl.buildDivideUpstreamList(List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List validUriList"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List existList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DivideUpstream"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromCurrentList(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromCurrentList(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.getHandle()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.getHandle()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.removeAll(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List existList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.removeAll(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List needToRemove"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String handler"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List existList"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.setHandle(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO.setHandle(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String handler"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.SelectorData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.SelectorService.buildByName(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.service.SelectorService selectorService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.SelectorService.buildByName(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectorName"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.PluginNameAdapter.rpcTypeAdapter(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.PluginNameAdapter"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.PluginNameAdapter.rpcTypeAdapter(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterDivideServiceImpl.rpcType()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterDivideServiceImpl.rpcType()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.setHandle(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.setHandle(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String handler"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.SelectorService.updateSelective(SelectorDO)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.service.SelectorService selectorService"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.SelectorService.updateSelective(SelectorDO)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.admin.model.entity.SelectorDO selectorDO"
              },
              {
                "type": "CtInvocation",
                "value": "publishEvent(org.apache.shenyu.admin.listener.DataChangedEvent)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.getEventPublisher()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.admin.service.register.AbstractShenyuClientRegisterServiceImpl.getEventPublisher()"
              },
              {
                "type": "CtExecutableReference",
                "value": "publishEvent(org.apache.shenyu.admin.listener.DataChangedEvent)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.admin.listener.DataChangedEvent.DataChangedEvent(ConfigGroupEnum,DataEventTypeEnum,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.admin.listener.DataChangedEvent"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.ConfigGroupEnum SELECTOR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.ConfigGroupEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.ConfigGroupEnum SELECTOR"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.enums.DataEventTypeEnum UPDATE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.enums.DataEventTypeEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.common.enums.DataEventTypeEnum UPDATE"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collections.singletonList(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collections.singletonList(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String SUCCESS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String SUCCESS"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterService.java",
        "aPath": "shenyu-admin/src/main/java/org/apache/shenyu/admin/service/register/ShenyuClientRegisterService.java",
        "name": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterService",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* offline.",
                "type": "ADD",
                "lineNo": 66
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 67
              },
              {
                "line": "* @param selectorName the selector name",
                "type": "ADD",
                "lineNo": 68
              },
              {
                "line": "* @param uriList the uri list",
                "type": "ADD",
                "lineNo": 69
              },
              {
                "line": "* @return the string",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "default String offline(final String selectorName, final List<URIRegisterDTO> uriList) {",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "return Constants.SUCCESS;",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 76
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.admin.service.register.ShenyuClientRegisterService.offline(String,List)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectorName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List uriList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String SUCCESS"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String SUCCESS"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-client/shenyu-client-brpc/src/main/java/org/apache/shenyu/client/brpc/BrpcContextRefreshedEventListener.java",
        "aPath": "shenyu-client/shenyu-client-brpc/src/main/java/org/apache/shenyu/client/brpc/BrpcContextRefreshedEventListener.java",
        "name": "org.apache.shenyu.client.brpc.BrpcContextRefreshedEventListener",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": ".eventType(EventType.REGISTER)",
                "type": "ADD",
                "lineNo": 97
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.eventType(EventType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-client/shenyu-client-core/src/main/java/org/apache/shenyu/client/core/disruptor/subcriber/ShenyuClientURIExecutorSubscriber.java",
        "aPath": "shenyu-client/shenyu-client-core/src/main/java/org/apache/shenyu/client/core/disruptor/subcriber/ShenyuClientURIExecutorSubscriber.java",
        "name": "org.apache.shenyu.client.core.disruptor.subcriber.ShenyuClientURIExecutorSubscriber",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "//active offline when shutdown, not now",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "Runtime.getRuntime().addShutdownHook(new Thread(() -> {",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "final URIRegisterDTO offlineDTO = new URIRegisterDTO();",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "BeanUtils.copyProperties(uriRegisterDTO, offlineDTO);",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "offlineDTO.setEventType(EventType.OFFLINE);",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "shenyuClientRegisterRepository.offline(offlineDTO);",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "}));",
                "type": "ADD",
                "lineNo": 92
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.Runtime.addShutdownHook(Thread)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Runtime.getRuntime()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Runtime"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Runtime.getRuntime()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Runtime.addShutdownHook(Thread)"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.lang.Thread.Thread(Runnable)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Thread"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO offlineDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.URIRegisterDTO()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "copyProperties(org.apache.shenyu.register.common.dto.URIRegisterDTO,org.apache.shenyu.register.common.dto.URIRegisterDTO)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.beans.BeanUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "copyProperties(org.apache.shenyu.register.common.dto.URIRegisterDTO,org.apache.shenyu.register.common.dto.URIRegisterDTO)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO uriRegisterDTO"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO offlineDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.setEventType(EventType)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO offlineDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO.setEventType(EventType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType OFFLINE"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.register.common.enums.EventType OFFLINE"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.client.api.ShenyuClientRegisterRepository.offline(URIRegisterDTO)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.client.api.ShenyuClientRegisterRepository shenyuClientRegisterRepository"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.client.api.ShenyuClientRegisterRepository.offline(URIRegisterDTO)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO offlineDTO"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-client/shenyu-client-dubbo/shenyu-client-alibaba-dubbo/src/main/java/org/apache/shenyu/client/alibaba/dubbo/AlibabaDubboServiceBeanListener.java",
        "aPath": "shenyu-client/shenyu-client-dubbo/shenyu-client-alibaba-dubbo/src/main/java/org/apache/shenyu/client/alibaba/dubbo/AlibabaDubboServiceBeanListener.java",
        "name": "org.apache.shenyu.client.alibaba.dubbo.AlibabaDubboServiceBeanListener",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": ".eventType(EventType.REGISTER)",
                "type": "ADD",
                "lineNo": 115
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "eventType()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> EventType.REGISTER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-client/shenyu-client-dubbo/shenyu-client-apache-dubbo/src/main/java/org/apache/shenyu/client/apache/dubbo/ApacheDubboServiceBeanListener.java",
        "aPath": "shenyu-client/shenyu-client-dubbo/shenyu-client-apache-dubbo/src/main/java/org/apache/shenyu/client/apache/dubbo/ApacheDubboServiceBeanListener.java",
        "name": "org.apache.shenyu.client.apache.dubbo.ApacheDubboServiceBeanListener",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": ".eventType(EventType.REGISTER)",
                "type": "ADD",
                "lineNo": 118
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "eventType()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> EventType.REGISTER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-client/shenyu-client-grpc/src/main/java/org/apache/shenyu/client/grpc/GrpcClientEventListener.java",
        "aPath": "shenyu-client/shenyu-client-grpc/src/main/java/org/apache/shenyu/client/grpc/GrpcClientEventListener.java",
        "name": "org.apache.shenyu.client.grpc.GrpcClientEventListener",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": ".eventType(EventType.REGISTER)",
                "type": "ADD",
                "lineNo": 107
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.eventType(EventType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-client/shenyu-client-http/shenyu-client-springcloud/src/main/java/org/apache/shenyu/client/springcloud/init/SpringCloudClientEventListener.java",
        "aPath": "shenyu-client/shenyu-client-http/shenyu-client-springcloud/src/main/java/org/apache/shenyu/client/springcloud/init/SpringCloudClientEventListener.java",
        "name": "org.apache.shenyu.client.springcloud.init.SpringCloudClientEventListener",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": ".eventType(EventType.REGISTER)",
                "type": "ADD",
                "lineNo": 151
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.eventType(EventType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-client/shenyu-client-http/shenyu-client-springmvc/src/main/java/org/apache/shenyu/client/springmvc/init/SpringMvcClientEventListener.java",
        "aPath": "shenyu-client/shenyu-client-http/shenyu-client-springmvc/src/main/java/org/apache/shenyu/client/springmvc/init/SpringMvcClientEventListener.java",
        "name": "org.apache.shenyu.client.springmvc.init.SpringMvcClientEventListener",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": ".eventType(EventType.REGISTER)",
                "type": "ADD",
                "lineNo": 144
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.eventType(EventType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-client/shenyu-client-motan/src/main/java/org/apache/shenyu/client/motan/MotanServiceEventListener.java",
        "aPath": "shenyu-client/shenyu-client-motan/src/main/java/org/apache/shenyu/client/motan/MotanServiceEventListener.java",
        "name": "org.apache.shenyu.client.motan.MotanServiceEventListener",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": ".eventType(EventType.REGISTER)",
                "type": "ADD",
                "lineNo": 102
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.eventType(EventType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-client/shenyu-client-sofa/src/main/java/org/apache/shenyu/client/sofa/SofaServiceEventListener.java",
        "aPath": "shenyu-client/shenyu-client-sofa/src/main/java/org/apache/shenyu/client/sofa/SofaServiceEventListener.java",
        "name": "org.apache.shenyu.client.sofa.SofaServiceEventListener",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": ".eventType(EventType.REGISTER)",
                "type": "ADD",
                "lineNo": 77
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.eventType(EventType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-client/shenyu-client-sofa/src/test/java/org/apache/shenyu/client/sofa/SofaServiceEventListenerTest.java",
        "aPath": "shenyu-client/shenyu-client-sofa/src/test/java/org/apache/shenyu/client/sofa/SofaServiceEventListenerTest.java",
        "name": "org.apache.shenyu.client.sofa.SofaServiceEventListenerTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": ".eventType(EventType.REGISTER)",
                "type": "ADD",
                "lineNo": 119
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.eventType(EventType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-client/shenyu-client-tars/src/main/java/org/apache/shenyu/client/tars/TarsServiceBeanEventListener.java",
        "aPath": "shenyu-client/shenyu-client-tars/src/main/java/org/apache/shenyu/client/tars/TarsServiceBeanEventListener.java",
        "name": "org.apache.shenyu.client.tars.TarsServiceBeanEventListener",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": ".eventType(EventType.REGISTER)",
                "type": "ADD",
                "lineNo": 108
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.eventType(EventType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-client/shenyu-client-websocket/shenyu-client-spring-websocket/src/main/java/org/apache/shenyu/client/spring/websocket/init/SpringWebSocketClientEventListener.java",
        "aPath": "shenyu-client/shenyu-client-websocket/shenyu-client-spring-websocket/src/main/java/org/apache/shenyu/client/spring/websocket/init/SpringWebSocketClientEventListener.java",
        "name": "org.apache.shenyu.client.spring.websocket.init.SpringWebSocketClientEventListener",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": ".eventType(EventType.REGISTER)",
                "type": "ADD",
                "lineNo": 126
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO$Builder.eventType(EventType)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.enums.EventType"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.register.common.enums.EventType REGISTER"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/constant/Constants.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/constant/Constants.java",
        "name": "org.apache.shenyu.common.constant.Constants",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 580
              },
              {
                "line": "* When register by http, the offline path.",
                "type": "ADD",
                "lineNo": 581
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 582
              },
              {
                "line": "String OFFLINE_PATH = \"/shenyu-client/offline\";",
                "type": "ADD",
                "lineNo": 583
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.lang.String OFFLINE_PATH"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/shenyu-client/offline'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-api/src/main/java/org/apache/shenyu/register/client/api/ShenyuClientRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-api/src/main/java/org/apache/shenyu/register/client/api/ShenyuClientRegisterRepository.java",
        "name": "org.apache.shenyu.register.client.api.ShenyuClientRegisterRepository",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* Node active offline when shutdown.",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "* @param offlineDTO the offline dto",
                "type": "ADD",
                "lineNo": 58
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 59
              },
              {
                "line": "default void offline(URIRegisterDTO offlineDTO) {",
                "type": "ADD",
                "lineNo": 60
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.client.api.ShenyuClientRegisterRepository.offline(URIRegisterDTO)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO offlineDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-http/src/main/java/org/apache/shenyu/register/client/http/HttpClientRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-http/src/main/java/org/apache/shenyu/register/client/http/HttpClientRegisterRepository.java",
        "name": "org.apache.shenyu.register.client.http.HttpClientRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "@Override",
                "type": "ADD",
                "lineNo": 98
              },
              {
                "line": "public void offline(final URIRegisterDTO offlineDTO) {",
                "type": "ADD",
                "lineNo": 99
              },
              {
                "line": "doUnregister(offlineDTO);",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 101
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.client.http.HttpClientRegisterRepository.offline(URIRegisterDTO)"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.Override"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO offlineDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.client.http.HttpClientRegisterRepository.doUnregister(Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.client.http.HttpClientRegisterRepository.doUnregister(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.URIRegisterDTO offlineDTO"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return;",
                "type": "DELETE",
                "lineNo": 150
              }
            ],
            "targetChanges": [
              {
                "line": "// considering the situation of multiple clusters, we should continue to execute here",
                "type": "ADD",
                "lineNo": 155
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private <T> void doUnregister(final T t) {",
                "type": "ADD",
                "lineNo": 165
              },
              {
                "line": "for (String server : serverList) {",
                "type": "ADD",
                "lineNo": 166
              },
              {
                "line": "String concat = server.concat(Constants.OFFLINE_PATH);",
                "type": "ADD",
                "lineNo": 167
              },
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 168
              },
              {
                "line": "if (StringUtils.isBlank(accessToken)) {",
                "type": "ADD",
                "lineNo": 169
              },
              {
                "line": "this.setAccessToken();",
                "type": "ADD",
                "lineNo": 170
              },
              {
                "line": "if (StringUtils.isBlank(accessToken)) {",
                "type": "ADD",
                "lineNo": 171
              },
              {
                "line": "throw new NullPointerException(\"accessToken is null\");",
                "type": "ADD",
                "lineNo": 172
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 173
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 174
              },
              {
                "line": "RegisterUtils.doUnregister(GsonUtils.getInstance().toJson(t), concat, accessToken);",
                "type": "ADD",
                "lineNo": 175
              },
              {
                "line": "// considering the situation of multiple clusters, we should continue to execute here",
                "type": "ADD",
                "lineNo": 176
              },
              {
                "line": "} catch (Exception e) {",
                "type": "ADD",
                "lineNo": 177
              },
              {
                "line": "LOGGER.error(\"Unregister admin url :{} is fail. cause:{}\", server, e.getMessage());",
                "type": "ADD",
                "lineNo": 178
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 179
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 180
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 181
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.client.http.HttpClientRegisterRepository.doUnregister(Object)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "null t"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String server"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.List serverList"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String concat"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.concat(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String server"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.concat(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String OFFLINE_PATH"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String OFFLINE_PATH"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String accessToken"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.client.http.HttpClientRegisterRepository.setAccessToken()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.client.http.HttpClientRegisterRepository.setAccessToken()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String accessToken"
              },
              {
                "type": "CtThrow",
                "value": "java.lang.NullPointerException.NullPointerException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.lang.NullPointerException.NullPointerException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NullPointerException"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'accessToken is null'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.client.http.utils.RegisterUtils.doUnregister(String,String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.client.http.utils.RegisterUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.client.http.utils.RegisterUtils.doUnregister(String,String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.toJson(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "null t"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String concat"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String accessToken"
              },
              {
                "type": "CtCatchVariable",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'Unregister admin url :{} is fail. cause:{}'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String server"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Throwable.getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Throwable.getMessage()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-http/src/main/java/org/apache/shenyu/register/client/http/utils/RegisterUtils.java",
        "aPath": "shenyu-register-center/shenyu-register-client/shenyu-register-client-http/src/main/java/org/apache/shenyu/register/client/http/utils/RegisterUtils.java",
        "name": "org.apache.shenyu.register.client.http.utils.RegisterUtils",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "* Do unregister.",
                "type": "ADD",
                "lineNo": 87
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "* @param json        the json",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "* @param url         the url",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "* @param accessToken the token",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "* @throws IOException the io exception",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "public static void doUnregister(final String json, final String url, final String accessToken) throws IOException {",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "if (StringUtils.isBlank(accessToken)) {",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "LOGGER.error(\"{} client unregister error accessToken is null, please check the config : {} \", Constants.URI, json);",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "return;",
                "type": "ADD",
                "lineNo": 97
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 98
              },
              {
                "line": "Headers headers = new Headers.Builder().add(Constants.X_ACCESS_TOKEN, accessToken).build();",
                "type": "ADD",
                "lineNo": 99
              },
              {
                "line": "String result = OkHttpTools.getInstance().post(url, json, headers);",
                "type": "ADD",
                "lineNo": 100
              },
              {
                "line": "if (Objects.equals(SUCCESS, result)) {",
                "type": "ADD",
                "lineNo": 101
              },
              {
                "line": "LOGGER.info(\"{} client unregister success: {} \", Constants.URI, json);",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "} else {",
                "type": "ADD",
                "lineNo": 103
              },
              {
                "line": "LOGGER.error(\"{} client unregister error: {} \", Constants.URI, json);",
                "type": "ADD",
                "lineNo": 104
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 105
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 106
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.client.http.utils.RegisterUtils.doUnregister(String,String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String json"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String url"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String accessToken"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.IOException"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String accessToken"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{} client unregister error accessToken is null, please check the config : {} '"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String URI"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String json"
              },
              {
                "type": "CtLocalVariable",
                "value": "okhttp3.Headers headers"
              },
              {
                "type": "CtTypeReference",
                "value": "okhttp3.Headers"
              },
              {
                "type": "CtInvocation",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "add(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "okhttp3.Headers$Builder()"
              },
              {
                "type": "CtTypeReference",
                "value": "okhttp3.Headers$Builder"
              },
              {
                "type": "CtTypeReference",
                "value": "okhttp3.Headers"
              },
              {
                "type": "CtExecutableReference",
                "value": "add(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String X_ACCESS_TOKEN"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String X_ACCESS_TOKEN"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String accessToken"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.client.http.utils.OkHttpTools.post(String,String,Headers)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.client.http.utils.OkHttpTools.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.client.http.utils.OkHttpTools"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.client.http.utils.OkHttpTools.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.client.http.utils.OkHttpTools.post(String,String,Headers)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String url"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String json"
              },
              {
                "type": "CtVariableRead",
                "value": "okhttp3.Headers headers"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.equals(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String SUCCESS"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String result"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.info(String,Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.info(String,Object,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{} client unregister success: {} '"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String URI"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String json"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOGGER"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '{} client unregister error: {} '"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String URI"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String json"
              }
            ]
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "bcbf1fd40",
    "aCommit": "d8ece536e",
    "changes": [
      {
        "bPath": "shenyu-client/shenyu-client-grpc/src/main/java/org/apache/shenyu/client/grpc/server/GrpcServerRunner.java",
        "aPath": "shenyu-client/shenyu-client-grpc/src/main/java/org/apache/shenyu/client/grpc/server/GrpcServerRunner.java",
        "name": "org.apache.shenyu.client.grpc.server.GrpcServerRunner",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class GrpcServerRunner implements ApplicationRunner {",
                "type": "DELETE",
                "lineNo": 35
              }
            ],
            "targetChanges": [
              {
                "line": "public class GrpcServerRunner implements ApplicationListener<ContextRefreshedEvent> {",
                "type": "ADD",
                "lineNo": 35
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.client.grpc.server.GrpcServerRunner"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.boot.ApplicationRunner"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.client.grpc.server.GrpcServerRunner"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.context.ApplicationListener"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.context.event.ContextRefreshedEvent"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public void run(final ApplicationArguments args) {",
                "type": "DELETE",
                "lineNo": 50
              }
            ],
            "targetChanges": [
              {
                "line": "public void onApplicationEvent(final ContextRefreshedEvent event) {",
                "type": "ADD",
                "lineNo": 50
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.client.grpc.server.GrpcServerRunner.run(ApplicationArguments)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.boot.ApplicationArguments args"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.boot.ApplicationArguments"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.client.grpc.server.GrpcServerRunner.onApplicationEvent(ContextRefreshedEvent)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.context.event.ContextRefreshedEvent event"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.context.event.ContextRefreshedEvent"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/config/ShenyuConfig.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/config/ShenyuConfig.java",
        "name": "org.apache.shenyu.common.config.ShenyuConfig",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private RegisterConfig register = new RegisterConfig();",
                "type": "DELETE",
                "lineNo": 56
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig register"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "private RegisterConfig sdk = new RegisterConfig();",
                "type": "DELETE",
                "lineNo": 58
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdk"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* register.",
                "type": "DELETE",
                "lineNo": 161
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 162
              },
              {
                "line": "* @return Register",
                "type": "DELETE",
                "lineNo": 163
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 164
              },
              {
                "line": "public RegisterConfig getRegister() {",
                "type": "DELETE",
                "lineNo": 165
              },
              {
                "line": "return register;",
                "type": "DELETE",
                "lineNo": 166
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 167
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 169
              },
              {
                "line": "* set register.",
                "type": "DELETE",
                "lineNo": 170
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 171
              },
              {
                "line": "* @param register register",
                "type": "DELETE",
                "lineNo": 172
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 173
              },
              {
                "line": "public void setRegister(final RegisterConfig register) {",
                "type": "DELETE",
                "lineNo": 174
              },
              {
                "line": "this.register = register;",
                "type": "DELETE",
                "lineNo": 175
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 176
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 178
              },
              {
                "line": "* sdk.",
                "type": "DELETE",
                "lineNo": 179
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 180
              },
              {
                "line": "* @return Sdk",
                "type": "DELETE",
                "lineNo": 181
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 182
              },
              {
                "line": "public RegisterConfig getSdk() {",
                "type": "DELETE",
                "lineNo": 183
              },
              {
                "line": "return sdk;",
                "type": "DELETE",
                "lineNo": 184
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 185
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 187
              },
              {
                "line": "* set sdk.",
                "type": "DELETE",
                "lineNo": 188
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 189
              },
              {
                "line": "* @param sdk sdk",
                "type": "DELETE",
                "lineNo": 190
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 191
              },
              {
                "line": "public void setSdk(final RegisterConfig sdk) {",
                "type": "DELETE",
                "lineNo": 192
              },
              {
                "line": "this.sdk = sdk;",
                "type": "DELETE",
                "lineNo": 193
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 194
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 196
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getRegister()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig register"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.setRegister(RegisterConfig)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig register"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig register"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig register"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getSdk()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdk"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.setSdk(RegisterConfig)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdk"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdk"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdk"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "if (StringUtils.hasText(headers)) {",
                "type": "DELETE",
                "lineNo": 1008
              }
            ],
            "targetChanges": [
              {
                "line": "if (StringUtils.isNotEmpty(headers)) {",
                "type": "ADD",
                "lineNo": 968
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "hasText(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.util.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "hasText(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String headers"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String headers"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public static class RegisterConfig {",
                "type": "DELETE",
                "lineNo": 1265
              },
              {
                "line": "private boolean enabled;",
                "type": "DELETE",
                "lineNo": 1267
              },
              {
                "line": "private String registerType;",
                "type": "DELETE",
                "lineNo": 1269
              },
              {
                "line": "private String serverLists;",
                "type": "DELETE",
                "lineNo": 1271
              },
              {
                "line": "private Properties props = new Properties();",
                "type": "DELETE",
                "lineNo": 1273
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 1275
              },
              {
                "line": "* RegisterConfig.",
                "type": "DELETE",
                "lineNo": 1276
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 1277
              },
              {
                "line": "public RegisterConfig() {",
                "type": "DELETE",
                "lineNo": 1278
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 1280
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 1282
              },
              {
                "line": "* registerType.",
                "type": "DELETE",
                "lineNo": 1283
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 1284
              },
              {
                "line": "* @param registerType the register type",
                "type": "DELETE",
                "lineNo": 1285
              },
              {
                "line": "* @param serverLists the server lists",
                "type": "DELETE",
                "lineNo": 1286
              },
              {
                "line": "* @param props the props",
                "type": "DELETE",
                "lineNo": 1287
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 1288
              },
              {
                "line": "public RegisterConfig(final String registerType, final String serverLists, final Properties props) {",
                "type": "DELETE",
                "lineNo": 1289
              },
              {
                "line": "this.registerType = registerType;",
                "type": "DELETE",
                "lineNo": 1290
              },
              {
                "line": "this.serverLists = serverLists;",
                "type": "DELETE",
                "lineNo": 1291
              },
              {
                "line": "this.props = props;",
                "type": "DELETE",
                "lineNo": 1292
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 1293
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 1295
              },
              {
                "line": "* getRegisterType.",
                "type": "DELETE",
                "lineNo": 1296
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 1297
              },
              {
                "line": "* @return String register type",
                "type": "DELETE",
                "lineNo": 1298
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 1299
              },
              {
                "line": "public String getRegisterType() {",
                "type": "DELETE",
                "lineNo": 1300
              },
              {
                "line": "return registerType;",
                "type": "DELETE",
                "lineNo": 1301
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 1302
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 1304
              },
              {
                "line": "* setRegisterType.",
                "type": "DELETE",
                "lineNo": 1305
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 1306
              },
              {
                "line": "* @param registerType registerType",
                "type": "DELETE",
                "lineNo": 1307
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 1308
              },
              {
                "line": "public void setRegisterType(final String registerType) {",
                "type": "DELETE",
                "lineNo": 1309
              },
              {
                "line": "this.registerType = registerType;",
                "type": "DELETE",
                "lineNo": 1310
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 1311
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 1313
              },
              {
                "line": "* getServerLists.",
                "type": "DELETE",
                "lineNo": 1314
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 1315
              },
              {
                "line": "* @return String server lists",
                "type": "DELETE",
                "lineNo": 1316
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 1317
              },
              {
                "line": "public String getServerLists() {",
                "type": "DELETE",
                "lineNo": 1318
              },
              {
                "line": "return serverLists;",
                "type": "DELETE",
                "lineNo": 1319
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 1320
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 1322
              },
              {
                "line": "* setServerLists.",
                "type": "DELETE",
                "lineNo": 1323
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 1324
              },
              {
                "line": "* @param serverLists serverLists",
                "type": "DELETE",
                "lineNo": 1325
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 1326
              },
              {
                "line": "public void setServerLists(final String serverLists) {",
                "type": "DELETE",
                "lineNo": 1327
              },
              {
                "line": "this.serverLists = serverLists;",
                "type": "DELETE",
                "lineNo": 1328
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 1329
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 1331
              },
              {
                "line": "* getProps.",
                "type": "DELETE",
                "lineNo": 1332
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 1333
              },
              {
                "line": "* @return String props",
                "type": "DELETE",
                "lineNo": 1334
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 1335
              },
              {
                "line": "public Properties getProps() {",
                "type": "DELETE",
                "lineNo": 1336
              },
              {
                "line": "return props;",
                "type": "DELETE",
                "lineNo": 1337
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 1338
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 1340
              },
              {
                "line": "* setProps.",
                "type": "DELETE",
                "lineNo": 1341
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 1342
              },
              {
                "line": "* @param props props",
                "type": "DELETE",
                "lineNo": 1343
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 1344
              },
              {
                "line": "public void setProps(final Properties props) {",
                "type": "DELETE",
                "lineNo": 1345
              },
              {
                "line": "this.props = props;",
                "type": "DELETE",
                "lineNo": 1346
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 1347
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 1349
              },
              {
                "line": "* Gets enabled.",
                "type": "DELETE",
                "lineNo": 1350
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 1351
              },
              {
                "line": "* @return the enabled",
                "type": "DELETE",
                "lineNo": 1352
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 1353
              },
              {
                "line": "public boolean getEnabled() {",
                "type": "DELETE",
                "lineNo": 1354
              },
              {
                "line": "return enabled;",
                "type": "DELETE",
                "lineNo": 1355
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 1356
              },
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 1358
              },
              {
                "line": "* Sets enabled.",
                "type": "DELETE",
                "lineNo": 1359
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 1360
              },
              {
                "line": "* @param enabled the enabled",
                "type": "DELETE",
                "lineNo": 1361
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 1362
              },
              {
                "line": "public void setEnabled(final boolean enabled) {",
                "type": "DELETE",
                "lineNo": 1363
              },
              {
                "line": "this.enabled = enabled;",
                "type": "DELETE",
                "lineNo": 1364
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 1365
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 1366
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtField",
                "value": "boolean enabled"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtField",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtField",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.Properties.Properties()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.RegisterConfig(String,String,Properties)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.setRegisterType(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getServerLists()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.setServerLists(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.setProps(Properties)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getEnabled()"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtFieldRead",
                "value": "boolean enabled"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.setEnabled(boolean)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "boolean enabled"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtFieldWrite",
                "value": "boolean enabled"
              },
              {
                "type": "CtVariableRead",
                "value": "boolean enabled"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/main/java/org/apache/shenyu/common/utils/SignUtils.java",
        "aPath": "shenyu-common/src/main/java/org/apache/shenyu/common/utils/SignUtils.java",
        "name": "org.apache.shenyu.common.utils.SignUtils",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return DigestUtils.md5DigestAsHex(sign.getBytes()).toUpperCase();",
                "type": "DELETE",
                "lineNo": 63
              }
            ],
            "targetChanges": [
              {
                "line": "return DigestUtils.md5Hex(sign.getBytes()).toUpperCase();",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "toUpperCase()"
              },
              {
                "type": "CtInvocation",
                "value": "md5DigestAsHex(byte[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.util.DigestUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "md5DigestAsHex(byte[])"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.getBytes()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String sign"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.getBytes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "toUpperCase()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.String.toUpperCase()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.codec.digest.DigestUtils.md5Hex(byte[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.codec.digest.DigestUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.codec.digest.DigestUtils.md5Hex(byte[])"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.getBytes()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String sign"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.getBytes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.toUpperCase()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-common/src/test/java/org/apache/shenyu/common/config/ShenyuConfigTest.java",
        "aPath": "shenyu-common/src/test/java/org/apache/shenyu/common/config/ShenyuConfigTest.java",
        "name": "org.apache.shenyu.common.config.ShenyuConfigTest",
        "hunks": [
          {
            "targetChanges": [],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "ShenyuConfig.RegisterConfig instance = config.getRegister();",
                "type": "DELETE",
                "lineNo": 52
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getRegister()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getRegister()"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "notEmptyElements(cross, switchConfig, exclude, fallback, file, instance,",
                "type": "DELETE",
                "lineNo": 62
              }
            ],
            "targetChanges": [
              {
                "line": "notEmptyElements(cross, switchConfig, exclude, fallback, file,",
                "type": "ADD",
                "lineNo": 62
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfigTest.notEmptyElements(Object[])"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfigTest.notEmptyElements(Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$CrossFilterConfig cross"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$SwitchConfig switchConfig"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$ExcludePath exclude"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$FallbackPath fallback"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$FileConfig file"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig instance"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfigTest.notEmptyElements(Object[])"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfigTest.notEmptyElements(Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$CrossFilterConfig cross"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$SwitchConfig switchConfig"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$ExcludePath exclude"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$FallbackPath fallback"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$FileConfig file"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void testInstanceConfig() {",
                "type": "DELETE",
                "lineNo": 189
              },
              {
                "line": "ShenyuConfig.RegisterConfig instance = config.getRegister();",
                "type": "DELETE",
                "lineNo": 190
              },
              {
                "line": "instance.setEnabled(true);",
                "type": "DELETE",
                "lineNo": 191
              },
              {
                "line": "instance.setServerLists(\"test\");",
                "type": "DELETE",
                "lineNo": 192
              },
              {
                "line": "instance.setRegisterType(\"test\");",
                "type": "DELETE",
                "lineNo": 193
              },
              {
                "line": "instance.setProps(new Properties());",
                "type": "DELETE",
                "lineNo": 194
              },
              {
                "line": "Boolean enabled = instance.getEnabled();",
                "type": "DELETE",
                "lineNo": 196
              },
              {
                "line": "Properties props = instance.getProps();",
                "type": "DELETE",
                "lineNo": 197
              },
              {
                "line": "String registerType = instance.getRegisterType();",
                "type": "DELETE",
                "lineNo": 198
              },
              {
                "line": "String serverLists = instance.getServerLists();",
                "type": "DELETE",
                "lineNo": 199
              },
              {
                "line": "notEmptyElements(props, registerType, serverLists, enabled);",
                "type": "DELETE",
                "lineNo": 201
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 202
              },
              {
                "line": "@Test",
                "type": "DELETE",
                "lineNo": 204
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.config.ShenyuConfigTest.testInstanceConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getRegister()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getRegister()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.setEnabled(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.setEnabled(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.setServerLists(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.setServerLists(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.setRegisterType(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.setRegisterType(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'test'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.setProps(Properties)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.setProps(Properties)"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.Properties.Properties()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Boolean enabled"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getEnabled()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getServerLists()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getServerLists()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfigTest.notEmptyElements(Object[])"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfigTest.notEmptyElements(Object[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String serverLists"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Boolean enabled"
              },
              {
                "type": "CtAnnotation",
                "value": "org.junit.Test"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-common/src/test/java/org/apache/shenyu/common/utils/VersionUtilsTest.java",
        "aPath": "shenyu-common/src/test/java/org/apache/shenyu/common/utils/VersionUtilsTest.java",
        "name": "org.apache.shenyu.common.utils.VersionUtilsTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@Test",
                "type": "DELETE",
                "lineNo": 41
              },
              {
                "line": "public void testFromCodeSource() throws ClassNotFoundException {",
                "type": "DELETE",
                "lineNo": 42
              },
              {
                "line": "String version = VersionUtils.getVersion(Class.forName(\"ch.qos.logback.classic.db.names.SimpleDBNameResolver\"), \"2.0.2\");",
                "type": "DELETE",
                "lineNo": 43
              },
              {
                "line": "assertNotNull(version);",
                "type": "DELETE",
                "lineNo": 44
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 45
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.common.utils.VersionUtilsTest.testFromCodeSource()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.junit.jupiter.api.Test"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.ClassNotFoundException"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String version"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.VersionUtils.getVersion(Class,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.VersionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.VersionUtils.getVersion(Class,String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Class.forName(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Class"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.forName(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ch.qos.logback.classic.db.names.SimpleDBNameResolver'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2.0.2'"
              },
              {
                "type": "CtInvocation",
                "value": "assertNotNull(java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertNotNull(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String version"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-protocol/shenyu-protocol-mqtt/src/main/java/org/apache/shenyu/protocol/mqtt/Subscribe.java",
        "aPath": "shenyu-protocol/shenyu-protocol-mqtt/src/main/java/org/apache/shenyu/protocol/mqtt/Subscribe.java",
        "name": "org.apache.shenyu.protocol.mqtt.Subscribe",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (Strings.isNotEmpty(message)) {",
                "type": "DELETE",
                "lineNo": 74
              }
            ],
            "targetChanges": [
              {
                "line": "if (StringUtils.isNotEmpty(message)) {",
                "type": "ADD",
                "lineNo": 74
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isNotEmpty(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.logging.log4j.util.Strings"
              },
              {
                "type": "CtExecutableReference",
                "value": "isNotEmpty(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String message"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String message"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-client-server/shenyu-register-client-server-zookeeper/src/test/java/org/apache/shenyu/register/client/server/zookeeper/ZookeeperServerRegisterRepositoryTest.java",
        "aPath": "shenyu-register-center/shenyu-register-client-server/shenyu-register-client-server-zookeeper/src/test/java/org/apache/shenyu/register/client/server/zookeeper/ZookeeperServerRegisterRepositoryTest.java",
        "name": "org.apache.shenyu.register.client.server.zookeeper.ZookeeperServerRegisterRepositoryTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (!ObjectUtils.isEmpty(treeCacheListener)) {",
                "type": "DELETE",
                "lineNo": 82
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.nonNull(treeCacheListener)) {",
                "type": "ADD",
                "lineNo": 82
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isEmpty(org.apache.curator.framework.recipes.cache.TreeCacheListener)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.util.ObjectUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEmpty(org.apache.curator.framework.recipes.cache.TreeCacheListener)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.curator.framework.recipes.cache.TreeCacheListener treeCacheListener"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.curator.framework.recipes.cache.TreeCacheListener treeCacheListener"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-common/src/main/java/org/apache/shenyu/register/common/dto/InstanceRegisterDTO.java",
        "aPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-api/src/main/java/org/apache/shenyu/register/instance/api/entity/InstanceEntity.java",
        "name": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class InstanceRegisterDTO {",
                "type": "DELETE",
                "lineNo": 25
              }
            ],
            "targetChanges": [
              {
                "line": "public class InstanceEntity {",
                "type": "ADD",
                "lineNo": 25
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public InstanceRegisterDTO(final String appName, final String host, final Integer port) {",
                "type": "DELETE",
                "lineNo": 40
              }
            ],
            "targetChanges": [
              {
                "line": "public InstanceEntity(final String appName, final String host, final Integer port) {",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.InstanceRegisterDTO(String,String,Integer)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String host"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.InstanceEntity(String,String,Integer)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String appName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String host"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Integer port"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Integer"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public InstanceRegisterDTO() {",
                "type": "DELETE",
                "lineNo": 49
              }
            ],
            "targetChanges": [
              {
                "line": "public InstanceEntity() {",
                "type": "ADD",
                "lineNo": 49
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.InstanceRegisterDTO()"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.InstanceEntity()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private InstanceRegisterDTO(final Builder builder) {",
                "type": "DELETE",
                "lineNo": 52
              }
            ],
            "targetChanges": [
              {
                "line": "private InstanceEntity(final Builder builder) {",
                "type": "ADD",
                "lineNo": 52
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.InstanceRegisterDTO(Builder)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder builder"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.InstanceEntity(Builder)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder builder"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "/**",
                "type": "DELETE",
                "lineNo": 58
              },
              {
                "line": "* Trans form uri register dto.",
                "type": "DELETE",
                "lineNo": 59
              },
              {
                "line": "*",
                "type": "DELETE",
                "lineNo": 60
              },
              {
                "line": "* @param metaDataRegisterDTO the meta data register dto",
                "type": "DELETE",
                "lineNo": 61
              },
              {
                "line": "* @return the uri register dto",
                "type": "DELETE",
                "lineNo": 62
              },
              {
                "line": "*/",
                "type": "DELETE",
                "lineNo": 63
              },
              {
                "line": "public static InstanceRegisterDTO transForm(final MetaDataRegisterDTO metaDataRegisterDTO) {",
                "type": "DELETE",
                "lineNo": 64
              },
              {
                "line": "return InstanceRegisterDTO.builder()",
                "type": "DELETE",
                "lineNo": 65
              },
              {
                "line": ".appName(metaDataRegisterDTO.getAppName())",
                "type": "DELETE",
                "lineNo": 66
              },
              {
                "line": ".host(metaDataRegisterDTO.getHost())",
                "type": "DELETE",
                "lineNo": 67
              },
              {
                "line": ".port(metaDataRegisterDTO.getPort()).build();",
                "type": "DELETE",
                "lineNo": 68
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 69
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.transForm(MetaDataRegisterDTO)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataRegisterDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getAppName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getAppName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getHost()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getHost()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPort()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO metaDataRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.MetaDataRegisterDTO.getPort()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.build()"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "InstanceRegisterDTO that = (InstanceRegisterDTO) o;",
                "type": "DELETE",
                "lineNo": 144
              }
            ],
            "targetChanges": [
              {
                "line": "InstanceEntity that = (InstanceEntity) o;",
                "type": "ADD",
                "lineNo": 132
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO that"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object o"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity that"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object o"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public InstanceRegisterDTO build() {",
                "type": "DELETE",
                "lineNo": 219
              },
              {
                "line": "return new InstanceRegisterDTO(this);",
                "type": "DELETE",
                "lineNo": 220
              }
            ],
            "targetChanges": [
              {
                "line": "public InstanceEntity build() {",
                "type": "ADD",
                "lineNo": 207
              },
              {
                "line": "return new InstanceEntity(this);",
                "type": "ADD",
                "lineNo": 208
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.build()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.InstanceRegisterDTO(Builder)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.build()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.InstanceEntity(Builder)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-common/src/main/java/org/apache/shenyu/register/common/subsriber/WatcherListener.java",
        "aPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-api/src/main/java/org/apache/shenyu/register/instance/api/watcher/WatcherListener.java",
        "name": "org.apache.shenyu.register.common.subsriber.WatcherListener",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* WatcherListener InstanceRegisterDTO.",
                "type": "DELETE",
                "lineNo": 25
              }
            ],
            "targetChanges": [
              {
                "line": "* WatcherListener InstanceEntity.",
                "type": "ADD",
                "lineNo": 25
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* listener InstanceRegisterDTO.",
                "type": "DELETE",
                "lineNo": 31
              }
            ],
            "targetChanges": [
              {
                "line": "* listener InstanceEntity.",
                "type": "ADD",
                "lineNo": 31
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "void listener(List<InstanceRegisterDTO> instanceRegisterDTOs);",
                "type": "DELETE",
                "lineNo": 35
              }
            ],
            "targetChanges": [
              {
                "line": "void listener(List<InstanceEntity> instanceRegisterDTOs);",
                "type": "ADD",
                "lineNo": 35
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.common.subsriber.WatcherListener.listener(List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List instanceRegisterDTOs"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.api.watcher.WatcherListener.listener(List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List instanceRegisterDTOs"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-api/src/main/java/org/apache/shenyu/register/instance/api/ShenyuInstanceRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-api/src/main/java/org/apache/shenyu/register/instance/api/ShenyuInstanceRegisterRepository.java",
        "name": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "void persistInstance(InstanceRegisterDTO instance);",
                "type": "DELETE",
                "lineNo": 47
              }
            ],
            "targetChanges": [
              {
                "line": "void persistInstance(InstanceEntity instance);",
                "type": "ADD",
                "lineNo": 47
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.persistInstance(InstanceRegisterDTO)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.persistInstance(InstanceEntity)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "default List<InstanceRegisterDTO> selectInstancesAndWatcher(final String selectKey, final WatcherListener watcherListener) {",
                "type": "DELETE",
                "lineNo": 56
              }
            ],
            "targetChanges": [
              {
                "line": "default List<InstanceEntity> selectInstancesAndWatcher(final String selectKey, final WatcherListener watcherListener) {",
                "type": "ADD",
                "lineNo": 56
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.subsriber.WatcherListener watcherListener"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.subsriber.WatcherListener"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.watcher.WatcherListener watcherListener"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.watcher.WatcherListener"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "default List<InstanceRegisterDTO> getInstanceRegisterList() {",
                "type": "DELETE",
                "lineNo": 65
              }
            ],
            "targetChanges": [
              {
                "line": "default List<InstanceEntity> getInstanceRegisterList() {",
                "type": "ADD",
                "lineNo": 65
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.getInstanceRegisterList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.getInstanceRegisterList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-consul/src/main/java/org/apache/shenyu/register/instance/consul/ConsulInstanceRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-consul/src/main/java/org/apache/shenyu/register/instance/consul/ConsulInstanceRegisterRepository.java",
        "name": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public void persistInstance(final InstanceRegisterDTO instance) {",
                "type": "DELETE",
                "lineNo": 109
              }
            ],
            "targetChanges": [
              {
                "line": "public void persistInstance(final InstanceEntity instance) {",
                "type": "ADD",
                "lineNo": 109
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.persistInstance(InstanceRegisterDTO)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.persistInstance(InstanceEntity)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (StringUtils.hasText(tags)) {",
                "type": "DELETE",
                "lineNo": 117
              }
            ],
            "targetChanges": [
              {
                "line": "if (StringUtils.isNotEmpty(tags)) {",
                "type": "ADD",
                "lineNo": 117
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "hasText(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.util.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "hasText(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String tags"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String tags"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (StringUtils.hasText(checkTtl)) {",
                "type": "DELETE",
                "lineNo": 122
              },
              {
                "line": "this.ttlScheduler.add(newService.getId());",
                "type": "DELETE",
                "lineNo": 123
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 124
              }
            ],
            "targetChanges": [
              {
                "line": "this.ttlScheduler.add(newService.getId());",
                "type": "ADD",
                "lineNo": 122
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "hasText(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.util.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "hasText(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String checkTtl"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.consul.TtlScheduler.add(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.instance.consul.TtlScheduler ttlScheduler"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.consul.TtlScheduler.add(String)"
              },
              {
                "type": "CtInvocation",
                "value": "getId()"
              },
              {
                "type": "CtFieldRead",
                "value": "com.ecwid.consul.v1.agent.model.NewService newService"
              },
              {
                "type": "CtExecutableReference",
                "value": "getId()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.consul.TtlScheduler.add(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.instance.consul.TtlScheduler ttlScheduler"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.consul.TtlScheduler.add(String)"
              },
              {
                "type": "CtInvocation",
                "value": "getId()"
              },
              {
                "type": "CtFieldRead",
                "value": "com.ecwid.consul.v1.agent.model.NewService newService"
              },
              {
                "type": "CtExecutableReference",
                "value": "getId()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (StringUtils.hasText(checkTtl)) {",
                "type": "DELETE",
                "lineNo": 130
              },
              {
                "line": "check.setTtl(checkTtl + \"s\");",
                "type": "DELETE",
                "lineNo": 131
              },
              {
                "line": "return check;",
                "type": "DELETE",
                "lineNo": 132
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 133
              }
            ],
            "targetChanges": [
              {
                "line": "check.setTtl(checkTtl + \"s\");",
                "type": "ADD",
                "lineNo": 128
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "hasText(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.util.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "hasText(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String checkTtl"
              },
              {
                "type": "CtInvocation",
                "value": "setTtl(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.ecwid.consul.v1.agent.model.NewService$Check check"
              },
              {
                "type": "CtExecutableReference",
                "value": "setTtl(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String checkTtl"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 's'"
              },
              {
                "type": "CtVariableRead",
                "value": "com.ecwid.consul.v1.agent.model.NewService$Check check"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "setTtl(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.ecwid.consul.v1.agent.model.NewService$Check check"
              },
              {
                "type": "CtExecutableReference",
                "value": "setTtl(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String checkTtl"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 's'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private String buildInstanceNodeName(final InstanceRegisterDTO instance) {",
                "type": "DELETE",
                "lineNo": 149
              }
            ],
            "targetChanges": [
              {
                "line": "private String buildInstanceNodeName(final InstanceEntity instance) {",
                "type": "ADD",
                "lineNo": 144
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.buildInstanceNodeName(InstanceRegisterDTO)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.buildInstanceNodeName(InstanceEntity)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public List<InstanceRegisterDTO> selectInstancesAndWatcher(final String selectKey, final WatcherListener watcherListener) {",
                "type": "DELETE",
                "lineNo": 156
              }
            ],
            "targetChanges": [
              {
                "line": "public List<InstanceEntity> selectInstancesAndWatcher(final String selectKey, final WatcherListener watcherListener) {",
                "type": "ADD",
                "lineNo": 151
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.subsriber.WatcherListener watcherListener"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.subsriber.WatcherListener"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.watcher.WatcherListener watcherListener"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.watcher.WatcherListener"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "final List<InstanceRegisterDTO> healthServices = this.getHealthServices(selectKey, waitTime);",
                "type": "DELETE",
                "lineNo": 192
              }
            ],
            "targetChanges": [
              {
                "line": "final List<InstanceEntity> healthServices = this.getHealthServices(selectKey, waitTime);",
                "type": "ADD",
                "lineNo": 187
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List healthServices"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.getHealthServices(String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.getHealthServices(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String waitTime"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List healthServices"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.getHealthServices(String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.getHealthServices(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String waitTime"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public List<InstanceRegisterDTO> getHealthServices(final String selectKey, final String waitTime) {",
                "type": "DELETE",
                "lineNo": 205
              }
            ],
            "targetChanges": [
              {
                "line": "public List<InstanceEntity> getHealthServices(final String selectKey, final String waitTime) {",
                "type": "ADD",
                "lineNo": 200
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.getHealthServices(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String waitTime"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.getHealthServices(String,String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String waitTime"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return healthServices.getValue().stream().map(healthService -> InstanceRegisterDTO.builder()",
                "type": "DELETE",
                "lineNo": 217
              }
            ],
            "targetChanges": [
              {
                "line": "return healthServices.getValue().stream().map(healthService -> InstanceEntity.builder()",
                "type": "ADD",
                "lineNo": 212
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "collect(java.util.stream.Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtInvocation",
                "value": "getValue()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.ecwid.consul.v1.Response healthServices"
              },
              {
                "type": "CtExecutableReference",
                "value": "getValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> healthService"
              },
              {
                "type": "CtInvocation",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "port()"
              },
              {
                "type": "CtInvocation",
                "value": "host()"
              },
              {
                "type": "CtInvocation",
                "value": "appName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "collect(java.util.stream.Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "stream()"
              },
              {
                "type": "CtInvocation",
                "value": "getValue()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.ecwid.consul.v1.Response healthServices"
              },
              {
                "type": "CtExecutableReference",
                "value": "getValue()"
              },
              {
                "type": "CtExecutableReference",
                "value": "stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> healthService"
              },
              {
                "type": "CtInvocation",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "port()"
              },
              {
                "type": "CtInvocation",
                "value": "host()"
              },
              {
                "type": "CtInvocation",
                "value": "appName()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-consul/src/main/java/org/apache/shenyu/register/instance/consul/TtlScheduler.java",
        "aPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-consul/src/main/java/org/apache/shenyu/register/instance/consul/TtlScheduler.java",
        "name": "org.apache.shenyu.register.instance.consul.TtlScheduler",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private final TaskScheduler scheduler = new ConcurrentTaskScheduler(",
                "type": "DELETE",
                "lineNo": 41
              },
              {
                "line": "Executors.newSingleThreadScheduledExecutor());",
                "type": "DELETE",
                "lineNo": 42
              }
            ],
            "targetChanges": [
              {
                "line": "private final ScheduledExecutorService scheduler = Executors.newSingleThreadScheduledExecutor();",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "org.springframework.scheduling.TaskScheduler scheduler"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.scheduling.TaskScheduler"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.springframework.scheduling.concurrent.ConcurrentTaskScheduler(java.util.concurrent.ScheduledExecutorService)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.scheduling.concurrent.ConcurrentTaskScheduler"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.Executors.newSingleThreadScheduledExecutor()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.concurrent.Executors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.Executors.newSingleThreadScheduledExecutor()"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.util.concurrent.ScheduledExecutorService scheduler"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.ScheduledExecutorService"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.Executors.newSingleThreadScheduledExecutor()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.concurrent.Executors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.Executors.newSingleThreadScheduledExecutor()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "new ConsulHeartbeatTask(instanceId), Duration.ofSeconds(ttl - 1));",
                "type": "DELETE",
                "lineNo": 59
              }
            ],
            "targetChanges": [
              {
                "line": "new ConsulHeartbeatTask(instanceId), ttl, ttl, TimeUnit.SECONDS);",
                "type": "ADD",
                "lineNo": 57
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.instance.consul.TtlScheduler$ConsulHeartbeatTask.ConsulHeartbeatTask(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.consul.TtlScheduler$ConsulHeartbeatTask"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String instanceId"
              },
              {
                "type": "CtInvocation",
                "value": "java.time.Duration.ofSeconds(long)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.time.Duration"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.time.Duration.ofSeconds(long)"
              },
              {
                "type": "CtFieldRead",
                "value": "int ttl"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.instance.consul.TtlScheduler$ConsulHeartbeatTask.ConsulHeartbeatTask(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.consul.TtlScheduler$ConsulHeartbeatTask"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String instanceId"
              },
              {
                "type": "CtFieldRead",
                "value": "int ttl"
              },
              {
                "type": "CtFieldRead",
                "value": "int ttl"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.TimeUnit SECONDS"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.concurrent.TimeUnit"
              },
              {
                "type": "CtFieldReference",
                "value": "java.util.concurrent.TimeUnit SECONDS"
              }
            ]
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-consul/src/test/java/org/apache/shenyu/register/instance/consul/ConsulInstanceRegisterRepositoryTest.java",
        "aPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-consul/src/test/java/org/apache/shenyu/register/instance/consul/ConsulInstanceRegisterRepositoryTest.java",
        "name": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepositoryTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "Field ttl = clazz.getDeclaredField(\"ttlScheduler\");",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "ttl.setAccessible(true);",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "ttl.set(repository, mock(TtlScheduler.class));",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.reflect.Field ttl"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.Field"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Class.getDeclaredField(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Class clazz"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.getDeclaredField(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ttlScheduler'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Field.setAccessible(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Field ttl"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Field.setAccessible(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Field.set(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Field ttl"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Field.set(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository repository"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "InstanceRegisterDTO data = InstanceRegisterDTO.builder()",
                "type": "DELETE",
                "lineNo": 87
              }
            ],
            "targetChanges": [
              {
                "line": "InstanceEntity data = InstanceEntity.builder()",
                "type": "ADD",
                "lineNo": 90
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertTrue(consulBroker.containsKey(data.getAppName()));",
                "type": "DELETE",
                "lineNo": 94
              }
            ],
            "targetChanges": [
              {
                "line": "//assertTrue(consulBroker.containsKey(data.getAppName()));",
                "type": "ADD",
                "lineNo": 97
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertTrue(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertTrue(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "containsKey(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map consulBroker"
              },
              {
                "type": "CtExecutableReference",
                "value": "containsKey(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.getAppName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO data"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.getAppName()"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "InstanceRegisterDTO data = InstanceRegisterDTO.builder()",
                "type": "DELETE",
                "lineNo": 100
              }
            ],
            "targetChanges": [
              {
                "line": "InstanceEntity data = InstanceEntity.builder()",
                "type": "ADD",
                "lineNo": 102
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ShenyuConfig.RegisterConfig instanceConfig = new ShenyuConfig.RegisterConfig();",
                "type": "DELETE",
                "lineNo": 109
              }
            ],
            "targetChanges": [
              {
                "line": "RegisterConfig instanceConfig = new RegisterConfig();",
                "type": "ADD",
                "lineNo": 111
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig instanceConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig instanceConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "repository.selectInstancesAndWatcher(RegisterPathConstants.buildInstanceParentPath(), mock(WatcherListener.class));",
                "type": "DELETE",
                "lineNo": 115
              }
            ],
            "targetChanges": [
              {
                "line": "repository.selectInstancesAndWatcher(InstancePathConstants.buildInstanceParentPath(), mock(WatcherListener.class));",
                "type": "ADD",
                "lineNo": 117
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository repository"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository repository"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.consul.ConsulInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-core/src/main/java/org/apache/shenyu/register/instance/core/ShenyuInstanceRegisterRepositoryFactory.java",
        "aPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-core/src/main/java/org/apache/shenyu/register/instance/core/ShenyuInstanceRegisterRepositoryFactory.java",
        "name": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "* New and init instance shenyu instance register repository.",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "* @param config the config",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "* @return the shenyu instance register repository",
                "type": "ADD",
                "lineNo": 53
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 54
              },
              {
                "line": "public static ShenyuInstanceRegisterRepository newAndInitInstance(final RegisterConfig config) {",
                "type": "ADD",
                "lineNo": 55
              },
              {
                "line": "String registerType = config.getRegisterType();",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "if (!REPOSITORY_MAP.containsKey(registerType)) {",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "ShenyuInstanceRegisterRepository result = ExtensionLoader.getExtensionLoader(ShenyuInstanceRegisterRepository.class).getJoin(registerType);",
                "type": "ADD",
                "lineNo": 58
              },
              {
                "line": "result.init(config);",
                "type": "ADD",
                "lineNo": 59
              },
              {
                "line": "REPOSITORY_MAP.put(registerType, result);",
                "type": "ADD",
                "lineNo": 60
              },
              {
                "line": "return result;",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "return REPOSITORY_MAP.get(registerType);",
                "type": "ADD",
                "lineNo": 63
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 64
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory.newAndInitInstance(RegisterConfig)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.containsKey(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map REPOSITORY_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.containsKey(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository result"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.spi.ExtensionLoader.getJoin(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.spi.ExtensionLoader.getExtensionLoader(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.spi.ExtensionLoader"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.spi.ExtensionLoader.getExtensionLoader(Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.spi.ExtensionLoader.getJoin(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.init(RegisterConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository result"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.init(RegisterConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.put(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map REPOSITORY_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.put(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository result"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository result"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map REPOSITORY_MAP"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String registerType"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-etcd/src/main/java/org/apache/shenyu/register/instance/etcd/EtcdInstanceRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-etcd/src/main/java/org/apache/shenyu/register/instance/etcd/EtcdInstanceRegisterRepository.java",
        "name": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public void persistInstance(final InstanceRegisterDTO instance) {",
                "type": "DELETE",
                "lineNo": 59
              }
            ],
            "targetChanges": [
              {
                "line": "public void persistInstance(final InstanceEntity instance) {",
                "type": "ADD",
                "lineNo": 59
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepository.persistInstance(InstanceRegisterDTO)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepository.persistInstance(InstanceEntity)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "String instancePath = RegisterPathConstants.buildInstanceParentPath(instance.getAppName());",
                "type": "DELETE",
                "lineNo": 61
              },
              {
                "line": "String realNode = RegisterPathConstants.buildRealNode(instancePath, instanceNodeName);",
                "type": "DELETE",
                "lineNo": 62
              }
            ],
            "targetChanges": [
              {
                "line": "String instancePath = InstancePathConstants.buildInstanceParentPath();",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "String realNode = InstancePathConstants.buildRealNode(instancePath, instanceNodeName);",
                "type": "ADD",
                "lineNo": 62
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String instancePath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildInstanceParentPath(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildInstanceParentPath(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.getAppName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.getAppName()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String realNode"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildRealNode(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildRealNode(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String instancePath"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String instanceNodeName"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String instancePath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String realNode"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildRealNode(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildRealNode(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String instancePath"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String instanceNodeName"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public List<InstanceRegisterDTO> selectInstancesAndWatcher(final String watchKey, final WatcherListener watcherListener) {",
                "type": "DELETE",
                "lineNo": 69
              },
              {
                "line": "final Function<Map<String, String>, List<InstanceRegisterDTO>> getInstanceRegisterFun = childrenList ->",
                "type": "DELETE",
                "lineNo": 70
              },
              {
                "line": "childrenList.values().stream().map(x -> GsonUtils.getInstance().fromJson(x, InstanceRegisterDTO.class)).collect(Collectors.toList());",
                "type": "DELETE",
                "lineNo": 71
              }
            ],
            "targetChanges": [
              {
                "line": "public List<InstanceEntity> selectInstancesAndWatcher(final String watchKey, final WatcherListener watcherListener) {",
                "type": "ADD",
                "lineNo": 69
              },
              {
                "line": "final Function<Map<String, String>, List<InstanceEntity>> getInstanceRegisterFun = childrenList ->",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "childrenList.values().stream().map(x -> GsonUtils.getInstance().fromJson(x, InstanceEntity.class)).collect(Collectors.toList());",
                "type": "ADD",
                "lineNo": 71
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String watchKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.subsriber.WatcherListener watcherListener"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.subsriber.WatcherListener"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.function.Function getInstanceRegisterFun"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Function"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Map childrenList"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.values()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map childrenList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.values()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String x"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String x"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Function"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String watchKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.watcher.WatcherListener watcherListener"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.watcher.WatcherListener"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.function.Function getInstanceRegisterFun"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Function"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Map childrenList"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.values()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Map childrenList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.values()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String x"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String x"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Function"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "private String buildInstanceNodeName(final InstanceRegisterDTO instance) {",
                "type": "DELETE",
                "lineNo": 96
              }
            ],
            "targetChanges": [
              {
                "line": "private String buildInstanceNodeName(final InstanceEntity instance) {",
                "type": "ADD",
                "lineNo": 94
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepository.buildInstanceNodeName(InstanceRegisterDTO)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepository.buildInstanceNodeName(InstanceEntity)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-etcd/src/test/java/org/apache/shenyu/register/instance/etcd/EtcdInstanceRegisterRepositoryTest.java",
        "aPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-etcd/src/test/java/org/apache/shenyu/register/instance/etcd/EtcdInstanceRegisterRepositoryTest.java",
        "name": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepositoryTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "* The type Etcd instance register repository test.",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 53
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 60
              },
              {
                "line": "* Sets up.",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "* @throws NoSuchFieldException the no such field exception",
                "type": "ADD",
                "lineNo": 63
              },
              {
                "line": "* @throws IllegalAccessException the illegal access exception",
                "type": "ADD",
                "lineNo": 64
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 65
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "* Test persist instance.",
                "type": "ADD",
                "lineNo": 97
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 98
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "InstanceRegisterDTO data = InstanceRegisterDTO.builder()",
                "type": "DELETE",
                "lineNo": 89
              }
            ],
            "targetChanges": [
              {
                "line": "InstanceEntity data = InstanceEntity.builder()",
                "type": "ADD",
                "lineNo": 101
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "final String realNode = \"/shenyu/register/shenyu-test/shenyu-host:9195\";",
                "type": "DELETE",
                "lineNo": 95
              }
            ],
            "targetChanges": [
              {
                "line": "final String realNode = \"/shenyu/register/instance/shenyu-host:9195\";",
                "type": "ADD",
                "lineNo": 107
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String realNode"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/shenyu/register/shenyu-test/shenyu-host:9195'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String realNode"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/shenyu/register/instance/shenyu-host:9195'"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 114
              },
              {
                "line": "* Init test.",
                "type": "ADD",
                "lineNo": 115
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 116
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "final ShenyuConfig.RegisterConfig config = new ShenyuConfig.RegisterConfig();",
                "type": "DELETE",
                "lineNo": 117
              }
            ],
            "targetChanges": [
              {
                "line": "RegisterConfig config = new RegisterConfig();",
                "type": "ADD",
                "lineNo": 132
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 140
              },
              {
                "line": "* Test select instances and watcher.",
                "type": "ADD",
                "lineNo": 141
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 142
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "InstanceRegisterDTO data = InstanceRegisterDTO.builder()",
                "type": "DELETE",
                "lineNo": 128
              }
            ],
            "targetChanges": [
              {
                "line": "InstanceEntity data = InstanceEntity.builder()",
                "type": "ADD",
                "lineNo": 145
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "ShenyuConfig.RegisterConfig config = new ShenyuConfig.RegisterConfig();",
                "type": "DELETE",
                "lineNo": 143
              }
            ],
            "targetChanges": [
              {
                "line": "RegisterConfig config = new RegisterConfig();",
                "type": "ADD",
                "lineNo": 154
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              }
            ]
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "repository.selectInstancesAndWatcher(RegisterPathConstants.buildInstanceParentPath(), mock(WatcherListener.class));",
                "type": "DELETE",
                "lineNo": 149
              }
            ],
            "targetChanges": [
              {
                "line": "repository.selectInstancesAndWatcher(InstancePathConstants.buildInstanceParentPath(), mock(WatcherListener.class));",
                "type": "ADD",
                "lineNo": 157
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepository repository"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepository repository"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.etcd.EtcdInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-nacos/src/main/java/org/apache/shenyu/register/instance/nacos/NacosInstanceRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-nacos/src/main/java/org/apache/shenyu/register/instance/nacos/NacosInstanceRegisterRepository.java",
        "name": "org.apache.shenyu.register.instance.nacos.NacosInstanceRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public void persistInstance(final InstanceRegisterDTO instance) {",
                "type": "DELETE",
                "lineNo": 75
              }
            ],
            "targetChanges": [
              {
                "line": "public void persistInstance(final InstanceEntity instance) {",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.nacos.NacosInstanceRegisterRepository.persistInstance(InstanceRegisterDTO)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.nacos.NacosInstanceRegisterRepository.persistInstance(InstanceEntity)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public List<InstanceRegisterDTO> selectInstancesAndWatcher(final String selectKey, final WatcherListener watcherListener) {",
                "type": "DELETE",
                "lineNo": 92
              }
            ],
            "targetChanges": [
              {
                "line": "public List<InstanceEntity> selectInstancesAndWatcher(final String selectKey, final WatcherListener watcherListener) {",
                "type": "ADD",
                "lineNo": 90
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.nacos.NacosInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.subsriber.WatcherListener watcherListener"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.subsriber.WatcherListener"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.nacos.NacosInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.watcher.WatcherListener watcherListener"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.watcher.WatcherListener"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "namingService.subscribe(selectKey, event -> {",
                "type": "DELETE",
                "lineNo": 94
              },
              {
                "line": "watcherListener.listener(getInstanceRegisterDTOS(selectKey));",
                "type": "DELETE",
                "lineNo": 95
              },
              {
                "line": "});",
                "type": "DELETE",
                "lineNo": 96
              }
            ],
            "targetChanges": [
              {
                "line": "namingService.subscribe(selectKey, event -> watcherListener.listener(getInstanceRegisterDTOS(selectKey)));",
                "type": "ADD",
                "lineNo": 92
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "subscribe(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtExecutableReference",
                "value": "subscribe(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> event"
              },
              {
                "type": "CtInvocation",
                "value": "listener()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.subsriber.WatcherListener watcherListener"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.common.subsriber.WatcherListener watcherListener"
              },
              {
                "type": "CtExecutableReference",
                "value": "listener()"
              },
              {
                "type": "CtInvocation",
                "value": "getInstanceRegisterDTOS()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getInstanceRegisterDTOS()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtParameterReference",
                "value": "java.lang.String selectKey"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "subscribe(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "com.alibaba.nacos.api.naming.NamingService namingService"
              },
              {
                "type": "CtExecutableReference",
                "value": "subscribe(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> event"
              },
              {
                "type": "CtInvocation",
                "value": "listener()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.watcher.WatcherListener watcherListener"
              },
              {
                "type": "CtParameterReference",
                "value": "org.apache.shenyu.register.instance.api.watcher.WatcherListener watcherListener"
              },
              {
                "type": "CtExecutableReference",
                "value": "listener()"
              },
              {
                "type": "CtInvocation",
                "value": "getInstanceRegisterDTOS()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getInstanceRegisterDTOS()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtParameterReference",
                "value": "java.lang.String selectKey"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private String buildInstanceNodeName(final InstanceRegisterDTO instance) {",
                "type": "DELETE",
                "lineNo": 104
              }
            ],
            "targetChanges": [
              {
                "line": "private String buildInstanceNodeName(final InstanceEntity instance) {",
                "type": "ADD",
                "lineNo": 100
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.nacos.NacosInstanceRegisterRepository.buildInstanceNodeName(InstanceRegisterDTO)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.nacos.NacosInstanceRegisterRepository.buildInstanceNodeName(InstanceEntity)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private List<InstanceRegisterDTO> getInstanceRegisterDTOS(final String selectKey) {",
                "type": "DELETE",
                "lineNo": 110
              },
              {
                "line": "List<InstanceRegisterDTO> result = new ArrayList<>();",
                "type": "DELETE",
                "lineNo": 111
              }
            ],
            "targetChanges": [
              {
                "line": "private List<InstanceEntity> getInstanceRegisterDTOS(final String selectKey) {",
                "type": "ADD",
                "lineNo": 106
              },
              {
                "line": "List<InstanceEntity> result = new ArrayList<>();",
                "type": "ADD",
                "lineNo": 107
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.nacos.NacosInstanceRegisterRepository.getInstanceRegisterDTOS(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.nacos.NacosInstanceRegisterRepository.getInstanceRegisterDTOS(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List result"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "instances.forEach(instance -> {",
                "type": "DELETE",
                "lineNo": 114
              },
              {
                "line": "result.add(convertFromInstance(instance));",
                "type": "DELETE",
                "lineNo": 115
              },
              {
                "line": "});",
                "type": "DELETE",
                "lineNo": 116
              }
            ],
            "targetChanges": [
              {
                "line": "instances.forEach(instance -> result.add(convertFromInstance(instance)));",
                "type": "ADD",
                "lineNo": 110
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "forEach()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List instances"
              },
              {
                "type": "CtExecutableReference",
                "value": "forEach()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> instance"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List result"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.util.List result"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtInvocation",
                "value": "convertFromInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "convertFromInstance()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> instance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> instance"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "forEach()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List instances"
              },
              {
                "type": "CtExecutableReference",
                "value": "forEach()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> instance"
              },
              {
                "type": "CtInvocation",
                "value": "add()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List result"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "java.util.List result"
              },
              {
                "type": "CtExecutableReference",
                "value": "add()"
              },
              {
                "type": "CtInvocation",
                "value": "convertFromInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "convertFromInstance()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> instance"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> instance"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private InstanceRegisterDTO convertFromInstance(final Instance instance) {",
                "type": "DELETE",
                "lineNo": 123
              },
              {
                "line": "InstanceRegisterDTO instanceRegisterDTO = new InstanceRegisterDTO();",
                "type": "DELETE",
                "lineNo": 124
              },
              {
                "line": "instanceRegisterDTO.setPort(instance.getPort());",
                "type": "DELETE",
                "lineNo": 125
              },
              {
                "line": "instanceRegisterDTO.setHost(instance.getInstanceId());",
                "type": "DELETE",
                "lineNo": 126
              },
              {
                "line": "instanceRegisterDTO.setAppName(instance.getServiceName());",
                "type": "DELETE",
                "lineNo": 127
              },
              {
                "line": "return instanceRegisterDTO;",
                "type": "DELETE",
                "lineNo": 128
              }
            ],
            "targetChanges": [
              {
                "line": "private InstanceEntity convertFromInstance(final Instance instance) {",
                "type": "ADD",
                "lineNo": 117
              },
              {
                "line": "InstanceEntity instanceEntity = new InstanceEntity();",
                "type": "ADD",
                "lineNo": 118
              },
              {
                "line": "instanceEntity.setPort(instance.getPort());",
                "type": "ADD",
                "lineNo": 119
              },
              {
                "line": "instanceEntity.setHost(instance.getInstanceId());",
                "type": "ADD",
                "lineNo": 120
              },
              {
                "line": "instanceEntity.setAppName(instance.getServiceName());",
                "type": "ADD",
                "lineNo": 121
              },
              {
                "line": "return instanceEntity;",
                "type": "ADD",
                "lineNo": 122
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.nacos.NacosInstanceRegisterRepository.convertFromInstance(Instance)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance instance"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instanceRegisterDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.InstanceRegisterDTO()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.setPort(Integer)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instanceRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.setPort(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "getPort()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPort()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.setHost(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instanceRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.setHost(String)"
              },
              {
                "type": "CtInvocation",
                "value": "getInstanceId()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getInstanceId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.setAppName(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instanceRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.setAppName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "getServiceName()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getServiceName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.nacos.NacosInstanceRegisterRepository.convertFromInstance(Instance)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtParameter",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance instance"
              },
              {
                "type": "CtTypeReference",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instanceEntity"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.InstanceEntity()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.setPort(Integer)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instanceEntity"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.setPort(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "getPort()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPort()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.setHost(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instanceEntity"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.setHost(String)"
              },
              {
                "type": "CtInvocation",
                "value": "getInstanceId()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getInstanceId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.setAppName(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instanceEntity"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.setAppName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "getServiceName()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.nacos.api.naming.pojo.Instance instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "getServiceName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instanceEntity"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-nacos/src/test/java/org/apache/shenyu/register/instance/nacos/NacosInstanceRegisterRepositoryTest.java",
        "aPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-nacos/src/test/java/org/apache/shenyu/register/instance/nacos/NacosInstanceRegisterRepositoryTest.java",
        "name": "org.apache.shenyu.register.instance.nacos.NacosInstanceRegisterRepositoryTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "InstanceRegisterDTO data = InstanceRegisterDTO.builder()",
                "type": "DELETE",
                "lineNo": 81
              }
            ],
            "targetChanges": [
              {
                "line": "InstanceEntity data = InstanceEntity.builder()",
                "type": "ADD",
                "lineNo": 81
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-zookeeper/src/main/java/org/apache/shenyu/register/instance/zookeeper/ZookeeperInstanceRegisterRepository.java",
        "aPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-zookeeper/src/main/java/org/apache/shenyu/register/instance/zookeeper/ZookeeperInstanceRegisterRepository.java",
        "name": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public void persistInstance(final InstanceRegisterDTO instance) {",
                "type": "DELETE",
                "lineNo": 95
              }
            ],
            "targetChanges": [
              {
                "line": "public void persistInstance(final InstanceEntity instance) {",
                "type": "ADD",
                "lineNo": 95
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.persistInstance(InstanceRegisterDTO)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.persistInstance(InstanceEntity)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "String instancePath = RegisterPathConstants.buildInstanceParentPath(instance.getAppName());",
                "type": "DELETE",
                "lineNo": 97
              }
            ],
            "targetChanges": [
              {
                "line": "String instancePath = InstancePathConstants.buildInstanceParentPath();",
                "type": "ADD",
                "lineNo": 97
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String instancePath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildInstanceParentPath(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildInstanceParentPath(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.getAppName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instance"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.getAppName()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String instancePath"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildInstanceParentPath()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "String realNode = RegisterPathConstants.buildRealNode(instancePath, uriNodeName);",
                "type": "DELETE",
                "lineNo": 101
              }
            ],
            "targetChanges": [
              {
                "line": "String realNode = InstancePathConstants.buildRealNode(instancePath, uriNodeName);",
                "type": "ADD",
                "lineNo": 101
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String realNode"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildRealNode(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildRealNode(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String instancePath"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String uriNodeName"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String realNode"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildRealNode(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildRealNode(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String instancePath"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String uriNodeName"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public List<InstanceRegisterDTO> selectInstancesAndWatcher(final String selectKey, final WatcherListener watcherListener) {",
                "type": "DELETE",
                "lineNo": 108
              },
              {
                "line": "final Function<List<String>, List<InstanceRegisterDTO>> getInstanceRegisterFun = childrenList -> childrenList.stream().map(childPath -> {",
                "type": "DELETE",
                "lineNo": 109
              },
              {
                "line": "String instanceRegisterJsonStr = client.get(RegisterPathConstants.buildRealNode(selectKey, childPath));",
                "type": "DELETE",
                "lineNo": 110
              },
              {
                "line": "return GsonUtils.getInstance().fromJson(instanceRegisterJsonStr, InstanceRegisterDTO.class);",
                "type": "DELETE",
                "lineNo": 111
              }
            ],
            "targetChanges": [
              {
                "line": "public List<InstanceEntity> selectInstancesAndWatcher(final String selectKey, final WatcherListener watcherListener) {",
                "type": "ADD",
                "lineNo": 108
              },
              {
                "line": "final Function<List<String>, List<InstanceEntity>> getInstanceRegisterFun = childrenList -> childrenList.stream().map(childPath -> {",
                "type": "ADD",
                "lineNo": 109
              },
              {
                "line": "String instanceRegisterJsonStr = client.get(InstancePathConstants.buildRealNode(selectKey, childPath));",
                "type": "ADD",
                "lineNo": 110
              },
              {
                "line": "return GsonUtils.getInstance().fromJson(instanceRegisterJsonStr, InstanceEntity.class);",
                "type": "ADD",
                "lineNo": 111
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.subsriber.WatcherListener watcherListener"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.subsriber.WatcherListener"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.function.Function getInstanceRegisterFun"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Function"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List childrenList"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List childrenList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String childPath"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String instanceRegisterJsonStr"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperClient.get(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperClient client"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperClient.get(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildRealNode(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildRealNode(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String childPath"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String instanceRegisterJsonStr"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.watcher.WatcherListener watcherListener"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.watcher.WatcherListener"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.function.Function getInstanceRegisterFun"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.function.Function"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List childrenList"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List childrenList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String childPath"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String instanceRegisterJsonStr"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperClient.get(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperClient client"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperClient.get(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildRealNode(String,String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildRealNode(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String selectKey"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String childPath"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String instanceRegisterJsonStr"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void process(final WatchedEvent event) throws Exception {",
                "type": "DELETE",
                "lineNo": 116
              }
            ],
            "targetChanges": [
              {
                "line": "public void process(final WatchedEvent event) {",
                "type": "ADD",
                "lineNo": 116
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository$1.process(WatchedEvent)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.zookeeper.WatchedEvent event"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.zookeeper.WatchedEvent"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Exception"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository$1.process(WatchedEvent)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.zookeeper.WatchedEvent event"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.zookeeper.WatchedEvent"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private String buildInstanceNodeName(final InstanceRegisterDTO instance) {",
                "type": "DELETE",
                "lineNo": 135
              }
            ],
            "targetChanges": [
              {
                "line": "private String buildInstanceNodeName(final InstanceEntity instance) {",
                "type": "ADD",
                "lineNo": 135
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.buildInstanceNodeName(InstanceRegisterDTO)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.buildInstanceNodeName(InstanceEntity)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instance"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-zookeeper/src/test/java/org/apache/shenyu/register/instance/zookeeper/ZookeeperInstanceRegisterRepositoryTest.java",
        "aPath": "shenyu-register-center/shenyu-register-instance/shenyu-register-instance-zookeeper/src/test/java/org/apache/shenyu/register/instance/zookeeper/ZookeeperInstanceRegisterRepositoryTest.java",
        "name": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepositoryTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class ZookeeperInstanceRegisterRepositoryTest {",
                "type": "DELETE",
                "lineNo": 46
              }
            ],
            "targetChanges": [
              {
                "line": "public final class ZookeeperInstanceRegisterRepositoryTest {",
                "type": "ADD",
                "lineNo": 46
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepositoryTest"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepositoryTest"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ShenyuConfig.RegisterConfig config = new ShenyuConfig.RegisterConfig();",
                "type": "DELETE",
                "lineNo": 57
              }
            ],
            "targetChanges": [
              {
                "line": "RegisterConfig config = new RegisterConfig();",
                "type": "ADD",
                "lineNo": 57
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "repository.persistInstance(mock(InstanceRegisterDTO.class));",
                "type": "DELETE",
                "lineNo": 67
              }
            ],
            "targetChanges": [
              {
                "line": "repository.persistInstance(mock(InstanceEntity.class));",
                "type": "ADD",
                "lineNo": 67
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.persistInstance(InstanceRegisterDTO)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository repository"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.persistInstance(InstanceRegisterDTO)"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.persistInstance(InstanceEntity)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository repository"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.persistInstance(InstanceEntity)"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "InstanceRegisterDTO data = InstanceRegisterDTO.builder()",
                "type": "DELETE",
                "lineNo": 77
              }
            ],
            "targetChanges": [
              {
                "line": "InstanceEntity data = InstanceEntity.builder()",
                "type": "ADD",
                "lineNo": 77
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity data"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ShenyuConfig.RegisterConfig config = new ShenyuConfig.RegisterConfig();",
                "type": "DELETE",
                "lineNo": 97
              }
            ],
            "targetChanges": [
              {
                "line": "RegisterConfig config = new RegisterConfig();",
                "type": "ADD",
                "lineNo": 97
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "repository.selectInstancesAndWatcher(RegisterPathConstants.buildInstanceParentPath(), mock(WatcherListener.class));",
                "type": "DELETE",
                "lineNo": 102
              }
            ],
            "targetChanges": [
              {
                "line": "repository.selectInstancesAndWatcher(InstancePathConstants.buildInstanceParentPath(), mock(WatcherListener.class));",
                "type": "ADD",
                "lineNo": 102
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository repository"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository repository"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.zookeeper.ZookeeperInstanceRegisterRepository.selectInstancesAndWatcher(String,WatcherListener)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "when(mockEvent.getPath()).thenReturn(RegisterPathConstants.buildInstanceParentPath());",
                "type": "DELETE",
                "lineNo": 104
              }
            ],
            "targetChanges": [
              {
                "line": "when(mockEvent.getPath()).thenReturn(InstancePathConstants.buildInstanceParentPath());",
                "type": "ADD",
                "lineNo": 104
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.zookeeper.WatchedEvent mockEvent"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPath()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.path.RegisterPathConstants.buildInstanceParentPath()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "when(<unknown>)"
              },
              {
                "type": "CtInvocation",
                "value": "getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.zookeeper.WatchedEvent mockEvent"
              },
              {
                "type": "CtExecutableReference",
                "value": "getPath()"
              },
              {
                "type": "CtExecutableReference",
                "value": "thenReturn(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildInstanceParentPath()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.path.InstancePathConstants.buildInstanceParentPath()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-sdk/shenyu-sdk-core/src/main/java/org/apache/shenyu/sdk/core/client/AbstractShenyuSdkClient.java",
        "aPath": "shenyu-sdk/shenyu-sdk-core/src/main/java/org/apache/shenyu/sdk/core/client/AbstractShenyuSdkClient.java",
        "name": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "* The type Abstract shenyu sdk client.",
                "type": "ADD",
                "lineNo": 53
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "private final Map<String, List<InstanceRegisterDTO>> watcherInstanceRegisterMap = new HashMap<>();",
                "type": "DELETE",
                "lineNo": 59
              }
            ],
            "targetChanges": [
              {
                "line": "private final Map<String, List<InstanceEntity>> watcherInstanceRegisterMap = new HashMap<>();",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "java.util.Map watcherInstanceRegisterMap"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.HashMap.HashMap()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.HashMap"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.util.Map watcherInstanceRegisterMap"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.HashMap.HashMap()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.HashMap"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private ShenyuConfig.RegisterConfig sdkConfig;",
                "type": "DELETE",
                "lineNo": 61
              }
            ],
            "targetChanges": [
              {
                "line": "private RegisterConfig registerConfig;",
                "type": "ADD",
                "lineNo": 65
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdkConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig registerConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 71
              },
              {
                "line": "* Do request shenyu response.",
                "type": "ADD",
                "lineNo": 72
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "* @param request the request",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "* @return the shenyu response",
                "type": "ADD",
                "lineNo": 75
              },
              {
                "line": "* @throws IOException the io exception",
                "type": "ADD",
                "lineNo": 76
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 77
              },
              {
                "line": "protected abstract ShenyuResponse doRequest(ShenyuRequest request) throws IOException;",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "* Init client.",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "* @param props the props",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "protected abstract void initClient(Properties props);",
                "type": "ADD",
                "lineNo": 85
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.doRequest(ShenyuRequest)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.sdk.core.ShenyuResponse"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.sdk.core.ShenyuRequest request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.sdk.core.ShenyuRequest"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.IOException"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.initClient(Properties)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void init(final ShenyuConfig.RegisterConfig shenyuConfig,",
                "type": "DELETE",
                "lineNo": 68
              },
              {
                "line": "final ObjectProvider<ShenyuInstanceRegisterRepository> registerRepositoryObjectFactory) {",
                "type": "DELETE",
                "lineNo": 69
              },
              {
                "line": "this.sdkConfig = shenyuConfig;",
                "type": "DELETE",
                "lineNo": 70
              },
              {
                "line": "this.registerRepository = registerRepositoryObjectFactory.getIfAvailable();",
                "type": "DELETE",
                "lineNo": 71
              },
              {
                "line": "Boolean retryEnable = Optional.ofNullable(sdkConfig.getProps().get(\"retry.enable\")).map(e -> (boolean) e).orElse(false);",
                "type": "DELETE",
                "lineNo": 72
              },
              {
                "line": "Long period = Optional.ofNullable(sdkConfig.getProps().get(\"retry.period\")).map(l -> (Long) l).orElse(100L);",
                "type": "DELETE",
                "lineNo": 73
              },
              {
                "line": "long maxPeriod = Optional.ofNullable(sdkConfig.getProps().get(\"retry.maxPeriod\")).map(l -> (Long) l).orElse(SECONDS.toMillis(1));",
                "type": "DELETE",
                "lineNo": 74
              },
              {
                "line": "int maxAttempts = Optional.ofNullable(sdkConfig.getProps().get(\"retry.maxAttempts\")).map(l -> (int) l).orElse(5);",
                "type": "DELETE",
                "lineNo": 75
              },
              {
                "line": "this.algorithm = sdkConfig.getProps().getProperty(\"algorithm\", \"roundRobin\");",
                "type": "DELETE",
                "lineNo": 76
              },
              {
                "line": "this.scheme = sdkConfig.getProps().getProperty(\"scheme\", \"http\");",
                "type": "DELETE",
                "lineNo": 77
              }
            ],
            "targetChanges": [
              {
                "line": "public void init(final RegisterConfig registerConfig, final ShenyuInstanceRegisterRepository instanceRegisterRepository) {",
                "type": "ADD",
                "lineNo": 88
              },
              {
                "line": "this.registerConfig = registerConfig;",
                "type": "ADD",
                "lineNo": 89
              },
              {
                "line": "this.registerRepository = instanceRegisterRepository;",
                "type": "ADD",
                "lineNo": 90
              },
              {
                "line": "Properties props = registerConfig.getProps();",
                "type": "ADD",
                "lineNo": 91
              },
              {
                "line": "Boolean retryEnable = Optional.ofNullable(props.get(\"retry.enable\")).map(e -> (boolean) e).orElse(false);",
                "type": "ADD",
                "lineNo": 92
              },
              {
                "line": "Long period = Optional.ofNullable(props.get(\"retry.period\")).map(l -> (Long) l).orElse(100L);",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "long maxPeriod = Optional.ofNullable(props.get(\"retry.maxPeriod\")).map(l -> (Long) l).orElse(SECONDS.toMillis(1));",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "int maxAttempts = Optional.ofNullable(props.get(\"retry.maxAttempts\")).map(l -> (int) l).orElse(5);",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "this.algorithm = props.getProperty(\"algorithm\", \"roundRobin\");",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "this.scheme = props.getProperty(\"scheme\", \"http\");",
                "type": "ADD",
                "lineNo": 97
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.init(RegisterConfig,ObjectProvider)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.beans.factory.ObjectProvider registerRepositoryObjectFactory"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.beans.factory.ObjectProvider"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              },
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdkConfig"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository registerRepository"
              },
              {
                "type": "CtInvocation",
                "value": "getIfAvailable()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.beans.factory.ObjectProvider registerRepositoryObjectFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "getIfAvailable()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Boolean retryEnable"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdkConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'retry.enable'"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Object e"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object e"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'false'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Long period"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Long"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdkConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'retry.period'"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Object l"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object l"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Long"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "long '100'"
              },
              {
                "type": "CtLocalVariable",
                "value": "long maxPeriod"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdkConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'retry.maxPeriod'"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Object l"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object l"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Long"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.TimeUnit.toMillis(long)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.TimeUnit SECONDS"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.TimeUnit.toMillis(long)"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtLocalVariable",
                "value": "int maxAttempts"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdkConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'retry.maxAttempts'"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Object l"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object l"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "int '5'"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String algorithm"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdkConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'algorithm'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'roundRobin'"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String scheme"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdkConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'scheme'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http'"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.init(RegisterConfig,ShenyuInstanceRegisterRepository)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig registerConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository instanceRegisterRepository"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              },
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig registerConfig"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig registerConfig"
              },
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository registerRepository"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository instanceRegisterRepository"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.getProps()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig registerConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.getProps()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Boolean retryEnable"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'retry.enable'"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Object e"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object e"
              },
              {
                "type": "CtTypeReference",
                "value": "boolean"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'false'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Long period"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Long"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'retry.period'"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Object l"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object l"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Long"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "long '100'"
              },
              {
                "type": "CtLocalVariable",
                "value": "long maxPeriod"
              },
              {
                "type": "CtTypeReference",
                "value": "long"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'retry.maxPeriod'"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Object l"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object l"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Long"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.TimeUnit.toMillis(long)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.TimeUnit SECONDS"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.TimeUnit.toMillis(long)"
              },
              {
                "type": "CtLiteral",
                "value": "int '1'"
              },
              {
                "type": "CtLocalVariable",
                "value": "int maxAttempts"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Optional"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.ofNullable(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.get(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'retry.maxAttempts'"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.Object l"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object l"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Optional.orElse(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "int '5'"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String algorithm"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'algorithm'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'roundRobin'"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.lang.String scheme"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'scheme'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.initClient(shenyuConfig, registerRepositoryObjectFactory);",
                "type": "DELETE",
                "lineNo": 79
              }
            ],
            "targetChanges": [
              {
                "line": "this.initClient(props);",
                "type": "ADD",
                "lineNo": 99
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.initClient(RegisterConfig,ObjectProvider)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.initClient(RegisterConfig,ObjectProvider)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.beans.factory.ObjectProvider registerRepositoryObjectFactory"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.initClient(Properties)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.initClient(Properties)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (StringUtils.isEmpty(sdkConfig.getRegisterType())) {",
                "type": "DELETE",
                "lineNo": 127
              },
              {
                "line": "throw new ShenyuException(\"configure registerType is required.\");",
                "type": "DELETE",
                "lineNo": 128
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 129
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdkConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'configure registerType is required.'"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "if (\"local\".equals(sdkConfig.getRegisterType())) {",
                "type": "DELETE",
                "lineNo": 131
              },
              {
                "line": "List<String> serverList = Arrays.asList(sdkConfig.getServerLists().split(\",\"));",
                "type": "DELETE",
                "lineNo": 132
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.isNull(registerRepository)) {",
                "type": "ADD",
                "lineNo": 148
              },
              {
                "line": "List<String> serverList = Arrays.asList(registerConfig.getServerLists().split(\",\"));",
                "type": "ADD",
                "lineNo": 149
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'local'"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdkConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List serverList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Arrays.asList(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Arrays"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Arrays.asList(Object[])"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.split(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getServerLists()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig sdkConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getServerLists()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.split(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ','"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository registerRepository"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List serverList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Arrays.asList(Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Arrays"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Arrays.asList(Object[])"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.split(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.getServerLists()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig registerConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.getServerLists()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.split(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ','"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "List<InstanceRegisterDTO> instanceRegisters = watcherInstanceRegisterMap.get(request.getContextId());",
                "type": "DELETE",
                "lineNo": 140
              }
            ],
            "targetChanges": [
              {
                "line": "List<InstanceEntity> instanceRegisters = watcherInstanceRegisterMap.get(request.getContextId());",
                "type": "ADD",
                "lineNo": 157
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List instanceRegisters"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map watcherInstanceRegisterMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sdk.core.ShenyuRequest.getContextId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.sdk.core.ShenyuRequest request"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sdk.core.ShenyuRequest.getContextId()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.List instanceRegisters"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.Map watcherInstanceRegisterMap"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Map.get(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sdk.core.ShenyuRequest.getContextId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.sdk.core.ShenyuRequest request"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sdk.core.ShenyuRequest.getContextId()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "protected abstract ShenyuResponse doRequest(ShenyuRequest request) throws IOException;",
                "type": "DELETE",
                "lineNo": 170
              },
              {
                "line": "protected abstract void initClient(ShenyuConfig.RegisterConfig shenyuConfig,",
                "type": "DELETE",
                "lineNo": 172
              },
              {
                "line": "ObjectProvider<ShenyuInstanceRegisterRepository> registerRepositoryObjectFactory);",
                "type": "DELETE",
                "lineNo": 173
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.doRequest(ShenyuRequest)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.sdk.core.ShenyuResponse"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.sdk.core.ShenyuRequest request"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.sdk.core.ShenyuRequest"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.IOException"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.initClient(RegisterConfig,ObjectProvider)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.beans.factory.ObjectProvider registerRepositoryObjectFactory"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.beans.factory.ObjectProvider"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-sdk/shenyu-sdk-core/src/main/java/org/apache/shenyu/sdk/core/client/ShenyuSdkClient.java",
        "aPath": "shenyu-sdk/shenyu-sdk-core/src/main/java/org/apache/shenyu/sdk/core/client/ShenyuSdkClient.java",
        "name": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* @param shenyuConfig shenyuConfig",
                "type": "DELETE",
                "lineNo": 38
              },
              {
                "line": "* @param registerRepositoryObjectFactory registerRepositoryObjectFactory",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "* @param registerConfig the register config",
                "type": "ADD",
                "lineNo": 37
              },
              {
                "line": "* @param instanceRegisterRepository the instance register repository",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "default void init(final ShenyuConfig.RegisterConfig shenyuConfig,",
                "type": "DELETE",
                "lineNo": 41
              },
              {
                "line": "final ObjectProvider<ShenyuInstanceRegisterRepository> registerRepositoryObjectFactory) {",
                "type": "DELETE",
                "lineNo": 42
              }
            ],
            "targetChanges": [
              {
                "line": "default void init(RegisterConfig registerConfig, ShenyuInstanceRegisterRepository instanceRegisterRepository) {",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient.init(RegisterConfig,ObjectProvider)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.beans.factory.ObjectProvider registerRepositoryObjectFactory"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.beans.factory.ObjectProvider"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient.init(RegisterConfig,ShenyuInstanceRegisterRepository)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig registerConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository instanceRegisterRepository"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-sdk/shenyu-sdk-httpclient/src/main/java/org/apache/shenyu/sdk/httpclient/HttpShenyuSdkClient.java",
        "aPath": "shenyu-sdk/shenyu-sdk-httpclient/src/main/java/org/apache/shenyu/sdk/httpclient/HttpShenyuSdkClient.java",
        "name": "org.apache.shenyu.sdk.httpclient.HttpShenyuSdkClient",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "protected void initClient(final ShenyuConfig.RegisterConfig shenyuConfig,",
                "type": "DELETE",
                "lineNo": 66
              },
              {
                "line": "final ObjectProvider<ShenyuInstanceRegisterRepository> registerRepositoryObjectFactory) {",
                "type": "DELETE",
                "lineNo": 67
              }
            ],
            "targetChanges": [
              {
                "line": "protected void initClient(final Properties props) {",
                "type": "ADD",
                "lineNo": 64
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.httpclient.HttpShenyuSdkClient.initClient(RegisterConfig,ObjectProvider)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.beans.factory.ObjectProvider registerRepositoryObjectFactory"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.beans.factory.ObjectProvider"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.httpclient.HttpShenyuSdkClient.initClient(Properties)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "final String maxTotal = shenyuConfig.getProps().getProperty(\"http.maxTotal\", \"800\");",
                "type": "DELETE",
                "lineNo": 69
              },
              {
                "line": "final String maxPerRoute = shenyuConfig.getProps().getProperty(\"http.maxPerRoute\", \"200\");",
                "type": "DELETE",
                "lineNo": 70
              },
              {
                "line": "final String serverRequestTimeOut = shenyuConfig.getProps().getProperty(\"http.serverRequestTimeOut\", \"2000\");",
                "type": "DELETE",
                "lineNo": 71
              },
              {
                "line": "final String serverResponseTimeOut = shenyuConfig.getProps().getProperty(\"http.serverResponseTimeOut\", \"2000\");",
                "type": "DELETE",
                "lineNo": 72
              },
              {
                "line": "final String connectionRequestTimeOut = shenyuConfig.getProps().getProperty(\"http.connectionRequestTimeOut \", \"2000\");",
                "type": "DELETE",
                "lineNo": 73
              },
              {
                "line": "LayeredConnectionSocketFactory sslsf = new SSLConnectionSocketFactory(SSLContext.getDefault());",
                "type": "DELETE",
                "lineNo": 74
              }
            ],
            "targetChanges": [
              {
                "line": "final String maxTotal = props.getProperty(\"http.maxTotal\", \"800\");",
                "type": "ADD",
                "lineNo": 66
              },
              {
                "line": "final String maxPerRoute = props.getProperty(\"http.maxPerRoute\", \"200\");",
                "type": "ADD",
                "lineNo": 67
              },
              {
                "line": "final String serverRequestTimeOut = props.getProperty(\"http.serverRequestTimeOut\", \"2000\");",
                "type": "ADD",
                "lineNo": 68
              },
              {
                "line": "final String serverResponseTimeOut = props.getProperty(\"http.serverResponseTimeOut\", \"2000\");",
                "type": "ADD",
                "lineNo": 69
              },
              {
                "line": "final String connectionRequestTimeOut = props.getProperty(\"http.connectionRequestTimeOut \", \"2000\");",
                "type": "ADD",
                "lineNo": 70
              },
              {
                "line": "LayeredConnectionSocketFactory ssl = new SSLConnectionSocketFactory(SSLContext.getDefault());",
                "type": "ADD",
                "lineNo": 71
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String maxTotal"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.maxTotal'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '800'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String maxPerRoute"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.maxPerRoute'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '200'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String serverRequestTimeOut"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.serverRequestTimeOut'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2000'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String serverResponseTimeOut"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.serverResponseTimeOut'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2000'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String connectionRequestTimeOut"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.connectionRequestTimeOut '"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2000'"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.http.conn.socket.LayeredConnectionSocketFactory sslsf"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.http.conn.socket.LayeredConnectionSocketFactory"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.http.conn.ssl.SSLConnectionSocketFactory(javax.net.ssl.SSLContext)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.http.conn.ssl.SSLConnectionSocketFactory"
              },
              {
                "type": "CtInvocation",
                "value": "javax.net.ssl.SSLContext.getDefault()"
              },
              {
                "type": "CtTypeAccess",
                "value": "javax.net.ssl.SSLContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "javax.net.ssl.SSLContext.getDefault()"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String maxTotal"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.maxTotal'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '800'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String maxPerRoute"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.maxPerRoute'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '200'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String serverRequestTimeOut"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.serverRequestTimeOut'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2000'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String serverResponseTimeOut"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.serverResponseTimeOut'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2000'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String connectionRequestTimeOut"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.connectionRequestTimeOut '"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2000'"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.http.conn.socket.LayeredConnectionSocketFactory ssl"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.http.conn.socket.LayeredConnectionSocketFactory"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.http.conn.ssl.SSLConnectionSocketFactory(javax.net.ssl.SSLContext)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.http.conn.ssl.SSLConnectionSocketFactory"
              },
              {
                "type": "CtInvocation",
                "value": "javax.net.ssl.SSLContext.getDefault()"
              },
              {
                "type": "CtTypeAccess",
                "value": "javax.net.ssl.SSLContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "javax.net.ssl.SSLContext.getDefault()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".register(\"https\", sslsf)",
                "type": "DELETE",
                "lineNo": 76
              }
            ],
            "targetChanges": [
              {
                "line": ".register(\"https\", ssl)",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "register(java.lang.String,org.apache.http.conn.socket.LayeredConnectionSocketFactory)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'https'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.http.conn.socket.LayeredConnectionSocketFactory sslsf"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "register(java.lang.String,org.apache.http.conn.socket.LayeredConnectionSocketFactory)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'https'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.http.conn.socket.LayeredConnectionSocketFactory ssl"
              }
            ]
          },
          {
            "sourceChanges": [],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-sdk/shenyu-sdk-okhttp/src/main/java/org/apache/shenyu/sdk/okhttp/OkHttpShenyuSdkClient.java",
        "aPath": "shenyu-sdk/shenyu-sdk-okhttp/src/main/java/org/apache/shenyu/sdk/okhttp/OkHttpShenyuSdkClient.java",
        "name": "org.apache.shenyu.sdk.okhttp.OkHttpShenyuSdkClient",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "protected void initClient(final ShenyuConfig.RegisterConfig shenyuConfig,",
                "type": "DELETE",
                "lineNo": 51
              },
              {
                "line": "final ObjectProvider<ShenyuInstanceRegisterRepository> registerRepositoryObjectFactory) {",
                "type": "DELETE",
                "lineNo": 52
              },
              {
                "line": "final String maxIdleConnections = shenyuConfig.getProps().getProperty(\"http.maxIdleConnections\", \"200\");",
                "type": "DELETE",
                "lineNo": 53
              },
              {
                "line": "final String keepAliveDuration = shenyuConfig.getProps().getProperty(\"http.keepAliveDuration\", \"2\");",
                "type": "DELETE",
                "lineNo": 54
              },
              {
                "line": "final String connectTimeout = shenyuConfig.getProps().getProperty(\"http.connectTimeout\", \"60\");",
                "type": "DELETE",
                "lineNo": 55
              },
              {
                "line": "final String readTimeout = shenyuConfig.getProps().getProperty(\"http.readTimeout\", \"60\");",
                "type": "DELETE",
                "lineNo": 56
              }
            ],
            "targetChanges": [
              {
                "line": "protected void initClient(final Properties props) {",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "final String maxIdleConnections = props.getProperty(\"http.maxIdleConnections\", \"200\");",
                "type": "ADD",
                "lineNo": 50
              },
              {
                "line": "final String keepAliveDuration = props.getProperty(\"http.keepAliveDuration\", \"2\");",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "final String connectTimeout = props.getProperty(\"http.connectTimeout\", \"60\");",
                "type": "ADD",
                "lineNo": 52
              },
              {
                "line": "final String readTimeout = props.getProperty(\"http.readTimeout\", \"60\");",
                "type": "ADD",
                "lineNo": 53
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.okhttp.OkHttpShenyuSdkClient.initClient(RegisterConfig,ObjectProvider)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.beans.factory.ObjectProvider registerRepositoryObjectFactory"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.beans.factory.ObjectProvider"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String maxIdleConnections"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.maxIdleConnections'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '200'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String keepAliveDuration"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.keepAliveDuration'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String connectTimeout"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.connectTimeout'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '60'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String readTimeout"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig shenyuConfig"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.readTimeout'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '60'"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.okhttp.OkHttpShenyuSdkClient.initClient(Properties)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String maxIdleConnections"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.maxIdleConnections'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '200'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String keepAliveDuration"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.keepAliveDuration'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '2'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String connectTimeout"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.connectTimeout'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '60'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String readTimeout"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http.readTimeout'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '60'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-sdk/shenyu-sdk-okhttp/src/test/java/org/apache/shenyu/sdk/okhttp/OkHttpShenyuSdkClientTest.java",
        "aPath": "shenyu-sdk/shenyu-sdk-okhttp/src/test/java/org/apache/shenyu/sdk/okhttp/OkHttpShenyuSdkClientTest.java",
        "name": "org.apache.shenyu.sdk.okhttp.OkHttpShenyuSdkClientTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "* @throws IOException the io exception",
                "type": "DELETE",
                "lineNo": 41
              }
            ],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public void testShenyuHttpClient() throws IOException {",
                "type": "DELETE",
                "lineNo": 44
              }
            ],
            "targetChanges": [
              {
                "line": "@Ignore",
                "type": "ADD",
                "lineNo": 43
              },
              {
                "line": "public void testShenyuHttpClient() {",
                "type": "ADD",
                "lineNo": 44
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.okhttp.OkHttpShenyuSdkClientTest.testShenyuHttpClient()"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtTypeReference",
                "value": "java.io.IOException"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.sdk.okhttp.OkHttpShenyuSdkClientTest.testShenyuHttpClient()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.junit.Ignore"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "okHttpShenyuSdkClient.init(new ShenyuConfig.RegisterConfig(), mock(ObjectProvider.class));",
                "type": "DELETE",
                "lineNo": 46
              }
            ],
            "targetChanges": [
              {
                "line": "okHttpShenyuSdkClient.init(new RegisterConfig(), mock(ShenyuInstanceRegisterRepository.class));",
                "type": "ADD",
                "lineNo": 46
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.init(RegisterConfig,ObjectProvider)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.sdk.okhttp.OkHttpShenyuSdkClient okHttpShenyuSdkClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.init(RegisterConfig,ObjectProvider)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.init(RegisterConfig,ShenyuInstanceRegisterRepository)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.sdk.okhttp.OkHttpShenyuSdkClient okHttpShenyuSdkClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sdk.core.client.AbstractShenyuSdkClient.init(RegisterConfig,ShenyuInstanceRegisterRepository)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtInvocation",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtExecutableReference",
                "value": "mock(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-sdk/shenyu-sdk-spring/src/main/java/org/apache/shenyu/sdk/spring/ShenyuClientsRegistrar.java",
        "aPath": "shenyu-sdk/shenyu-sdk-spring/src/main/java/org/apache/shenyu/sdk/spring/ShenyuClientsRegistrar.java",
        "name": "org.apache.shenyu.sdk.spring.ShenyuClientsRegistrar",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "class ShenyuClientsRegistrar implements ImportBeanDefinitionRegistrar, ResourceLoaderAware, EnvironmentAware {",
                "type": "DELETE",
                "lineNo": 61
              }
            ],
            "targetChanges": [
              {
                "line": "public class ShenyuClientsRegistrar implements ImportBeanDefinitionRegistrar, ResourceLoaderAware, EnvironmentAware {",
                "type": "ADD",
                "lineNo": 61
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.sdk.spring.ShenyuClientsRegistrar"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.context.annotation.ImportBeanDefinitionRegistrar"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.context.ResourceLoaderAware"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.context.EnvironmentAware"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.sdk.spring.ShenyuClientsRegistrar"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.context.annotation.ImportBeanDefinitionRegistrar"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.context.ResourceLoaderAware"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.context.EnvironmentAware"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 67
              },
              {
                "line": "* Instantiates a new Shenyu clients registrar.",
                "type": "ADD",
                "lineNo": 68
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 69
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 73
              },
              {
                "line": "* Validate fallback.",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 75
              },
              {
                "line": "* @param clazz the clazz",
                "type": "ADD",
                "lineNo": 76
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 77
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": "* Validate fallback factory.",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": "* @param clazz the clazz",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 86
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 102
              },
              {
                "line": "* Register shenyu clients.",
                "type": "ADD",
                "lineNo": 103
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 104
              },
              {
                "line": "* @param metadata the metadata",
                "type": "ADD",
                "lineNo": 105
              },
              {
                "line": "* @param registry the registry",
                "type": "ADD",
                "lineNo": 106
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 107
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 218
              },
              {
                "line": "* Gets scanner.",
                "type": "ADD",
                "lineNo": 219
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 220
              },
              {
                "line": "* @return the scanner",
                "type": "ADD",
                "lineNo": 221
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 222
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 238
              },
              {
                "line": "* Gets base packages.",
                "type": "ADD",
                "lineNo": 239
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 240
              },
              {
                "line": "* @param importingClassMetadata the importing class metadata",
                "type": "ADD",
                "lineNo": 241
              },
              {
                "line": "* @return the base packages",
                "type": "ADD",
                "lineNo": 242
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 243
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 296
              },
              {
                "line": "* Gets name.",
                "type": "ADD",
                "lineNo": 297
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 298
              },
              {
                "line": "* @param name the name",
                "type": "ADD",
                "lineNo": 299
              },
              {
                "line": "* @return the name",
                "type": "ADD",
                "lineNo": 300
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 301
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 323
              },
              {
                "line": "* Gets name.",
                "type": "ADD",
                "lineNo": 324
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 325
              },
              {
                "line": "* @param attributes the attributes",
                "type": "ADD",
                "lineNo": 326
              },
              {
                "line": "* @return the name",
                "type": "ADD",
                "lineNo": 327
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 328
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 333
              },
              {
                "line": "* Gets name.",
                "type": "ADD",
                "lineNo": 334
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 335
              },
              {
                "line": "* @param beanFactory the bean factory",
                "type": "ADD",
                "lineNo": 336
              },
              {
                "line": "* @param attributes the attributes",
                "type": "ADD",
                "lineNo": 337
              },
              {
                "line": "* @return the name",
                "type": "ADD",
                "lineNo": 338
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 339
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 349
              },
              {
                "line": "* Gets url.",
                "type": "ADD",
                "lineNo": 350
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 351
              },
              {
                "line": "* @param url the url",
                "type": "ADD",
                "lineNo": 352
              },
              {
                "line": "* @return the url",
                "type": "ADD",
                "lineNo": 353
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 354
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 386
              },
              {
                "line": "* Gets path.",
                "type": "ADD",
                "lineNo": 387
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 388
              },
              {
                "line": "* @param path the path",
                "type": "ADD",
                "lineNo": 389
              },
              {
                "line": "* @return the path",
                "type": "ADD",
                "lineNo": 390
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 391
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-spring-boot-starter/shenyu-spring-boot-starter-gateway/src/main/java/org/apache/shenyu/springboot/starter/gateway/ShenyuConfiguration.java",
        "aPath": "shenyu-spring-boot-starter/shenyu-spring-boot-starter-gateway/src/main/java/org/apache/shenyu/springboot/starter/gateway/ShenyuConfiguration.java",
        "name": "org.apache.shenyu.springboot.starter.gateway.ShenyuConfiguration",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "final ApplicationEventPublisher eventPublisher) {",
                "type": "DELETE",
                "lineNo": 124
              },
              {
                "line": "return new CommonPluginDataSubscriber(pluginDataHandlerList.getIfAvailable(Collections::emptyList), eventPublisher);",
                "type": "DELETE",
                "lineNo": 125
              }
            ],
            "targetChanges": [
              {
                "line": "final ObjectProvider<ApplicationEventPublisher> eventPublisher) {",
                "type": "ADD",
                "lineNo": 124
              },
              {
                "line": "return new CommonPluginDataSubscriber(pluginDataHandlerList.getIfAvailable(Collections::emptyList), eventPublisher.getIfAvailable());",
                "type": "ADD",
                "lineNo": 125
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtParameter",
                "value": "org.springframework.context.ApplicationEventPublisher eventPublisher"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.context.ApplicationEventPublisher"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.base.cache.CommonPluginDataSubscriber.CommonPluginDataSubscriber(List,ApplicationEventPublisher)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonPluginDataSubscriber"
              },
              {
                "type": "CtInvocation",
                "value": "getIfAvailable()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.beans.factory.ObjectProvider pluginDataHandlerList"
              },
              {
                "type": "CtExecutableReference",
                "value": "getIfAvailable()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.util.Collections.emptyList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.context.ApplicationEventPublisher eventPublisher"
              }
            ],
            "targetElements": [
              {
                "type": "CtParameter",
                "value": "org.springframework.beans.factory.ObjectProvider eventPublisher"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.beans.factory.ObjectProvider"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.context.ApplicationEventPublisher"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.base.cache.CommonPluginDataSubscriber.CommonPluginDataSubscriber(List,ApplicationEventPublisher)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.base.cache.CommonPluginDataSubscriber"
              },
              {
                "type": "CtInvocation",
                "value": "getIfAvailable()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.beans.factory.ObjectProvider pluginDataHandlerList"
              },
              {
                "type": "CtExecutableReference",
                "value": "getIfAvailable()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.util.Collections.emptyList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtInvocation",
                "value": "getIfAvailable()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.beans.factory.ObjectProvider eventPublisher"
              },
              {
                "type": "CtExecutableReference",
                "value": "getIfAvailable()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-spring-boot-starter/shenyu-spring-boot-starter-instance/src/main/java/org/apache/shenyu/springboot/starter/instance/InstanceRegisterListener.java",
        "aPath": "shenyu-spring-boot-starter/shenyu-spring-boot-starter-instance/src/main/java/org/apache/shenyu/springboot/starter/instance/InstanceRegisterListener.java",
        "name": "org.apache.shenyu.springboot.starter.instance.InstanceRegisterListener",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "repository = ShenyuInstanceRegisterRepositoryFactory.newInstance(config.getRegisterType());",
                "type": "DELETE",
                "lineNo": 59
              },
              {
                "line": "repository.init(config);",
                "type": "DELETE",
                "lineNo": 60
              }
            ],
            "targetChanges": [
              {
                "line": "repository = ShenyuInstanceRegisterRepositoryFactory.newAndInitInstance(config);",
                "type": "ADD",
                "lineNo": 59
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository repository"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory.newInstance(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory.newInstance(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.init(RegisterConfig)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository repository"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.init(RegisterConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig config"
              }
            ],
            "targetElements": [
              {
                "type": "CtFieldWrite",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository repository"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory.newAndInitInstance(RegisterConfig)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory.newAndInitInstance(RegisterConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "InstanceRegisterDTO registerDTO = buildInstanceRegisterDTO(port);",
                "type": "DELETE",
                "lineNo": 75
              },
              {
                "line": "repository.persistInstance(registerDTO);",
                "type": "DELETE",
                "lineNo": 76
              }
            ],
            "targetChanges": [
              {
                "line": "InstanceEntity instanceEntity = buildInstanceRegisterDTO(port);",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "repository.persistInstance(instanceEntity);",
                "type": "ADD",
                "lineNo": 75
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO registerDTO"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.springboot.starter.instance.InstanceRegisterListener.buildInstanceRegisterDTO(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.springboot.starter.instance.InstanceRegisterListener.buildInstanceRegisterDTO(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "int port"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.persistInstance(InstanceRegisterDTO)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository repository"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.persistInstance(InstanceRegisterDTO)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO registerDTO"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instanceEntity"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.springboot.starter.instance.InstanceRegisterListener.buildInstanceRegisterDTO(int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.springboot.starter.instance.InstanceRegisterListener.buildInstanceRegisterDTO(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "int port"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.persistInstance(InstanceEntity)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository repository"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.persistInstance(InstanceEntity)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity instanceEntity"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "private InstanceRegisterDTO buildInstanceRegisterDTO(final int port) {",
                "type": "DELETE",
                "lineNo": 79
              }
            ],
            "targetChanges": [
              {
                "line": "private InstanceEntity buildInstanceRegisterDTO(final int port) {",
                "type": "ADD",
                "lineNo": 78
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.springboot.starter.instance.InstanceRegisterListener.buildInstanceRegisterDTO(int)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtParameter",
                "value": "int port"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.springboot.starter.instance.InstanceRegisterListener.buildInstanceRegisterDTO(int)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtParameter",
                "value": "int port"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return InstanceRegisterDTO.builder()",
                "type": "DELETE",
                "lineNo": 81
              }
            ],
            "targetChanges": [
              {
                "line": "return InstanceEntity.builder()",
                "type": "ADD",
                "lineNo": 80
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.common.dto.InstanceRegisterDTO.builder()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.port(Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.host(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity$Builder.appName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.entity.InstanceEntity.builder()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-spring-boot-starter/shenyu-spring-boot-starter-instance/src/main/java/org/apache/shenyu/springboot/starter/instance/ShenyuInstanceConfiguration.java",
        "aPath": "shenyu-spring-boot-starter/shenyu-spring-boot-starter-instance/src/main/java/org/apache/shenyu/springboot/starter/instance/ShenyuInstanceConfiguration.java",
        "name": "org.apache.shenyu.springboot.starter.instance.ShenyuInstanceConfiguration",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "* Register config register config.",
                "type": "ADD",
                "lineNo": 33
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 34
              },
              {
                "line": "* @return the register config",
                "type": "ADD",
                "lineNo": 35
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 36
              },
              {
                "line": "@Bean",
                "type": "ADD",
                "lineNo": 37
              },
              {
                "line": "@ConfigurationProperties(prefix = \"shenyu.register\")",
                "type": "ADD",
                "lineNo": 38
              },
              {
                "line": "public RegisterConfig registerConfig() {",
                "type": "ADD",
                "lineNo": 39
              },
              {
                "line": "return new RegisterConfig();",
                "type": "ADD",
                "lineNo": 40
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 41
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 43
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.springboot.starter.instance.ShenyuInstanceConfiguration.registerConfig()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.context.properties.ConfigurationProperties"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu.register'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public InstanceRegisterListener instanceRegisterListener(final ShenyuConfig config) {",
                "type": "DELETE",
                "lineNo": 39
              },
              {
                "line": "return new InstanceRegisterListener(config.getRegister());",
                "type": "DELETE",
                "lineNo": 40
              }
            ],
            "targetChanges": [
              {
                "line": "public InstanceRegisterListener instanceRegisterListener(final RegisterConfig config) {",
                "type": "ADD",
                "lineNo": 51
              },
              {
                "line": "return new InstanceRegisterListener(config);",
                "type": "ADD",
                "lineNo": 52
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.springboot.starter.instance.ShenyuInstanceConfiguration.instanceRegisterListener(ShenyuConfig)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.springboot.starter.instance.InstanceRegisterListener"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.config.ShenyuConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.springboot.starter.instance.InstanceRegisterListener.InstanceRegisterListener(RegisterConfig)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.springboot.starter.instance.InstanceRegisterListener"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getRegister()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getRegister()"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.springboot.starter.instance.ShenyuInstanceConfiguration.instanceRegisterListener(RegisterConfig)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.springboot.starter.instance.InstanceRegisterListener"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.springboot.starter.instance.InstanceRegisterListener.InstanceRegisterListener(RegisterConfig)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.springboot.starter.instance.InstanceRegisterListener"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-spring-boot-starter/shenyu-spring-boot-starter-sdk/src/main/java/org/apache/shenyu/springboot/starter/sdk/ShenyuSdkAutoConfiguration.java",
        "aPath": "shenyu-spring-boot-starter/shenyu-spring-boot-starter-sdk/src/main/java/org/apache/shenyu/springboot/starter/sdk/ShenyuSdkAutoConfiguration.java",
        "name": "org.apache.shenyu.springboot.starter.sdk.ShenyuSdkAutoConfiguration",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "@ConditionalOnProperty(value = {\"shenyu.sdk.enabled\"}, havingValue = \"true\", matchIfMissing = true)",
                "type": "ADD",
                "lineNo": 55
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'true'"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu.sdk.enabled'"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* @param registerRepositoryObjectFactory registerRepositoryObjectFactory",
                "type": "DELETE",
                "lineNo": 72
              }
            ],
            "targetChanges": [
              {
                "line": "* @param instanceRegisterRepository the instance register repository",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "@ConditionalOnProperty(name = \"shenyu.sdk.props.clientType\")",
                "type": "DELETE",
                "lineNo": 77
              },
              {
                "line": "public ShenyuSdkClient shenyuSdkClient(final ShenyuConfig config,",
                "type": "DELETE",
                "lineNo": 78
              },
              {
                "line": "final ObjectProvider<ShenyuInstanceRegisterRepository> registerRepositoryObjectFactory) {",
                "type": "DELETE",
                "lineNo": 79
              },
              {
                "line": "final ShenyuSdkClient shenyuSdkClient = ShenyuSdkClientFactory.newInstance(config.getSdk().getProps().getProperty(\"clientType\"));",
                "type": "DELETE",
                "lineNo": 80
              },
              {
                "line": "shenyuSdkClient.init(config.getSdk(), registerRepositoryObjectFactory);",
                "type": "DELETE",
                "lineNo": 81
              }
            ],
            "targetChanges": [
              {
                "line": "public ShenyuSdkClient shenyuSdkClient(final RegisterConfig config, final ShenyuInstanceRegisterRepository instanceRegisterRepository) {",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": "Properties props = config.getProps();",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": "String clientType = props.getProperty(\"clientType\", \"httpclient\");",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": "ShenyuSdkClient shenyuSdkClient = ShenyuSdkClientFactory.newInstance(clientType);",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "shenyuSdkClient.init(config, instanceRegisterRepository);",
                "type": "ADD",
                "lineNo": 82
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.springboot.starter.sdk.ShenyuSdkAutoConfiguration.shenyuSdkClient(ShenyuConfig,ObjectProvider)"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu.sdk.props.clientType'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.config.ShenyuConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.beans.factory.ObjectProvider registerRepositoryObjectFactory"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.beans.factory.ObjectProvider"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient shenyuSdkClient"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClientFactory.newInstance(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClientFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClientFactory.newInstance(String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getSdk()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getSdk()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getProps()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'clientType'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient.init(RegisterConfig,ObjectProvider)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient shenyuSdkClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient.init(RegisterConfig,ObjectProvider)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getSdk()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getSdk()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.beans.factory.ObjectProvider registerRepositoryObjectFactory"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.springboot.starter.sdk.ShenyuSdkAutoConfiguration.shenyuSdkClient(RegisterConfig,ShenyuInstanceRegisterRepository)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository instanceRegisterRepository"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Properties"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.getProps()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.getProps()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String clientType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.Properties props"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Properties.getProperty(String,String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'clientType'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'httpclient'"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient shenyuSdkClient"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClientFactory.newInstance(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClientFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClientFactory.newInstance(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String clientType"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient.init(RegisterConfig,ShenyuInstanceRegisterRepository)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient shenyuSdkClient"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.sdk.core.client.ShenyuSdkClient.init(RegisterConfig,ShenyuInstanceRegisterRepository)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository instanceRegisterRepository"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "@ConditionalOnProperty(name = \"shenyu.sdk.registerType\")",
                "type": "DELETE",
                "lineNo": 92
              },
              {
                "line": "public ShenyuInstanceRegisterRepository shenyuInstanceRegisterRepository(final ShenyuConfig config) {",
                "type": "DELETE",
                "lineNo": 93
              },
              {
                "line": "final String registerType = config.getSdk().getRegisterType();",
                "type": "DELETE",
                "lineNo": 94
              }
            ],
            "targetChanges": [
              {
                "line": "public ShenyuInstanceRegisterRepository shenyuInstanceRegisterRepository(final RegisterConfig config) {",
                "type": "ADD",
                "lineNo": 93
              },
              {
                "line": "final String registerType = config.getRegisterType();",
                "type": "ADD",
                "lineNo": 94
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.springboot.starter.sdk.ShenyuSdkAutoConfiguration.shenyuInstanceRegisterRepository(ShenyuConfig)"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu.sdk.registerType'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.config.ShenyuConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getSdk()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getSdk()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getRegisterType()"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.springboot.starter.sdk.ShenyuSdkAutoConfiguration.shenyuInstanceRegisterRepository(RegisterConfig)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String registerType"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.getRegisterType()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "ShenyuInstanceRegisterRepository repository = ShenyuInstanceRegisterRepositoryFactory.newInstance(config.getSdk().getRegisterType());",
                "type": "DELETE",
                "lineNo": 98
              },
              {
                "line": "repository.init(config.getSdk());",
                "type": "DELETE",
                "lineNo": 99
              },
              {
                "line": "return repository;",
                "type": "DELETE",
                "lineNo": 100
              }
            ],
            "targetChanges": [
              {
                "line": "return ShenyuInstanceRegisterRepositoryFactory.newAndInitInstance(config);",
                "type": "ADD",
                "lineNo": 98
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository repository"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory.newInstance(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory.newInstance(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getSdk()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getSdk()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig$RegisterConfig.getRegisterType()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.init(RegisterConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository repository"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository.init(RegisterConfig)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getSdk()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.config.ShenyuConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.getSdk()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.ShenyuInstanceRegisterRepository repository"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory.newAndInitInstance(RegisterConfig)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.register.instance.core.ShenyuInstanceRegisterRepositoryFactory.newAndInitInstance(RegisterConfig)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig config"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "@ConditionalOnMissingBean",
                "type": "DELETE",
                "lineNo": 109
              },
              {
                "line": "@ConfigurationProperties(prefix = \"shenyu\")",
                "type": "DELETE",
                "lineNo": 110
              },
              {
                "line": "public ShenyuConfig shenyuConfig() {",
                "type": "DELETE",
                "lineNo": 111
              },
              {
                "line": "return new ShenyuConfig();",
                "type": "DELETE",
                "lineNo": 112
              }
            ],
            "targetChanges": [
              {
                "line": "@ConfigurationProperties(prefix = \"shenyu.sdk\")",
                "type": "ADD",
                "lineNo": 107
              },
              {
                "line": "public RegisterConfig shenyuConfig() {",
                "type": "ADD",
                "lineNo": 108
              },
              {
                "line": "return new RegisterConfig();",
                "type": "ADD",
                "lineNo": 109
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.springboot.starter.sdk.ShenyuSdkAutoConfiguration.shenyuConfig()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.context.properties.ConfigurationProperties"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.config.ShenyuConfig.ShenyuConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.config.ShenyuConfig"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.springboot.starter.sdk.ShenyuSdkAutoConfiguration.shenyuConfig()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.context.properties.ConfigurationProperties"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu.sdk'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig.RegisterConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.register.instance.api.config.RegisterConfig"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-spring-boot-starter/shenyu-spring-boot-starter-sync-data-center/shenyu-spring-boot-starter-sync-data-http/src/main/java/org/apache/shenyu/springboot/starter/sync/data/http/HttpSyncDataConfiguration.java",
        "aPath": "shenyu-spring-boot-starter/shenyu-spring-boot-starter-sync-data-center/shenyu-spring-boot-starter-sync-data-http/src/main/java/org/apache/shenyu/springboot/starter/sync/data/http/HttpSyncDataConfiguration.java",
        "name": "org.apache.shenyu.springboot.starter.sync.data.http.HttpSyncDataConfiguration",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@EnableConfigurationProperties(value = HttpConfig.class)",
                "type": "DELETE",
                "lineNo": 49
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.context.properties.EnableConfigurationProperties"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "* Http config http config.",
                "type": "ADD",
                "lineNo": 54
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 55
              },
              {
                "line": "* @return the http config",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 57
              },
              {
                "line": "@Bean",
                "type": "ADD",
                "lineNo": 58
              },
              {
                "line": "@ConfigurationProperties(prefix = \"shenyu.sync.http\")",
                "type": "ADD",
                "lineNo": 59
              },
              {
                "line": "public HttpConfig httpConfig() {",
                "type": "ADD",
                "lineNo": 60
              },
              {
                "line": "return new HttpConfig();",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 64
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.springboot.starter.sync.data.http.HttpSyncDataConfiguration.httpConfig()"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.context.annotation.Bean"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.context.properties.ConfigurationProperties"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu.sync.http'"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.sync.data.http.config.HttpConfig"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.sync.data.http.config.HttpConfig.HttpConfig()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.sync.data.http.config.HttpConfig"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* @param httpConfig   the http config.",
                "type": "DELETE",
                "lineNo": 72
              }
            ],
            "targetChanges": [
              {
                "line": "* @param httpConfig the http config.",
                "type": "ADD",
                "lineNo": 82
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* @param httpConfig         the http config",
                "type": "DELETE",
                "lineNo": 84
              },
              {
                "line": "* @param pluginSubscriber   the plugin subscriber",
                "type": "DELETE",
                "lineNo": 85
              },
              {
                "line": "* @param restTemplate       the rest template",
                "type": "DELETE",
                "lineNo": 86
              },
              {
                "line": "* @param metaSubscribers    the meta subscribers",
                "type": "DELETE",
                "lineNo": 87
              },
              {
                "line": "* @param authSubscribers    the auth subscribers",
                "type": "DELETE",
                "lineNo": 88
              }
            ],
            "targetChanges": [
              {
                "line": "* @param httpConfig the http config",
                "type": "ADD",
                "lineNo": 94
              },
              {
                "line": "* @param pluginSubscriber the plugin subscriber",
                "type": "ADD",
                "lineNo": 95
              },
              {
                "line": "* @param restTemplate the rest template",
                "type": "ADD",
                "lineNo": 96
              },
              {
                "line": "* @param metaSubscribers the meta subscribers",
                "type": "ADD",
                "lineNo": 97
              },
              {
                "line": "* @param authSubscribers the auth subscribers",
                "type": "ADD",
                "lineNo": 98
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-sync-data-center/shenyu-sync-data-http/src/main/java/org/apache/shenyu/sync/data/http/config/HttpConfig.java",
        "aPath": "shenyu-sync-data-center/shenyu-sync-data-http/src/main/java/org/apache/shenyu/sync/data/http/config/HttpConfig.java",
        "name": "org.apache.shenyu.sync.data.http.config.HttpConfig",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@ConfigurationProperties(prefix = \"shenyu.sync.http\")",
                "type": "DELETE",
                "lineNo": 27
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "org.springframework.boot.context.properties.ConfigurationProperties"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu.sync.http'"
              }
            ],
            "targetElements": []
          }
        ],
        "is_test_source": false
      }
    ]
  },
  {
    "bCommit": "82ddd2757",
    "aCommit": "4441f48ad",
    "changes": [
      {
        "bPath": "shenyu-plugin/shenyu-plugin-api/src/main/java/org/apache/shenyu/plugin/api/result/ShenyuResultWrap.java",
        "aPath": "shenyu-plugin/shenyu-plugin-api/src/main/java/org/apache/shenyu/plugin/api/result/ShenyuResultWrap.java",
        "name": "org.apache.shenyu.plugin.api.result.ShenyuResultWrap",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "private ShenyuResultWrap() {",
                "type": "ADD",
                "lineNo": 28
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 29
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultWrap.ShenyuResultWrap()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-api/src/main/java/org/apache/shenyu/plugin/api/utils/BodyParamUtils.java",
        "aPath": "shenyu-plugin/shenyu-plugin-api/src/main/java/org/apache/shenyu/plugin/api/utils/BodyParamUtils.java",
        "name": "org.apache.shenyu.plugin.api.utils.BodyParamUtils",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class BodyParamUtils {",
                "type": "DELETE",
                "lineNo": 40
              }
            ],
            "targetChanges": [
              {
                "line": "public final class BodyParamUtils {",
                "type": "ADD",
                "lineNo": 40
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.api.utils.BodyParamUtils"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.api.utils.BodyParamUtils"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private BodyParamUtils() {",
                "type": "ADD",
                "lineNo": 44
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 45
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.api.utils.BodyParamUtils.BodyParamUtils()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-api/src/main/java/org/apache/shenyu/plugin/api/utils/WebFluxResultUtils.java",
        "aPath": "shenyu-plugin/shenyu-plugin-api/src/main/java/org/apache/shenyu/plugin/api/utils/WebFluxResultUtils.java",
        "name": "org.apache.shenyu.plugin.api.utils.WebFluxResultUtils",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "private WebFluxResultUtils() {",
                "type": "ADD",
                "lineNo": 43
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 44
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.api.utils.WebFluxResultUtils.WebFluxResultUtils()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/main/java/org/apache/shenyu/plugin/base/condition/data/ParameterDataFactory.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/main/java/org/apache/shenyu/plugin/base/condition/data/ParameterDataFactory.java",
        "name": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class ParameterDataFactory {",
                "type": "DELETE",
                "lineNo": 26
              }
            ],
            "targetChanges": [
              {
                "line": "public final class ParameterDataFactory {",
                "type": "ADD",
                "lineNo": 26
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private ParameterDataFactory() {",
                "type": "ADD",
                "lineNo": 28
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 29
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.ParameterDataFactory()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/main/java/org/apache/shenyu/plugin/base/condition/judge/PredicateJudgeFactory.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/main/java/org/apache/shenyu/plugin/base/condition/judge/PredicateJudgeFactory.java",
        "name": "org.apache.shenyu.plugin.base.condition.judge.PredicateJudgeFactory",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class PredicateJudgeFactory {",
                "type": "DELETE",
                "lineNo": 30
              }
            ],
            "targetChanges": [
              {
                "line": "public final class PredicateJudgeFactory {",
                "type": "ADD",
                "lineNo": 30
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.base.condition.judge.PredicateJudgeFactory"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.base.condition.judge.PredicateJudgeFactory"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private PredicateJudgeFactory() {",
                "type": "ADD",
                "lineNo": 32
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 33
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.base.condition.judge.PredicateJudgeFactory.PredicateJudgeFactory()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/main/java/org/apache/shenyu/plugin/base/condition/strategy/MatchStrategyFactory.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/main/java/org/apache/shenyu/plugin/base/condition/strategy/MatchStrategyFactory.java",
        "name": "org.apache.shenyu.plugin.base.condition.strategy.MatchStrategyFactory",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class MatchStrategyFactory {",
                "type": "DELETE",
                "lineNo": 30
              }
            ],
            "targetChanges": [
              {
                "line": "public final class MatchStrategyFactory {",
                "type": "ADD",
                "lineNo": 30
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.base.condition.strategy.MatchStrategyFactory"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.base.condition.strategy.MatchStrategyFactory"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private MatchStrategyFactory() {",
                "type": "ADD",
                "lineNo": 32
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 33
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.base.condition.strategy.MatchStrategyFactory.MatchStrategyFactory()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/condition/data/ParameterDataFactoryTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/condition/data/ParameterDataFactoryTest.java",
        "name": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactoryTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "@SuppressWarnings(\"rawtypes\")",
                "type": "DELETE",
                "lineNo": 49
              },
              {
                "line": "Map<String, Class> parameterInstance = new HashMap<>();",
                "type": "DELETE",
                "lineNo": 50
              }
            ],
            "targetChanges": [
              {
                "line": "Map<String, Class<?>> parameterInstance = new HashMap<>();",
                "type": "ADD",
                "lineNo": 49
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Map parameterInstance"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.SuppressWarnings"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'rawtypes'"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Class"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.HashMap.HashMap()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.HashMap"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.util.Map parameterInstance"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.Map"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Class"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.HashMap.HashMap()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.HashMap"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(ParameterDataFactory.builderData(\"header\", \"shenyu\", exchange), \"shenyuHeader\");",
                "type": "DELETE",
                "lineNo": 69
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"shenyuHeader\", ParameterDataFactory.builderData(\"header\", \"shenyu\", exchange));",
                "type": "ADD",
                "lineNo": 68
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'header'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyuHeader'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyuHeader'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'header'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'shenyu'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(ParameterDataFactory.builderData(\"cookie\", \"cookie-name\", exchange), \"cookie-value\");",
                "type": "DELETE",
                "lineNo": 78
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"cookie-value\", ParameterDataFactory.builderData(\"cookie\", \"cookie-name\", exchange));",
                "type": "ADD",
                "lineNo": 77
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'cookie'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'cookie-name'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'cookie-value'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'cookie-value'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'cookie'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'cookie-name'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(ParameterDataFactory.builderData(\"host\", null, exchange), \"localhost\");",
                "type": "DELETE",
                "lineNo": 92
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"localhost\", ParameterDataFactory.builderData(\"host\", null, exchange));",
                "type": "ADD",
                "lineNo": 91
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'host'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'localhost'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'localhost'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'host'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(ParameterDataFactory.builderData(\"ip\", null, exchange), \"127.0.0.1\");",
                "type": "DELETE",
                "lineNo": 106
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"127.0.0.1\", ParameterDataFactory.builderData(\"ip\", null, exchange));",
                "type": "ADD",
                "lineNo": 105
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ip'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '127.0.0.1'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ip'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(ParameterDataFactory.builderData(\"uri\", null, exchange), \"/uri/path\");",
                "type": "DELETE",
                "lineNo": 114
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"/uri/path\", ParameterDataFactory.builderData(\"uri\", null, exchange));",
                "type": "ADD",
                "lineNo": 113
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'uri'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/uri/path'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/uri/path'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'uri'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(ParameterDataFactory.builderData(\"query\", \"key\", exchange), \"value\");",
                "type": "DELETE",
                "lineNo": 123
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"value\", ParameterDataFactory.builderData(\"query\", \"key\", exchange));",
                "type": "ADD",
                "lineNo": 122
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'query'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'key'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'value'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'value'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'query'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'key'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(ParameterDataFactory.builderData(\"post\", \"httpMethod\", exchange), \"post\");",
                "type": "DELETE",
                "lineNo": 136
              },
              {
                "line": "Assert.assertEquals(ParameterDataFactory.builderData(\"post\", \"rpcType\", exchange), \"http\");",
                "type": "DELETE",
                "lineNo": 137
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"post\", ParameterDataFactory.builderData(\"post\", \"httpMethod\", exchange));",
                "type": "ADD",
                "lineNo": 135
              },
              {
                "line": "Assert.assertEquals(\"http\", ParameterDataFactory.builderData(\"post\", \"rpcType\", exchange));",
                "type": "ADD",
                "lineNo": 136
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'post'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'httpMethod'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'post'"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'post'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'rpcType'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'post'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'post'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'httpMethod'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'post'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'rpcType'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(ParameterDataFactory.builderData(\"req_method\", null, exchange), \"GET\");",
                "type": "DELETE",
                "lineNo": 146
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"GET\", ParameterDataFactory.builderData(\"req_method\", null, exchange));",
                "type": "ADD",
                "lineNo": 145
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'req_method'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'GET'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'GET'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.ParameterDataFactory.builderData(String,String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'req_method'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/condition/data/PostParameterDataTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/condition/data/PostParameterDataTest.java",
        "name": "org.apache.shenyu.plugin.base.condition.data.PostParameterDataTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(this.postParameterData.builder(\"httpMethod\", this.exchange), \"post\");",
                "type": "DELETE",
                "lineNo": 56
              },
              {
                "line": "Assert.assertEquals(this.postParameterData.builder(\"rpcType\", this.exchange), \"http\");",
                "type": "DELETE",
                "lineNo": 57
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"post\", this.postParameterData.builder(\"httpMethod\", this.exchange));",
                "type": "ADD",
                "lineNo": 56
              },
              {
                "line": "Assert.assertEquals(\"http\", this.postParameterData.builder(\"rpcType\", this.exchange));",
                "type": "ADD",
                "lineNo": 57
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.PostParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.base.condition.data.PostParameterData postParameterData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.PostParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'httpMethod'"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'post'"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.PostParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.base.condition.data.PostParameterData postParameterData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.PostParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'rpcType'"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'post'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.PostParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.base.condition.data.PostParameterData postParameterData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.PostParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'httpMethod'"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.PostParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.base.condition.data.PostParameterData postParameterData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.PostParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'rpcType'"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/condition/data/QueryParameterDataTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/condition/data/QueryParameterDataTest.java",
        "name": "org.apache.shenyu.plugin.base.condition.data.QueryParameterDataTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(this.queryParameterData.builder(\"key\", this.exchange), \"value\");",
                "type": "DELETE",
                "lineNo": 49
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"value\", this.queryParameterData.builder(\"key\", this.exchange));",
                "type": "ADD",
                "lineNo": 49
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.QueryParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.base.condition.data.QueryParameterData queryParameterData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.QueryParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'key'"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'value'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'value'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.QueryParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.base.condition.data.QueryParameterData queryParameterData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.QueryParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'key'"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/condition/data/RequestMethodParameterDataTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/condition/data/RequestMethodParameterDataTest.java",
        "name": "org.apache.shenyu.plugin.base.condition.data.RequestMethodParameterDataTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(this.requestMethodParameterData.builder(null, this.exchange), \"GET\");",
                "type": "DELETE",
                "lineNo": 48
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"GET\", this.requestMethodParameterData.builder(null, this.exchange));",
                "type": "ADD",
                "lineNo": 48
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.RequestMethodParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.base.condition.data.RequestMethodParameterData requestMethodParameterData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.RequestMethodParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'GET'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'GET'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.RequestMethodParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.base.condition.data.RequestMethodParameterData requestMethodParameterData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.RequestMethodParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/condition/data/URIParameterDataTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/condition/data/URIParameterDataTest.java",
        "name": "org.apache.shenyu.plugin.base.condition.data.URIParameterDataTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(uriParameterData.builder(null, exchange), \"/uri/path\");",
                "type": "DELETE",
                "lineNo": 49
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"/uri/path\", uriParameterData.builder(null, exchange));",
                "type": "ADD",
                "lineNo": 49
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.URIParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.base.condition.data.URIParameterData uriParameterData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.URIParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/uri/path'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/uri/path'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.condition.data.URIParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.base.condition.data.URIParameterData uriParameterData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.condition.data.URIParameterData.builder(String,ServerWebExchange)"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/utils/HostAddressUtilsTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/utils/HostAddressUtilsTest.java",
        "name": "org.apache.shenyu.plugin.base.utils.HostAddressUtilsTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(HostAddressUtils.acquireHost(exchange), \"0.0.0.0\");",
                "type": "DELETE",
                "lineNo": 62
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"0.0.0.0\", HostAddressUtils.acquireHost(exchange));",
                "type": "ADD",
                "lineNo": 62
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.utils.HostAddressUtils.acquireHost(ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.HostAddressUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.utils.HostAddressUtils.acquireHost(ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '0.0.0.0'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '0.0.0.0'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.utils.HostAddressUtils.acquireHost(ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.HostAddressUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.utils.HostAddressUtils.acquireHost(ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(HostAddressUtils.acquireIp(exchange), \"0.0.0.0\");",
                "type": "DELETE",
                "lineNo": 70
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"0.0.0.0\", HostAddressUtils.acquireIp(exchange));",
                "type": "ADD",
                "lineNo": 70
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.utils.HostAddressUtils.acquireIp(ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.HostAddressUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.utils.HostAddressUtils.acquireIp(ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '0.0.0.0'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '0.0.0.0'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.utils.HostAddressUtils.acquireIp(ServerWebExchange)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.base.utils.HostAddressUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.utils.HostAddressUtils.acquireIp(ServerWebExchange)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/utils/ShenyuResultWrapTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/utils/ShenyuResultWrapTest.java",
        "name": "org.apache.shenyu.plugin.base.utils.ShenyuResultWrapTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(shenyuResult.getCode(), result);",
                "type": "DELETE",
                "lineNo": 67
              },
              {
                "line": "Assert.assertEquals(shenyuResult.getMessage(), \"error\");",
                "type": "DELETE",
                "lineNo": 68
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(result, shenyuResult.getCode());",
                "type": "ADD",
                "lineNo": 67
              },
              {
                "line": "Assert.assertEquals(\"error\", shenyuResult.getMessage());",
                "type": "ADD",
                "lineNo": 68
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.Integer,java.lang.Integer)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.Integer,java.lang.Integer)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.result.DefaultShenyuEntity.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.result.DefaultShenyuEntity shenyuResult"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.result.DefaultShenyuEntity.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer result"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.result.DefaultShenyuEntity.getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.result.DefaultShenyuEntity shenyuResult"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.result.DefaultShenyuEntity.getMessage()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'error'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.Integer,java.lang.Integer)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.Integer,java.lang.Integer)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Integer result"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.result.DefaultShenyuEntity.getCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.result.DefaultShenyuEntity shenyuResult"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.result.DefaultShenyuEntity.getCode()"
              },
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'error'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.result.DefaultShenyuEntity.getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.result.DefaultShenyuEntity shenyuResult"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.result.DefaultShenyuEntity.getMessage()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/utils/UriUtilsTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-base/src/test/java/org/apache/shenyu/plugin/base/utils/UriUtilsTest.java",
        "name": "org.apache.shenyu.plugin.base.utils.UriUtilsTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(Objects.requireNonNull(uri).getPath(), \"/SHENYU/TEST\");",
                "type": "DELETE",
                "lineNo": 38
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"/SHENYU/TEST\", Objects.requireNonNull(uri).getPath());",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URI.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.requireNonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.requireNonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.net.URI uri"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URI.getPath()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/SHENYU/TEST'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/SHENYU/TEST'"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URI.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.requireNonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.requireNonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.net.URI uri"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URI.getPath()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-context-path/src/main/java/org/apache/shenyu/plugin/context/path/ContextPathPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-context-path/src/main/java/org/apache/shenyu/plugin/context/path/ContextPathPlugin.java",
        "name": "org.apache.shenyu.plugin.context.path.ContextPathPlugin",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "if (StringUtils.isNoneBlank(contextPath)) {",
                "type": "DELETE",
                "lineNo": 59
              },
              {
                "line": "if (!shenyuContext.getPath().startsWith(contextPath)) {",
                "type": "DELETE",
                "lineNo": 60
              },
              {
                "line": "LOG.error(\"the context path '{}' is invalid.\", contextPath);",
                "type": "DELETE",
                "lineNo": 61
              },
              {
                "line": "Object error = ShenyuResultWrap.error(ShenyuResultEnum.CONTEXT_PATH_ERROR.getCode(),",
                "type": "DELETE",
                "lineNo": 62
              },
              {
                "line": "String.format(\"%s [invalid context path:'%s']\", ShenyuResultEnum.CONTEXT_PATH_ERROR.getMsg(), contextPath), null);",
                "type": "DELETE",
                "lineNo": 63
              },
              {
                "line": "return WebFluxResultUtils.result(exchange, error);",
                "type": "DELETE",
                "lineNo": 64
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 65
              }
            ],
            "targetChanges": [
              {
                "line": "if (StringUtils.isNoneBlank(contextPath) && !shenyuContext.getPath().startsWith(contextPath)) {",
                "type": "ADD",
                "lineNo": 59
              },
              {
                "line": "LOG.error(\"the context path '{}' is invalid.\", contextPath);",
                "type": "ADD",
                "lineNo": 60
              },
              {
                "line": "Object error = ShenyuResultWrap.error(ShenyuResultEnum.CONTEXT_PATH_ERROR.getCode(),",
                "type": "ADD",
                "lineNo": 61
              },
              {
                "line": "String.format(\"%s [invalid context path:'%s']\", ShenyuResultEnum.CONTEXT_PATH_ERROR.getMsg(), contextPath), null);",
                "type": "ADD",
                "lineNo": 62
              },
              {
                "line": "return WebFluxResultUtils.result(exchange, error);",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.startsWith(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getPath()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.startsWith(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'the context path '{}' is invalid.'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Object error"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultWrap.error(int,String,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultWrap"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultWrap.error(int,String,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum.getCode()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum CONTEXT_PATH_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum CONTEXT_PATH_ERROR"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum.getCode()"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '%s [invalid context path:'%s']'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum.getMsg()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum CONTEXT_PATH_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum CONTEXT_PATH_ERROR"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum.getMsg()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.utils.WebFluxResultUtils.result(ServerWebExchange,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.api.utils.WebFluxResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.utils.WebFluxResultUtils.result(ServerWebExchange,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object error"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[])"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.startsWith(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getPath()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.startsWith(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'the context path '{}' is invalid.'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Object error"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Object"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultWrap.error(int,String,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultWrap"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultWrap.error(int,String,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum.getCode()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum CONTEXT_PATH_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum CONTEXT_PATH_ERROR"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum.getCode()"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.format(String,Object[])"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '%s [invalid context path:'%s']'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum.getMsg()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum CONTEXT_PATH_ERROR"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum"
              },
              {
                "type": "CtFieldReference",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum CONTEXT_PATH_ERROR"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.result.ShenyuResultEnum.getMsg()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String contextPath"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.utils.WebFluxResultUtils.result(ServerWebExchange,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.api.utils.WebFluxResultUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.utils.WebFluxResultUtils.result(ServerWebExchange,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Object error"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-context-path/src/test/java/org/apache/shenyu/plugin/context/path/ContextPathPluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-context-path/src/test/java/org/apache/shenyu/plugin/context/path/ContextPathPluginTest.java",
        "name": "org.apache.shenyu.plugin.context.path.ContextPathPluginTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(shenyuContext.getRealUrl(), \"/order/findById\");",
                "type": "DELETE",
                "lineNo": 90
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(\"/order/findById\", shenyuContext.getRealUrl());",
                "type": "ADD",
                "lineNo": 90
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRealUrl()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRealUrl()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/order/findById'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/order/findById'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRealUrl()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext shenyuContext"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.context.ShenyuContext.getRealUrl()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/request/CryptorRequestPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/request/CryptorRequestPlugin.java",
        "name": "org.apache.shenyu.plugin.cryptor.request.CryptorRequestPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (pair.getLeft()) {",
                "type": "DELETE",
                "lineNo": 73
              }
            ],
            "targetChanges": [
              {
                "line": "if (Boolean.TRUE.equals(pair.getLeft())) {",
                "type": "ADD",
                "lineNo": 73
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/response/CryptorResponsePlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/response/CryptorResponsePlugin.java",
        "name": "org.apache.shenyu.plugin.cryptor.response.CryptorResponsePlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (pair.getLeft()) {",
                "type": "DELETE",
                "lineNo": 56
              }
            ],
            "targetChanges": [
              {
                "line": "if (Boolean.TRUE.equals(pair.getLeft())) {",
                "type": "ADD",
                "lineNo": 56
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/strategy/CryptorStrategyFactory.java",
        "aPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/strategy/CryptorStrategyFactory.java",
        "name": "org.apache.shenyu.plugin.cryptor.strategy.CryptorStrategyFactory",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class CryptorStrategyFactory {",
                "type": "DELETE",
                "lineNo": 30
              }
            ],
            "targetChanges": [
              {
                "line": "public final class CryptorStrategyFactory {",
                "type": "ADD",
                "lineNo": 30
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.cryptor.strategy.CryptorStrategyFactory"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.cryptor.strategy.CryptorStrategyFactory"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private CryptorStrategyFactory() {",
                "type": "ADD",
                "lineNo": 38
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 39
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.cryptor.strategy.CryptorStrategyFactory.CryptorStrategyFactory()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/utils/CryptorUtil.java",
        "aPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/utils/CryptorUtil.java",
        "name": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class CryptorUtil {",
                "type": "DELETE",
                "lineNo": 36
              }
            ],
            "targetChanges": [
              {
                "line": "public final class CryptorUtil {",
                "type": "ADD",
                "lineNo": 36
              },
              {
                "line": "private CryptorUtil() {",
                "type": "ADD",
                "lineNo": 38
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 39
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.cryptor.utils.CryptorUtil.CryptorUtil()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/utils/JsonUtil.java",
        "aPath": "shenyu-plugin/shenyu-plugin-cryptor/src/main/java/org/apache/shenyu/plugin/cryptor/utils/JsonUtil.java",
        "name": "org.apache.shenyu.plugin.cryptor.utils.JsonUtil",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class JsonUtil {",
                "type": "DELETE",
                "lineNo": 35
              }
            ],
            "targetChanges": [
              {
                "line": "public final class JsonUtil {",
                "type": "ADD",
                "lineNo": 36
              },
              {
                "line": "private JsonUtil() {",
                "type": "ADD",
                "lineNo": 38
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 39
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.cryptor.utils.JsonUtil"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.cryptor.utils.JsonUtil"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.cryptor.utils.JsonUtil.JsonUtil()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (deepKey.size() == 0) {",
                "type": "DELETE",
                "lineNo": 90
              }
            ],
            "targetChanges": [
              {
                "line": "if (CollectionUtils.isEmpty(deepKey)) {",
                "type": "ADD",
                "lineNo": 94
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List deepKey"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "isEmpty(java.util.List)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.util.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "isEmpty(java.util.List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List deepKey"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-alibaba-dubbo/src/main/java/org/apache/shenyu/plugin/alibaba/dubbo/cache/AlibabaDubboConfigCache.java",
        "aPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-alibaba-dubbo/src/main/java/org/apache/shenyu/plugin/alibaba/dubbo/cache/AlibabaDubboConfigCache.java",
        "name": "org.apache.shenyu.plugin.alibaba.dubbo.cache.AlibabaDubboConfigCache",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "if (config != null) {",
                "type": "DELETE",
                "lineNo": 61
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.nonNull(config)) {",
                "type": "ADD",
                "lineNo": 62
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.dubbo.config.ReferenceConfig config"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.dubbo.config.ReferenceConfig config"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Class<?> cz = config.getClass();",
                "type": "DELETE",
                "lineNo": 63
              },
              {
                "line": "Field field = cz.getDeclaredField(\"ref\");",
                "type": "DELETE",
                "lineNo": 64
              },
              {
                "line": "field.setAccessible(true);",
                "type": "DELETE",
                "lineNo": 65
              }
            ],
            "targetChanges": [
              {
                "line": "Field field = FieldUtils.getDeclaredField(config.getClass(), \"ref\", true);",
                "type": "ADD",
                "lineNo": 64
              },
              {
                "line": "field.set(config, null);",
                "type": "ADD",
                "lineNo": 65
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Class cz"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Class"
              },
              {
                "type": "CtInvocation",
                "value": "getClass()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.dubbo.config.ReferenceConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "getClass()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.Field"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Class.getDeclaredField(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Class cz"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.getDeclaredField(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ref'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Field.setAccessible(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Field.setAccessible(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.Field"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class,String,boolean)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.reflect.FieldUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "getClass()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.dubbo.config.ReferenceConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "getClass()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ref'"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Field.set(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Field.set(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.dubbo.config.ReferenceConfig config"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "field.set(config, null);",
                "type": "DELETE",
                "lineNo": 68
              },
              {
                "line": "} catch (NoSuchFieldException | IllegalAccessException e) {",
                "type": "DELETE",
                "lineNo": 69
              }
            ],
            "targetChanges": [
              {
                "line": "} catch (NullPointerException | IllegalAccessException e) {",
                "type": "ADD",
                "lineNo": 68
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Field.set(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Field.set(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "com.alibaba.dubbo.config.ReferenceConfig config"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtCatchVariable",
                "value": "java.lang.NoSuchFieldException | java.lang.IllegalAccessException e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NoSuchFieldException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.IllegalAccessException"
              }
            ],
            "targetElements": [
              {
                "type": "CtCatchVariable",
                "value": "java.lang.NullPointerException | java.lang.IllegalAccessException e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NullPointerException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.IllegalAccessException"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "static class ApplicationConfigCacheInstance {",
                "type": "DELETE",
                "lineNo": 226
              }
            ],
            "targetChanges": [
              {
                "line": "static final class ApplicationConfigCacheInstance {",
                "type": "ADD",
                "lineNo": 225
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.cache.AlibabaDubboConfigCache$ApplicationConfigCacheInstance"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.cache.AlibabaDubboConfigCache$ApplicationConfigCacheInstance"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private ApplicationConfigCacheInstance() {",
                "type": "ADD",
                "lineNo": 231
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 233
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.alibaba.dubbo.cache.AlibabaDubboConfigCache$ApplicationConfigCacheInstance.ApplicationConfigCacheInstance()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/cache/ApacheDubboConfigCache.java",
        "aPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-apache-dubbo/src/main/java/org/apache/shenyu/plugin/apache/dubbo/cache/ApacheDubboConfigCache.java",
        "name": "org.apache.shenyu.plugin.apache.dubbo.cache.ApacheDubboConfigCache",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "if (config != null) {",
                "type": "DELETE",
                "lineNo": 62
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.nonNull(config)) {",
                "type": "ADD",
                "lineNo": 63
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig config"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig config"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Class<?> cz = config.getClass();",
                "type": "DELETE",
                "lineNo": 64
              },
              {
                "line": "Field field = cz.getDeclaredField(\"ref\");",
                "type": "DELETE",
                "lineNo": 65
              },
              {
                "line": "field.setAccessible(true);",
                "type": "DELETE",
                "lineNo": 66
              }
            ],
            "targetChanges": [
              {
                "line": "Field field = FieldUtils.getDeclaredField(config.getClass(), \"ref\", true);",
                "type": "ADD",
                "lineNo": 65
              },
              {
                "line": "field.set(config, null);",
                "type": "ADD",
                "lineNo": 66
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Class cz"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Class"
              },
              {
                "type": "CtInvocation",
                "value": "getClass()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "getClass()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.Field"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Class.getDeclaredField(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Class cz"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.getDeclaredField(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ref'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Field.setAccessible(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Field.setAccessible(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.Field"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class,String,boolean)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.reflect.FieldUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "getClass()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "getClass()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ref'"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Field.set(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Field.set(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig config"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "field.set(config, null);",
                "type": "DELETE",
                "lineNo": 69
              },
              {
                "line": "} catch (NoSuchFieldException | IllegalAccessException e) {",
                "type": "DELETE",
                "lineNo": 70
              }
            ],
            "targetChanges": [
              {
                "line": "} catch (NullPointerException | IllegalAccessException e) {",
                "type": "ADD",
                "lineNo": 69
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Field.set(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Field.set(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.dubbo.config.ReferenceConfig config"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtCatchVariable",
                "value": "java.lang.NoSuchFieldException | java.lang.IllegalAccessException e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NoSuchFieldException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.IllegalAccessException"
              }
            ],
            "targetElements": [
              {
                "type": "CtCatchVariable",
                "value": "java.lang.NullPointerException | java.lang.IllegalAccessException e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NullPointerException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.IllegalAccessException"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "static class ApplicationConfigCacheInstance {",
                "type": "DELETE",
                "lineNo": 227
              }
            ],
            "targetChanges": [
              {
                "line": "static final class ApplicationConfigCacheInstance {",
                "type": "ADD",
                "lineNo": 226
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApacheDubboConfigCache$ApplicationConfigCacheInstance"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApacheDubboConfigCache$ApplicationConfigCacheInstance"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private ApplicationConfigCacheInstance() {",
                "type": "ADD",
                "lineNo": 232
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 234
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.apache.dubbo.cache.ApacheDubboConfigCache$ApplicationConfigCacheInstance.ApplicationConfigCacheInstance()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-dubbo-common/src/main/java/org/apache/shenyu/plugin/dubbo/common/handler/AbstractDubboPluginDataHandler.java",
        "aPath": "shenyu-plugin/shenyu-plugin-dubbo/shenyu-plugin-dubbo-common/src/main/java/org/apache/shenyu/plugin/dubbo/common/handler/AbstractDubboPluginDataHandler.java",
        "name": "org.apache.shenyu.plugin.dubbo.common.handler.AbstractDubboPluginDataHandler",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (Objects.nonNull(pluginData) && pluginData.getEnabled()) {",
                "type": "DELETE",
                "lineNo": 56
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.nonNull(pluginData) && Boolean.TRUE.equals(pluginData.getEnabled())) {",
                "type": "ADD",
                "lineNo": 56
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData.getEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData.getEnabled()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData.getEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData.getEnabled()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (StringUtils.isNotBlank(each.getUpstreamUrl()) && Objects.nonNull(each.isGray()) && each.isGray()) {",
                "type": "DELETE",
                "lineNo": 78
              }
            ],
            "targetChanges": [
              {
                "line": "if (StringUtils.isNotBlank(each.getUpstreamUrl()) && Objects.nonNull(each.isGray()) && Boolean.TRUE.equals(each.isGray())) {",
                "type": "ADD",
                "lineNo": 78
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream each"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.isGray()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream each"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.isGray()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.isGray()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream each"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.isGray()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream each"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.CommonUpstream.getUpstreamUrl()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.isGray()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream each"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.isGray()"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.isGray()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream each"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.DubboUpstream.isGray()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-global/src/main/java/org/apache/shenyu/plugin/global/DefaultShenyuContextBuilder.java",
        "aPath": "shenyu-plugin/shenyu-plugin-global/src/main/java/org/apache/shenyu/plugin/global/DefaultShenyuContextBuilder.java",
        "name": "org.apache.shenyu.plugin.global.DefaultShenyuContextBuilder",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (Objects.nonNull(metaData) && metaData.getEnabled()) {",
                "type": "DELETE",
                "lineNo": 69
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.nonNull(metaData) && Boolean.TRUE.equals(metaData.getEnabled())) {",
                "type": "ADD",
                "lineNo": 69
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getEnabled()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getEnabled()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-global/src/test/java/org/apache/shenyu/plugin/global/GlobalPluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-global/src/test/java/org/apache/shenyu/plugin/global/GlobalPluginTest.java",
        "name": "org.apache.shenyu.plugin.global.GlobalPluginTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertEquals(globalPlugin.getOrder(), 10);",
                "type": "DELETE",
                "lineNo": 85
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(10, globalPlugin.getOrder());",
                "type": "ADD",
                "lineNo": 85
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.global.GlobalPlugin.getOrder()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.global.GlobalPlugin globalPlugin"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.global.GlobalPlugin.getOrder()"
              },
              {
                "type": "CtLiteral",
                "value": "int '10'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(int,int)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(int,int)"
              },
              {
                "type": "CtLiteral",
                "value": "int '10'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.global.GlobalPlugin.getOrder()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.global.GlobalPlugin globalPlugin"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.global.GlobalPlugin.getOrder()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-global/src/test/java/org/apache/shenyu/plugin/global/cache/MetaDataCacheTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-global/src/test/java/org/apache/shenyu/plugin/global/cache/MetaDataCacheTest.java",
        "name": "org.apache.shenyu.plugin.global.cache.MetaDataCacheTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertEquals(metaDataCache.obtain(\"/home\").getPath(), \"/home\");",
                "type": "DELETE",
                "lineNo": 54
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(\"/home\", metaDataCache.obtain(\"/home\").getPath());",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.global.cache.MetaDataCache.obtain(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.global.cache.MetaDataCache metaDataCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.global.cache.MetaDataCache.obtain(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/home'"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/home'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/home'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.global.cache.MetaDataCache.obtain(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.global.cache.MetaDataCache metaDataCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.global.cache.MetaDataCache.obtain(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String '/home'"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/resolver/ShenyuNameResolver.java",
        "aPath": "shenyu-plugin/shenyu-plugin-grpc/src/main/java/org/apache/shenyu/plugin/grpc/resolver/ShenyuNameResolver.java",
        "name": "org.apache.shenyu.plugin.grpc.resolver.ShenyuNameResolver",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private final List<ShenyuServiceInstance> keep = null;",
                "type": "DELETE",
                "lineNo": 62
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "java.util.List keep"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.grpc.resolver.ShenyuServiceInstance"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "if (newInstanceList != keep && ShenyuNameResolver.this.listener != null) {",
                "type": "DELETE",
                "lineNo": 149
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.nonNull(newInstanceList) && ShenyuNameResolver.this.listener != null) {",
                "type": "ADD",
                "lineNo": 147
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "List newInstanceList"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "List newInstanceList"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.grpc.resolver.keep"
              },
              {
                "type": "CtFieldRead",
                "value": "<unknown> listener"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.grpc.resolver.ShenyuNameResolver"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.grpc.resolver.ShenyuNameResolver"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "nonNull()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "nonNull()"
              },
              {
                "type": "CtVariableRead",
                "value": "List newInstanceList"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "List newInstanceList"
              },
              {
                "type": "CtFieldRead",
                "value": "<unknown> listener"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.grpc.resolver.ShenyuNameResolver"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.grpc.resolver.ShenyuNameResolver"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-hystrix/src/main/java/org/apache/shenyu/plugin/hystrix/builder/HystrixBuilder.java",
        "aPath": "shenyu-plugin/shenyu-plugin-hystrix/src/main/java/org/apache/shenyu/plugin/hystrix/builder/HystrixBuilder.java",
        "name": "org.apache.shenyu.plugin.hystrix.builder.HystrixBuilder",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class HystrixBuilder {",
                "type": "DELETE",
                "lineNo": 35
              }
            ],
            "targetChanges": [
              {
                "line": "public final class HystrixBuilder {",
                "type": "ADD",
                "lineNo": 35
              },
              {
                "line": "private HystrixBuilder() {",
                "type": "ADD",
                "lineNo": 37
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.hystrix.builder.HystrixBuilder"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.hystrix.builder.HystrixBuilder"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.hystrix.builder.HystrixBuilder.HystrixBuilder()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-hystrix/src/test/java/org/apache/shenyu/plugin/hystrix/command/HystrixCommandOnThreadTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-hystrix/src/test/java/org/apache/shenyu/plugin/hystrix/command/HystrixCommandOnThreadTest.java",
        "name": "org.apache.shenyu.plugin.hystrix.command.HystrixCommandOnThreadTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertEquals(hystrixCommandOnThread.getCallBackUri().getHost(), \"callback\");",
                "type": "DELETE",
                "lineNo": 81
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(\"callback\", hystrixCommandOnThread.getCallBackUri().getHost());",
                "type": "ADD",
                "lineNo": 81
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URI.getHost()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.hystrix.command.HystrixCommandOnThread.getCallBackUri()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.hystrix.command.HystrixCommandOnThread hystrixCommandOnThread"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.hystrix.command.HystrixCommandOnThread.getCallBackUri()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URI.getHost()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'callback'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'callback'"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URI.getHost()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.hystrix.command.HystrixCommandOnThread.getCallBackUri()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.hystrix.command.HystrixCommandOnThread hystrixCommandOnThread"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.hystrix.command.HystrixCommandOnThread.getCallBackUri()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URI.getHost()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-hystrix/src/test/java/org/apache/shenyu/plugin/hystrix/command/HystrixCommandTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-hystrix/src/test/java/org/apache/shenyu/plugin/hystrix/command/HystrixCommandTest.java",
        "name": "org.apache.shenyu.plugin.hystrix.command.HystrixCommandTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertEquals(hystrixCommand.getCallBackUri().getHost(), \"callback\");",
                "type": "DELETE",
                "lineNo": 82
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(\"callback\", hystrixCommand.getCallBackUri().getHost());",
                "type": "ADD",
                "lineNo": 82
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URI.getHost()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.hystrix.command.HystrixCommand.getCallBackUri()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.hystrix.command.HystrixCommand hystrixCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.hystrix.command.HystrixCommand.getCallBackUri()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URI.getHost()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'callback'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'callback'"
              },
              {
                "type": "CtInvocation",
                "value": "java.net.URI.getHost()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.hystrix.command.HystrixCommand.getCallBackUri()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.apache.shenyu.plugin.hystrix.command.HystrixCommand hystrixCommand"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.hystrix.command.HystrixCommand.getCallBackUri()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.net.URI.getHost()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-monitor/src/main/java/org/apache/shenyu/plugin/monitor/handler/MonitorPluginDataHandler.java",
        "aPath": "shenyu-plugin/shenyu-plugin-monitor/src/main/java/org/apache/shenyu/plugin/monitor/handler/MonitorPluginDataHandler.java",
        "name": "org.apache.shenyu.plugin.monitor.handler.MonitorPluginDataHandler",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (Objects.nonNull(pluginData) && pluginData.getEnabled()) {",
                "type": "DELETE",
                "lineNo": 37
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.nonNull(pluginData) && Boolean.TRUE.equals(pluginData.getEnabled())) {",
                "type": "ADD",
                "lineNo": 37
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData.getEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData.getEnabled()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData.getEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData.getEnabled()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-motan/src/main/java/org/apache/shenyu/plugin/motan/cache/ApplicationConfigCache.java",
        "aPath": "shenyu-plugin/shenyu-plugin-motan/src/main/java/org/apache/shenyu/plugin/motan/cache/ApplicationConfigCache.java",
        "name": "org.apache.shenyu.plugin.motan.cache.ApplicationConfigCache",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "Class<?> cz = config.getClass();",
                "type": "DELETE",
                "lineNo": 68
              },
              {
                "line": "Field field = cz.getDeclaredField(\"ref\");",
                "type": "DELETE",
                "lineNo": 69
              },
              {
                "line": "field.setAccessible(true);",
                "type": "DELETE",
                "lineNo": 70
              }
            ],
            "targetChanges": [
              {
                "line": "Field field = FieldUtils.getDeclaredField(config.getClass(), \"ref\", true);",
                "type": "ADD",
                "lineNo": 70
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Class cz"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Class"
              },
              {
                "type": "CtInvocation",
                "value": "getClass()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.weibo.api.motan.config.RefererConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "getClass()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.Field"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Class.getDeclaredField(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Class cz"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.getDeclaredField(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ref'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.reflect.Field.setAccessible(boolean)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.reflect.Field.setAccessible(boolean)"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              }
            ],
            "targetElements": [
              {
                "type": "CtLocalVariable",
                "value": "java.lang.reflect.Field field"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.Field"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class,String,boolean)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.reflect.FieldUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class,String,boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "getClass()"
              },
              {
                "type": "CtVariableRead",
                "value": "com.weibo.api.motan.config.RefererConfig config"
              },
              {
                "type": "CtExecutableReference",
                "value": "getClass()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ref'"
              },
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "} catch (NoSuchFieldException | IllegalAccessException e) {",
                "type": "DELETE",
                "lineNo": 74
              }
            ],
            "targetChanges": [
              {
                "line": "} catch (NullPointerException | IllegalAccessException e) {",
                "type": "ADD",
                "lineNo": 74
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtCatchVariable",
                "value": "java.lang.NoSuchFieldException | java.lang.IllegalAccessException e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NoSuchFieldException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.IllegalAccessException"
              }
            ],
            "targetElements": [
              {
                "type": "CtCatchVariable",
                "value": "java.lang.NullPointerException | java.lang.IllegalAccessException e"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.NullPointerException"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.IllegalAccessException"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public RefererConfig<CommonHandler> load(final String key) {",
                "type": "DELETE",
                "lineNo": 81
              }
            ],
            "targetChanges": [
              {
                "line": "@NonNull",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": "public RefererConfig<CommonHandler> load(@NonNull final String key) {",
                "type": "ADD",
                "lineNo": 82
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.motan.cache.ApplicationConfigCache$1.load(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "com.weibo.api.motan.config.RefererConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "com.weibo.api.motan.proxy.CommonHandler"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String key"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.motan.cache.ApplicationConfigCache$1.load(String)"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.lang.NonNull"
              },
              {
                "type": "CtTypeReference",
                "value": "com.weibo.api.motan.config.RefererConfig"
              },
              {
                "type": "CtTypeReference",
                "value": "com.weibo.api.motan.proxy.CommonHandler"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String key"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.lang.NonNull"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "static class ApplicationConfigCacheInstance {",
                "type": "DELETE",
                "lineNo": 217
              },
              {
                "line": "//        private ApplicationConfigCacheInstance() {}",
                "type": "DELETE",
                "lineNo": 219
              }
            ],
            "targetChanges": [
              {
                "line": "static final class ApplicationConfigCacheInstance {",
                "type": "ADD",
                "lineNo": 218
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.motan.cache.ApplicationConfigCache$ApplicationConfigCacheInstance"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.motan.cache.ApplicationConfigCache$ApplicationConfigCacheInstance"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private ApplicationConfigCacheInstance() {",
                "type": "ADD",
                "lineNo": 225
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 227
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.motan.cache.ApplicationConfigCache$ApplicationConfigCacheInstance.ApplicationConfigCacheInstance()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-motan/src/main/java/org/apache/shenyu/plugin/motan/util/PrxInfoUtil.java",
        "aPath": "shenyu-plugin/shenyu-plugin-motan/src/main/java/org/apache/shenyu/plugin/motan/util/PrxInfoUtil.java",
        "name": "org.apache.shenyu.plugin.motan.util.PrxInfoUtil",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class PrxInfoUtil {",
                "type": "DELETE",
                "lineNo": 27
              }
            ],
            "targetChanges": [
              {
                "line": "public final class PrxInfoUtil {",
                "type": "ADD",
                "lineNo": 27
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.motan.util.PrxInfoUtil"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.motan.util.PrxInfoUtil"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private PrxInfoUtil() {",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 84
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.motan.util.PrxInfoUtil.PrxInfoUtil()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-oauth2/src/main/java/org/apache/shenyu/plugin/oauth2/OAuth2Plugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-oauth2/src/main/java/org/apache/shenyu/plugin/oauth2/OAuth2Plugin.java",
        "name": "org.apache.shenyu.plugin.oauth2.OAuth2Plugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "return skip ? chain.execute(exchange)",
                "type": "DELETE",
                "lineNo": 51
              }
            ],
            "targetChanges": [
              {
                "line": "return Boolean.TRUE.equals(skip) ? chain.execute(exchange)",
                "type": "ADD",
                "lineNo": 51
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "java.lang.Boolean skip"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain.execute(ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain chain"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain.execute(ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Boolean skip"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain.execute(ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain chain"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.api.ShenyuPluginChain.execute(ServerWebExchange)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": ".filter(t -> t instanceof OAuth2AuthenticationToken)",
                "type": "DELETE",
                "lineNo": 53
              }
            ],
            "targetChanges": [
              {
                "line": ".filter(OAuth2AuthenticationToken.class::isInstance)",
                "type": "ADD",
                "lineNo": 53
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtExecutableReference",
                "value": "filter()"
              },
              {
                "type": "CtParameter",
                "value": "<unknown> t"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> t"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> t"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.security.oauth2.client.authentication.OAuth2AuthenticationToken"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.security.oauth2.client.authentication.OAuth2AuthenticationToken"
              }
            ],
            "targetElements": [
              {
                "type": "CtExecutableReference",
                "value": "filter()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.lang.Class.isInstance(Object)"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.isInstance(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-oauth2/src/main/java/org/apache/shenyu/plugin/oauth2/filter/OAuth2PreFilter.java",
        "aPath": "shenyu-plugin/shenyu-plugin-oauth2/src/main/java/org/apache/shenyu/plugin/oauth2/filter/OAuth2PreFilter.java",
        "name": "org.apache.shenyu.plugin.oauth2.filter.OAuth2PreFilter",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if ((Boolean) serverWebExchange.getAttributes().get(\"enable\")) {",
                "type": "DELETE",
                "lineNo": 69
              }
            ],
            "targetChanges": [
              {
                "line": "if (Boolean.TRUE.equals(serverWebExchange.getAttributes().get(\"enable\"))) {",
                "type": "ADD",
                "lineNo": 69
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange serverWebExchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'enable'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.springframework.web.server.ServerWebExchange serverWebExchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'enable'"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-param-mapping/src/main/java/org/apache/shenyu/plugin/param/mapping/strategy/Operator.java",
        "aPath": "shenyu-plugin/shenyu-plugin-param-mapping/src/main/java/org/apache/shenyu/plugin/param/mapping/strategy/Operator.java",
        "name": "org.apache.shenyu.plugin.param.mapping.strategy.Operator",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (outputMessage.getCache()) {",
                "type": "DELETE",
                "lineNo": 53
              }
            ],
            "targetChanges": [
              {
                "line": "if (Boolean.TRUE.equals(outputMessage.getCache())) {",
                "type": "ADD",
                "lineNo": 53
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getCache()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getCache()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getCache()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage outputMessage"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.base.support.CachedBodyOutputMessage.getCache()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/algorithm/AbstractRateLimiterAlgorithm.java",
        "aPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/algorithm/AbstractRateLimiterAlgorithm.java",
        "name": "org.apache.shenyu.plugin.ratelimiter.algorithm.AbstractRateLimiterAlgorithm",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public AbstractRateLimiterAlgorithm(final String scriptName) {",
                "type": "DELETE",
                "lineNo": 39
              }
            ],
            "targetChanges": [
              {
                "line": "protected AbstractRateLimiterAlgorithm(final String scriptName) {",
                "type": "ADD",
                "lineNo": 39
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.ratelimiter.algorithm.AbstractRateLimiterAlgorithm.AbstractRateLimiterAlgorithm(String)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String scriptName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.ratelimiter.algorithm.AbstractRateLimiterAlgorithm.AbstractRateLimiterAlgorithm(String)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String scriptName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/algorithm/RateLimiterAlgorithmFactory.java",
        "aPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/algorithm/RateLimiterAlgorithmFactory.java",
        "name": "org.apache.shenyu.plugin.ratelimiter.algorithm.RateLimiterAlgorithmFactory",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class RateLimiterAlgorithmFactory {",
                "type": "DELETE",
                "lineNo": 27
              }
            ],
            "targetChanges": [
              {
                "line": "public final class RateLimiterAlgorithmFactory {",
                "type": "ADD",
                "lineNo": 27
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.ratelimiter.algorithm.RateLimiterAlgorithmFactory"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.ratelimiter.algorithm.RateLimiterAlgorithmFactory"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private RateLimiterAlgorithmFactory() {",
                "type": "ADD",
                "lineNo": 29
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 30
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.ratelimiter.algorithm.RateLimiterAlgorithmFactory.RateLimiterAlgorithmFactory()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/handler/RateLimiterPluginDataHandler.java",
        "aPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/handler/RateLimiterPluginDataHandler.java",
        "name": "org.apache.shenyu.plugin.ratelimiter.handler.RateLimiterPluginDataHandler",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (Objects.nonNull(pluginData) && pluginData.getEnabled()) {",
                "type": "DELETE",
                "lineNo": 65
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.nonNull(pluginData) && Boolean.TRUE.equals(pluginData.getEnabled())) {",
                "type": "ADD",
                "lineNo": 65
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData.getEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData.getEnabled()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.nonNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData.getEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData.getEnabled()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/handler/ShenyuReactiveScriptExecutor.java",
        "aPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/handler/ShenyuReactiveScriptExecutor.java",
        "name": "org.apache.shenyu.plugin.ratelimiter.handler.ShenyuReactiveScriptExecutor",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "@NonNull",
                "type": "ADD",
                "lineNo": 51
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "org.springframework.lang.NonNull"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public <T> Flux<T> execute(final RedisScript<T> script, final List<K> keys, final List<?> args,",
                "type": "DELETE",
                "lineNo": 51
              },
              {
                "line": "final RedisElementWriter<?> argsWriter, final RedisElementReader<T> resultReader) {",
                "type": "DELETE",
                "lineNo": 52
              }
            ],
            "targetChanges": [
              {
                "line": "public <T> Flux<T> execute(@NonNull final RedisScript<T> script, @NonNull final List<K> keys, @NonNull final List<?> args,",
                "type": "ADD",
                "lineNo": 53
              },
              {
                "line": "@NonNull final RedisElementWriter<?> argsWriter, @NonNull final RedisElementReader<T> resultReader) {",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.ratelimiter.handler.ShenyuReactiveScriptExecutor.execute(RedisScript,List,List,RedisElementWriter,RedisElementReader)"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Flux"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.data.redis.core.script.RedisScript script"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.data.redis.core.script.RedisScript"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List keys"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List args"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.data.redis.serializer.RedisElementWriter argsWriter"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.data.redis.serializer.RedisElementWriter"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.data.redis.serializer.RedisElementReader resultReader"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.data.redis.serializer.RedisElementReader"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.ratelimiter.handler.ShenyuReactiveScriptExecutor.execute(RedisScript,List,List,RedisElementWriter,RedisElementReader)"
              },
              {
                "type": "CtTypeReference",
                "value": "reactor.core.publisher.Flux"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.data.redis.core.script.RedisScript script"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.lang.NonNull"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.data.redis.core.script.RedisScript"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List keys"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.lang.NonNull"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List args"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.lang.NonNull"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.data.redis.serializer.RedisElementWriter argsWriter"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.lang.NonNull"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.data.redis.serializer.RedisElementWriter"
              },
              {
                "type": "CtParameter",
                "value": "org.springframework.data.redis.serializer.RedisElementReader resultReader"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.lang.NonNull"
              },
              {
                "type": "CtTypeReference",
                "value": "org.springframework.data.redis.serializer.RedisElementReader"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/resolver/RateLimiterKeyResolverFactory.java",
        "aPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/main/java/org/apache/shenyu/plugin/ratelimiter/resolver/RateLimiterKeyResolverFactory.java",
        "name": "org.apache.shenyu.plugin.ratelimiter.resolver.RateLimiterKeyResolverFactory",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class RateLimiterKeyResolverFactory {",
                "type": "DELETE",
                "lineNo": 25
              }
            ],
            "targetChanges": [
              {
                "line": "public final class RateLimiterKeyResolverFactory {",
                "type": "ADD",
                "lineNo": 25
              },
              {
                "line": "private RateLimiterKeyResolverFactory() {",
                "type": "ADD",
                "lineNo": 27
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 28
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.ratelimiter.resolver.RateLimiterKeyResolverFactory"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.ratelimiter.resolver.RateLimiterKeyResolverFactory"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.ratelimiter.resolver.RateLimiterKeyResolverFactory.RateLimiterKeyResolverFactory()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/test/java/org/apache/shenyu/plugin/ratelimiter/resolver/RateLimiterKeyResolverTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-ratelimiter/src/test/java/org/apache/shenyu/plugin/ratelimiter/resolver/RateLimiterKeyResolverTest.java",
        "name": "org.apache.shenyu.plugin.ratelimiter.resolver.RateLimiterKeyResolverTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertEquals(keyResolverName, \"WHOLE_KEY_RESOLVER\");",
                "type": "DELETE",
                "lineNo": 79
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(\"WHOLE_KEY_RESOLVER\", keyResolverName);",
                "type": "ADD",
                "lineNo": 79
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String keyResolverName"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'WHOLE_KEY_RESOLVER'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'WHOLE_KEY_RESOLVER'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String keyResolverName"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertEquals(keyResolverName, \"REMOTE_ADDRESS_KEY_RESOLVER\");",
                "type": "DELETE",
                "lineNo": 85
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(\"REMOTE_ADDRESS_KEY_RESOLVER\", keyResolverName);",
                "type": "ADD",
                "lineNo": 85
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String keyResolverName"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'REMOTE_ADDRESS_KEY_RESOLVER'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,java.lang.String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'REMOTE_ADDRESS_KEY_RESOLVER'"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String keyResolverName"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/build/Resilience4JBuilder.java",
        "aPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/build/Resilience4JBuilder.java",
        "name": "org.apache.shenyu.plugin.resilience4j.build.Resilience4JBuilder",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class Resilience4JBuilder {",
                "type": "DELETE",
                "lineNo": 35
              }
            ],
            "targetChanges": [
              {
                "line": "public final class Resilience4JBuilder {",
                "type": "ADD",
                "lineNo": 35
              },
              {
                "line": "private Resilience4JBuilder() {",
                "type": "ADD",
                "lineNo": 37
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 38
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.resilience4j.build.Resilience4JBuilder"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.resilience4j.build.Resilience4JBuilder"
              },
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.resilience4j.build.Resilience4JBuilder.Resilience4JBuilder()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/factory/Resilience4JRegistryFactory.java",
        "aPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/main/java/org/apache/shenyu/plugin/resilience4j/factory/Resilience4JRegistryFactory.java",
        "name": "org.apache.shenyu.plugin.resilience4j.factory.Resilience4JRegistryFactory",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class Resilience4JRegistryFactory {",
                "type": "DELETE",
                "lineNo": 30
              }
            ],
            "targetChanges": [
              {
                "line": "public final class Resilience4JRegistryFactory {",
                "type": "ADD",
                "lineNo": 30
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.resilience4j.factory.Resilience4JRegistryFactory"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.resilience4j.factory.Resilience4JRegistryFactory"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private Resilience4JRegistryFactory() {",
                "type": "ADD",
                "lineNo": 42
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 43
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.resilience4j.factory.Resilience4JRegistryFactory.Resilience4JRegistryFactory()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/test/java/org/apache/shenyu/plugin/resilience4j/Resilience4JPluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-resilience4j/src/test/java/org/apache/shenyu/plugin/resilience4j/Resilience4JPluginTest.java",
        "name": "org.apache.shenyu.plugin.resilience4j.Resilience4JPluginTest",
        "hunks": [
          {
            "targetChanges": [
              {
                "line": "@SuppressWarnings({\"rawtypes\", \"unchecked\"})",
                "type": "ADD",
                "lineNo": 101
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "java.lang.SuppressWarnings"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'rawtypes'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'unchecked'"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "@SuppressWarnings({\"rawtypes\", \"unchecked\"})",
                "type": "ADD",
                "lineNo": 118
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "java.lang.SuppressWarnings"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'rawtypes'"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'unchecked'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (CallNotPermittedException.class.isInstance(throwable)) {",
                "type": "DELETE",
                "lineNo": 126
              }
            ],
            "targetChanges": [
              {
                "line": "if (throwable instanceof CallNotPermittedException) {",
                "type": "ADD",
                "lineNo": 128
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "isInstance()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "isInstance()"
              },
              {
                "type": "CtVariableRead",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> throwable"
              }
            ],
            "targetElements": [
              {
                "type": "CtVariableRead",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtParameterReference",
                "value": "<unknown> throwable"
              },
              {
                "type": "CtTypeAccess",
                "value": "io.github.resilience4j.circuitbreaker.CallNotPermittedException"
              },
              {
                "type": "CtTypeReference",
                "value": "io.github.resilience4j.circuitbreaker.CallNotPermittedException"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "Assert.assertEquals(exchange.getResponse().getStatusCode(), HttpStatus.INTERNAL_SERVER_ERROR);",
                "type": "DELETE",
                "lineNo": 141
              }
            ],
            "targetChanges": [
              {
                "line": "Assert.assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, exchange.getResponse().getStatusCode());",
                "type": "ADD",
                "lineNo": 143
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals()"
              },
              {
                "type": "CtInvocation",
                "value": "getStatusCode()"
              },
              {
                "type": "CtInvocation",
                "value": "getResponse()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getResponse()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getStatusCode()"
              },
              {
                "type": "CtTypeAccess",
                "value": "HttpStatus.INTERNAL_SERVER_ERROR"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.junit.Assert"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals()"
              },
              {
                "type": "CtTypeAccess",
                "value": "HttpStatus.INTERNAL_SERVER_ERROR"
              },
              {
                "type": "CtInvocation",
                "value": "getStatusCode()"
              },
              {
                "type": "CtInvocation",
                "value": "getResponse()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getResponse()"
              },
              {
                "type": "CtExecutableReference",
                "value": "getStatusCode()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-sign/src/main/java/org/apache/shenyu/plugin/sign/SignPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-sign/src/main/java/org/apache/shenyu/plugin/sign/SignPlugin.java",
        "name": "org.apache.shenyu.plugin.sign.SignPlugin",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (!result.getLeft()) {",
                "type": "DELETE",
                "lineNo": 62
              }
            ],
            "targetChanges": [
              {
                "line": "if (Boolean.FALSE.equals(result.getLeft())) {",
                "type": "ADD",
                "lineNo": 62
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair result"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean FALSE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean FALSE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair result"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getLeft()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-sign/src/main/java/org/apache/shenyu/plugin/sign/api/ShenyuSignProviderWrap.java",
        "aPath": "shenyu-plugin/shenyu-plugin-sign/src/main/java/org/apache/shenyu/plugin/sign/api/ShenyuSignProviderWrap.java",
        "name": "org.apache.shenyu.plugin.sign.api.ShenyuSignProviderWrap",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "private ShenyuSignProviderWrap() {",
                "type": "ADD",
                "lineNo": 29
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 30
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.sign.api.ShenyuSignProviderWrap.ShenyuSignProviderWrap()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-sign/src/main/java/org/apache/shenyu/plugin/sign/service/DefaultSignService.java",
        "aPath": "shenyu-plugin/shenyu-plugin-sign/src/main/java/org/apache/shenyu/plugin/sign/service/DefaultSignService.java",
        "name": "org.apache.shenyu.plugin.sign.service.DefaultSignService",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (Objects.isNull(appAuthData) || !appAuthData.getEnabled()) {",
                "type": "DELETE",
                "lineNo": 86
              }
            ],
            "targetChanges": [
              {
                "line": "if (Objects.isNull(appAuthData) || Boolean.FALSE.equals(appAuthData.getEnabled())) {",
                "type": "ADD",
                "lineNo": 86
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.AppAuthData appAuthData"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.AppAuthData.getEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.AppAuthData appAuthData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.AppAuthData.getEnabled()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Objects"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Objects.isNull(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.AppAuthData appAuthData"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean FALSE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean FALSE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.AppAuthData.getEnabled()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.AppAuthData appAuthData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.AppAuthData.getEnabled()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "if (appAuthData.getOpen()) {",
                "type": "DELETE",
                "lineNo": 90
              }
            ],
            "targetChanges": [
              {
                "line": "if (Boolean.TRUE.equals(appAuthData.getOpen())) {",
                "type": "ADD",
                "lineNo": 90
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.AppAuthData.getOpen()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.AppAuthData appAuthData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.AppAuthData.getOpen()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.Boolean"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.Boolean TRUE"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Boolean.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.AppAuthData.getOpen()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.AppAuthData appAuthData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.AppAuthData.getOpen()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-springcloud/src/main/java/org/apache/shenyu/plugin/springcloud/loadbalance/LoadBalanceKeyHolder.java",
        "aPath": "shenyu-plugin/shenyu-plugin-springcloud/src/main/java/org/apache/shenyu/plugin/springcloud/loadbalance/LoadBalanceKeyHolder.java",
        "name": "org.apache.shenyu.plugin.springcloud.loadbalance.LoadBalanceKeyHolder",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class LoadBalanceKeyHolder {",
                "type": "DELETE",
                "lineNo": 24
              }
            ],
            "targetChanges": [
              {
                "line": "public final class LoadBalanceKeyHolder {",
                "type": "ADD",
                "lineNo": 24
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.springcloud.loadbalance.LoadBalanceKeyHolder"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.springcloud.loadbalance.LoadBalanceKeyHolder"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private LoadBalanceKeyHolder() {",
                "type": "ADD",
                "lineNo": 28
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 29
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.springcloud.loadbalance.LoadBalanceKeyHolder.LoadBalanceKeyHolder()"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-tars/src/main/java/org/apache/shenyu/plugin/tars/cache/ApplicationConfigCache.java",
        "aPath": "shenyu-plugin/shenyu-plugin-tars/src/main/java/org/apache/shenyu/plugin/tars/cache/ApplicationConfigCache.java",
        "name": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "@NonNull",
                "type": "ADD",
                "lineNo": 72
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "org.springframework.lang.NonNull"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public TarsInvokePrxList load(final String key) {",
                "type": "DELETE",
                "lineNo": 71
              },
              {
                "line": "return new TarsInvokePrxList(new CopyOnWriteArrayList<>(), null, null, null);",
                "type": "DELETE",
                "lineNo": 72
              }
            ],
            "targetChanges": [
              {
                "line": "public TarsInvokePrxList load(@NonNull final String key) {",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "return new TarsInvokePrxList(null, null, null);",
                "type": "ADD",
                "lineNo": 75
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$1.load(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrxList"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String key"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrxList.TarsInvokePrxList(CopyOnWriteArrayList,Method,Class[],String[])"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrxList"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.concurrent.CopyOnWriteArrayList.CopyOnWriteArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CopyOnWriteArrayList"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$1.load(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrxList"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String key"
              },
              {
                "type": "CtAnnotation",
                "value": "org.springframework.lang.NonNull"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrxList.TarsInvokePrxList(Method,Class[],String[])"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrxList"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "throw new ShenyuException(e.getCause());",
                "type": "DELETE",
                "lineNo": 100
              }
            ],
            "targetChanges": [
              {
                "line": "throw new ShenyuTarsPluginException(e.getCause());",
                "type": "ADD",
                "lineNo": 103
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Throwable.getCause()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.ExecutionException e"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Throwable.getCause()"
              }
            ],
            "targetElements": [
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.plugin.tars.exception.ShenyuTarsPluginException.ShenyuTarsPluginException(Throwable)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.tars.exception.ShenyuTarsPluginException.ShenyuTarsPluginException(Throwable)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.exception.ShenyuTarsPluginException"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Throwable.getCause()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.ExecutionException e"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Throwable.getCause()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* Init prx.",
                "type": "DELETE",
                "lineNo": 105
              }
            ],
            "targetChanges": [
              {
                "line": "* Init prx.<br>",
                "type": "ADD",
                "lineNo": 108
              },
              {
                "line": "* Try to load the meta information defined by meta data to the local cache.<br>",
                "type": "ADD",
                "lineNo": 109
              },
              {
                "line": "* eg: class definition, all method definition params,context path.<br>",
                "type": "ADD",
                "lineNo": 110
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "@SuppressWarnings(\"all\")",
                "type": "DELETE",
                "lineNo": 109
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtAnnotation",
                "value": "java.lang.SuppressWarnings"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'all'"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "for (; ;) {",
                "type": "DELETE",
                "lineNo": 111
              }
            ],
            "targetChanges": [
              {
                "line": "while (true) {",
                "type": "ADD",
                "lineNo": 115
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtLiteral",
                "value": "boolean 'true'"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assert LOCK != null;",
                "type": "DELETE",
                "lineNo": 115
              },
              {
                "line": "if (LOCK.tryLock()) {",
                "type": "DELETE",
                "lineNo": 116
              },
              {
                "line": "try {",
                "type": "DELETE",
                "lineNo": 117
              },
              {
                "line": "if (StringUtils.isEmpty(metaData.getRpcExt())) {",
                "type": "DELETE",
                "lineNo": 118
              },
              {
                "line": "throw new ShenyuException(\"can't init prx with empty ext string\");",
                "type": "DELETE",
                "lineNo": 119
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 120
              },
              {
                "line": "String clazzName = PrxInfoUtil.getPrxName(metaData);",
                "type": "DELETE",
                "lineNo": 121
              },
              {
                "line": "TarsParamExtInfo tarsParamExtInfo = GsonUtils.getInstance().fromJson(metaData.getRpcExt(), TarsParamExtInfo.class);",
                "type": "DELETE",
                "lineNo": 122
              },
              {
                "line": "DynamicType.Builder<?> classDefinition = new ByteBuddy()",
                "type": "DELETE",
                "lineNo": 123
              },
              {
                "line": ".makeInterface()",
                "type": "DELETE",
                "lineNo": 124
              },
              {
                "line": ".name(clazzName);",
                "type": "DELETE",
                "lineNo": 125
              },
              {
                "line": "for (MethodInfo methodInfo : tarsParamExtInfo.getMethodInfo()) {",
                "type": "DELETE",
                "lineNo": 126
              },
              {
                "line": "DynamicType.Builder.MethodDefinition.ParameterDefinition<?> definition =",
                "type": "DELETE",
                "lineNo": 127
              },
              {
                "line": "classDefinition.defineMethod(PrxInfoUtil.getMethodName(methodInfo.methodName),",
                "type": "DELETE",
                "lineNo": 128
              },
              {
                "line": "ReturnValueResolver.getCallBackType(PrxInfoUtil.getParamClass(methodInfo.getReturnType())),",
                "type": "DELETE",
                "lineNo": 129
              },
              {
                "line": "Visibility.PUBLIC);",
                "type": "DELETE",
                "lineNo": 130
              },
              {
                "line": "if (CollectionUtils.isNotEmpty(methodInfo.getParams())) {",
                "type": "DELETE",
                "lineNo": 131
              },
              {
                "line": "Class<?>[] paramTypes = new Class[methodInfo.getParams().size()];",
                "type": "DELETE",
                "lineNo": 132
              },
              {
                "line": "String[] paramNames = new String[methodInfo.getParams().size()];",
                "type": "DELETE",
                "lineNo": 133
              },
              {
                "line": "for (int i = 0; i < methodInfo.getParams().size(); i++) {",
                "type": "DELETE",
                "lineNo": 134
              },
              {
                "line": "Pair<String, String> pair = methodInfo.getParams().get(i);",
                "type": "DELETE",
                "lineNo": 135
              },
              {
                "line": "paramTypes[i] = PrxInfoUtil.getParamClass(pair.getKey());",
                "type": "DELETE",
                "lineNo": 136
              },
              {
                "line": "paramNames[i] = pair.getValue();",
                "type": "DELETE",
                "lineNo": 137
              },
              {
                "line": "definition = definition.withParameter(paramTypes[i], paramNames[i]);",
                "type": "DELETE",
                "lineNo": 138
              },
              {
                "line": "prxParamCache.put(getClassMethodKey(clazzName, methodInfo.getMethodName()), new TarsParamInfo(paramTypes, paramNames));",
                "type": "DELETE",
                "lineNo": 139
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 140
              },
              {
                "line": "classDefinition = definition.withoutCode();",
                "type": "DELETE",
                "lineNo": 141
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 142
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 143
              },
              {
                "line": "Class<?> prxClazz = classDefinition.annotateType(AnnotationDescription.Builder.ofType(Servant.class).build())",
                "type": "DELETE",
                "lineNo": 144
              },
              {
                "line": ".make()",
                "type": "DELETE",
                "lineNo": 145
              },
              {
                "line": ".load(Servant.class.getClassLoader(), ClassLoadingStrategy.Default.INJECTION)",
                "type": "DELETE",
                "lineNo": 146
              },
              {
                "line": ".getLoaded();",
                "type": "DELETE",
                "lineNo": 147
              },
              {
                "line": "assert communicator != null;",
                "type": "DELETE",
                "lineNo": 148
              },
              {
                "line": "prxClassCache.put(metaData.getPath(), prxClazz);",
                "type": "DELETE",
                "lineNo": 149
              },
              {
                "line": "List<MetaData> paths = ctxPathCache.getOrDefault(metaData.getContextPath(), new ArrayList<>());",
                "type": "DELETE",
                "lineNo": 150
              },
              {
                "line": "if (!paths.contains(metaData.getPath())) {",
                "type": "DELETE",
                "lineNo": 151
              },
              {
                "line": "paths.add(metaData);",
                "type": "DELETE",
                "lineNo": 152
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 153
              },
              {
                "line": "ctxPathCache.put(metaData.getContextPath(), paths);",
                "type": "DELETE",
                "lineNo": 154
              },
              {
                "line": "} finally {",
                "type": "DELETE",
                "lineNo": 155
              },
              {
                "line": "LOCK.unlock();",
                "type": "DELETE",
                "lineNo": 156
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 157
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 158
              }
            ],
            "targetChanges": [
              {
                "line": "// Spin's Attempt to Load",
                "type": "ADD",
                "lineNo": 119
              },
              {
                "line": "tryLockedLoadMetaData(metaData);",
                "type": "ADD",
                "lineNo": 120
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.locks.ReentrantLock LOCK"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.locks.ReentrantLock.tryLock()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.locks.ReentrantLock LOCK"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.locks.ReentrantLock.tryLock()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getRpcExt()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getRpcExt()"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.common.exception.ShenyuException.ShenyuException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.exception.ShenyuException"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'can't init prx with empty ext string'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String clazzName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getPrxName(MetaData)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getPrxName(MetaData)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamExtInfo tarsParamExtInfo"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamExtInfo"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getRpcExt()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getRpcExt()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder classDefinition"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType"
              },
              {
                "type": "CtInvocation",
                "value": "name(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "makeInterface()"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.assertj.core.internal.bytebuddy.ByteBuddy()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.ByteBuddy"
              },
              {
                "type": "CtExecutableReference",
                "value": "makeInterface()"
              },
              {
                "type": "CtExecutableReference",
                "value": "name(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String clazzName"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamExtInfo.getMethodInfo()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamExtInfo tarsParamExtInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamExtInfo.getMethodInfo()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition definition"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType"
              },
              {
                "type": "CtInvocation",
                "value": "defineMethod(java.lang.String,java.lang.reflect.Type)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder classDefinition"
              },
              {
                "type": "CtExecutableReference",
                "value": "defineMethod(java.lang.String,java.lang.reflect.Type)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getMethodName(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getMethodName(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.util.ReturnValueResolver.getCallBackType(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.tars.util.ReturnValueResolver"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.util.ReturnValueResolver.getCallBackType(Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getParamClass(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getParamClass(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getReturnType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getReturnType()"
              },
              {
                "type": "CtTypeAccess",
                "value": "Visibility.PUBLIC"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.collections4.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtLocalVariable",
                "value": "Class[] paramTypes"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "Class[]"
              },
              {
                "type": "CtNewArray",
                "value": "Class[]"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Class"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtLocalVariable",
                "value": "String[] paramNames"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtLocalVariable",
                "value": "int i"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtVariableWrite",
                "value": "int i"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.commons.lang3.tuple.Pair"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.get(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.get(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtArrayWrite",
                "value": "Class[] paramTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "Class[] paramTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getParamClass(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getParamClass(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getKey()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getKey()"
              },
              {
                "type": "CtArrayWrite",
                "value": "String[] paramNames"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] paramNames"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getValue()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getValue()"
              },
              {
                "type": "CtVariableWrite",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition definition"
              },
              {
                "type": "CtInvocation",
                "value": "withParameter(java.lang.Class,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition definition"
              },
              {
                "type": "CtExecutableReference",
                "value": "withParameter(java.lang.Class,java.lang.String)"
              },
              {
                "type": "CtArrayRead",
                "value": "Class[] paramTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "Class[] paramTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtArrayRead",
                "value": "String[] paramNames"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] paramNames"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.ConcurrentHashMap.put(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap prxParamCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.ConcurrentHashMap.put(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache.getClassMethodKey(String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache.getClassMethodKey(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String clazzName"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getMethodName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getMethodName()"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamInfo.TarsParamInfo(Class[],String[])"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamInfo"
              },
              {
                "type": "CtVariableRead",
                "value": "Class[] paramTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] paramNames"
              },
              {
                "type": "CtVariableWrite",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder classDefinition"
              },
              {
                "type": "CtInvocation",
                "value": "withoutCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition definition"
              },
              {
                "type": "CtExecutableReference",
                "value": "withoutCode()"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Class prxClazz"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Class"
              },
              {
                "type": "CtInvocation",
                "value": "getLoaded()"
              },
              {
                "type": "CtInvocation",
                "value": "load(java.lang.ClassLoader)"
              },
              {
                "type": "CtInvocation",
                "value": "make()"
              },
              {
                "type": "CtInvocation",
                "value": "annotateType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder classDefinition"
              },
              {
                "type": "CtExecutableReference",
                "value": "annotateType()"
              },
              {
                "type": "CtInvocation",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "ofType(java.lang.Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "AnnotationDescription.Builder"
              },
              {
                "type": "CtExecutableReference",
                "value": "ofType(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              },
              {
                "type": "CtExecutableReference",
                "value": "make()"
              },
              {
                "type": "CtExecutableReference",
                "value": "load(java.lang.ClassLoader)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Class.getClassLoader()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.getClassLoader()"
              },
              {
                "type": "CtTypeAccess",
                "value": "ClassLoadingStrategy.Default.INJECTION"
              },
              {
                "type": "CtExecutableReference",
                "value": "getLoaded()"
              },
              {
                "type": "CtFieldRead",
                "value": "com.qq.tars.client.Communicator communicator"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.ConcurrentHashMap.put(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap prxClassCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.ConcurrentHashMap.put(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Class prxClazz"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List paths"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.MetaData"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.ConcurrentHashMap.getOrDefault(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap ctxPathCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.ConcurrentHashMap.getOrDefault(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getContextPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getContextPath()"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.contains(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List paths"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.contains(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List paths"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.ConcurrentHashMap.put(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap ctxPathCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.ConcurrentHashMap.put(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getContextPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getContextPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List paths"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.locks.ReentrantLock.unlock()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.locks.ReentrantLock LOCK"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.locks.ReentrantLock.unlock()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache.tryLockedLoadMetaData(MetaData)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache.tryLockedLoadMetaData(MetaData)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "LOG.error(\"init tars ref ex:{}\", e.getMessage());",
                "type": "DELETE",
                "lineNo": 166
              }
            ],
            "targetChanges": [
              {
                "line": "LOG.error(\"ShenyuTarsPluginInitializeException: init tars ref ex:{}\", e.getMessage());",
                "type": "ADD",
                "lineNo": 128
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'init tars ref ex:{}'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Throwable.getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Throwable.getMessage()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ShenyuTarsPluginInitializeException: init tars ref ex:{}'"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Throwable.getMessage()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Exception e"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Throwable.getMessage()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "* Try to load once, if it fails, it will give up.<br>",
                "type": "ADD",
                "lineNo": 135
              },
              {
                "line": "* add class cache to {@link #prxClassCache}.<br>",
                "type": "ADD",
                "lineNo": 136
              },
              {
                "line": "* add method params cache to {@link #prxParamCache}.<br>",
                "type": "ADD",
                "lineNo": 137
              },
              {
                "line": "* add paths cache to {@link #ctxPathCache}.<br>",
                "type": "ADD",
                "lineNo": 138
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 139
              },
              {
                "line": "* @param metaData metaData",
                "type": "ADD",
                "lineNo": 140
              },
              {
                "line": "* @throws ClassNotFoundException meta data class definition not found",
                "type": "ADD",
                "lineNo": 141
              },
              {
                "line": "* @see ReentrantLock",
                "type": "ADD",
                "lineNo": 142
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 143
              },
              {
                "line": "private void tryLockedLoadMetaData(final MetaData metaData) throws ClassNotFoundException {",
                "type": "ADD",
                "lineNo": 144
              },
              {
                "line": "assert LOCK != null;",
                "type": "ADD",
                "lineNo": 145
              },
              {
                "line": "if (LOCK.tryLock()) {",
                "type": "ADD",
                "lineNo": 146
              },
              {
                "line": "try {",
                "type": "ADD",
                "lineNo": 147
              },
              {
                "line": "if (StringUtils.isEmpty(metaData.getRpcExt())) {",
                "type": "ADD",
                "lineNo": 148
              },
              {
                "line": "throw new ShenyuTarsPluginException(\"ShenyuTarsPluginInitializeException: can't init prx with empty ext string\");",
                "type": "ADD",
                "lineNo": 149
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 150
              },
              {
                "line": "Class<?> prxClazz = buildClassDefinition(metaData);",
                "type": "ADD",
                "lineNo": 151
              },
              {
                "line": "prxClassCache.put(metaData.getPath(), prxClazz);",
                "type": "ADD",
                "lineNo": 152
              },
              {
                "line": "List<MetaData> paths = ctxPathCache.getOrDefault(metaData.getContextPath(), new ArrayList<>());",
                "type": "ADD",
                "lineNo": 153
              },
              {
                "line": "if (!IterableUtils.matchesAny(paths, p -> p.getPath().equals(metaData.getPath()))) {",
                "type": "ADD",
                "lineNo": 154
              },
              {
                "line": "paths.add(metaData);",
                "type": "ADD",
                "lineNo": 155
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 156
              },
              {
                "line": "ctxPathCache.put(metaData.getContextPath(), paths);",
                "type": "ADD",
                "lineNo": 157
              },
              {
                "line": "} finally {",
                "type": "ADD",
                "lineNo": 158
              },
              {
                "line": "LOCK.unlock();",
                "type": "ADD",
                "lineNo": 159
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 160
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 161
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 162
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 164
              },
              {
                "line": "* build target class definition.",
                "type": "ADD",
                "lineNo": 165
              },
              {
                "line": "*",
                "type": "ADD",
                "lineNo": 166
              },
              {
                "line": "* @param metaData metadata",
                "type": "ADD",
                "lineNo": 167
              },
              {
                "line": "* @return class definition",
                "type": "ADD",
                "lineNo": 168
              },
              {
                "line": "* @throws ClassNotFoundException meta data class definition not found",
                "type": "ADD",
                "lineNo": 169
              },
              {
                "line": "*/",
                "type": "ADD",
                "lineNo": 170
              },
              {
                "line": "private Class<?> buildClassDefinition(final MetaData metaData) throws ClassNotFoundException {",
                "type": "ADD",
                "lineNo": 171
              },
              {
                "line": "String clazzName = PrxInfoUtil.getPrxName(metaData);",
                "type": "ADD",
                "lineNo": 172
              },
              {
                "line": "DynamicType.Builder<?> classDefinition = new ByteBuddy().makeInterface().name(clazzName);",
                "type": "ADD",
                "lineNo": 173
              },
              {
                "line": "TarsParamExtInfo tarsParamExtInfo = GsonUtils.getInstance().fromJson(metaData.getRpcExt(), TarsParamExtInfo.class);",
                "type": "ADD",
                "lineNo": 174
              },
              {
                "line": "for (MethodInfo methodInfo : tarsParamExtInfo.getMethodInfo()) {",
                "type": "ADD",
                "lineNo": 175
              },
              {
                "line": "DynamicType.Builder.MethodDefinition.ParameterDefinition<?> definition =",
                "type": "ADD",
                "lineNo": 176
              },
              {
                "line": "classDefinition.defineMethod(PrxInfoUtil.getMethodName(methodInfo.methodName),",
                "type": "ADD",
                "lineNo": 177
              },
              {
                "line": "ReturnValueResolver.getCallBackType(PrxInfoUtil.getParamClass(methodInfo.getReturnType())),",
                "type": "ADD",
                "lineNo": 178
              },
              {
                "line": "Visibility.PUBLIC);",
                "type": "ADD",
                "lineNo": 179
              },
              {
                "line": "if (CollectionUtils.isNotEmpty(methodInfo.getParams())) {",
                "type": "ADD",
                "lineNo": 180
              },
              {
                "line": "Class<?>[] paramTypes = new Class[methodInfo.getParams().size()];",
                "type": "ADD",
                "lineNo": 181
              },
              {
                "line": "String[] paramNames = new String[methodInfo.getParams().size()];",
                "type": "ADD",
                "lineNo": 182
              },
              {
                "line": "for (int i = 0; i < methodInfo.getParams().size(); i++) {",
                "type": "ADD",
                "lineNo": 183
              },
              {
                "line": "Pair<String, String> pair = methodInfo.getParams().get(i);",
                "type": "ADD",
                "lineNo": 184
              },
              {
                "line": "paramTypes[i] = PrxInfoUtil.getParamClass(pair.getKey());",
                "type": "ADD",
                "lineNo": 185
              },
              {
                "line": "paramNames[i] = pair.getValue();",
                "type": "ADD",
                "lineNo": 186
              },
              {
                "line": "definition = definition.withParameter(paramTypes[i], paramNames[i]);",
                "type": "ADD",
                "lineNo": 187
              },
              {
                "line": "prxParamCache.put(getClassMethodKey(clazzName, methodInfo.getMethodName()), new TarsParamInfo(paramTypes, paramNames));",
                "type": "ADD",
                "lineNo": 188
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 189
              },
              {
                "line": "classDefinition = definition.withoutCode();",
                "type": "ADD",
                "lineNo": 190
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 191
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 192
              },
              {
                "line": "return classDefinition.annotateType(AnnotationDescription.Builder.ofType(Servant.class).build())",
                "type": "ADD",
                "lineNo": 193
              },
              {
                "line": ".make()",
                "type": "ADD",
                "lineNo": 194
              },
              {
                "line": ".load(Servant.class.getClassLoader(), ClassLoadingStrategy.Default.INJECTION)",
                "type": "ADD",
                "lineNo": 195
              },
              {
                "line": ".getLoaded();",
                "type": "ADD",
                "lineNo": 196
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 198
              },
              {
                "line": "/**",
                "type": "ADD",
                "lineNo": 200
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache.tryLockedLoadMetaData(MetaData)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.MetaData"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.ClassNotFoundException"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.locks.ReentrantLock LOCK"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.locks.ReentrantLock.tryLock()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.locks.ReentrantLock LOCK"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.locks.ReentrantLock.tryLock()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getRpcExt()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getRpcExt()"
              },
              {
                "type": "CtThrow",
                "value": "org.apache.shenyu.plugin.tars.exception.ShenyuTarsPluginException.ShenyuTarsPluginException(String)"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.tars.exception.ShenyuTarsPluginException.ShenyuTarsPluginException(String)"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.exception.ShenyuTarsPluginException"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'ShenyuTarsPluginInitializeException: can't init prx with empty ext string'"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.Class prxClazz"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Class"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache.buildClassDefinition(MetaData)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache.buildClassDefinition(MetaData)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.ConcurrentHashMap.put(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap prxClassCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.ConcurrentHashMap.put(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.Class prxClazz"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.util.List paths"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.MetaData"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.ConcurrentHashMap.getOrDefault(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap ctxPathCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.ConcurrentHashMap.getOrDefault(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getContextPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getContextPath()"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.ArrayList.ArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.ArrayList"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.collections4.IterableUtils.matchesAny(Iterable,Predicate)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.collections4.IterableUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.collections4.IterableUtils.matchesAny(Iterable,Predicate)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List paths"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.MetaData p"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData p"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.equals(Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getPath()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List paths"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.add(Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.ConcurrentHashMap.put(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap ctxPathCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.ConcurrentHashMap.put(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getContextPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getContextPath()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List paths"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.locks.ReentrantLock.unlock()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.locks.ReentrantLock LOCK"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.locks.ReentrantLock.unlock()"
              },
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache.buildClassDefinition(MetaData)"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Class"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.common.dto.MetaData"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.ClassNotFoundException"
              },
              {
                "type": "CtLocalVariable",
                "value": "java.lang.String clazzName"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getPrxName(MetaData)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getPrxName(MetaData)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder classDefinition"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType"
              },
              {
                "type": "CtInvocation",
                "value": "name(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "makeInterface()"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.assertj.core.internal.bytebuddy.ByteBuddy()"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.ByteBuddy"
              },
              {
                "type": "CtExecutableReference",
                "value": "makeInterface()"
              },
              {
                "type": "CtExecutableReference",
                "value": "name(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String clazzName"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamExtInfo tarsParamExtInfo"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamExtInfo"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.utils.GsonUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.utils.GsonUtils.fromJson(String,Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.MetaData.getRpcExt()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.MetaData metaData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.MetaData.getRpcExt()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamExtInfo.getMethodInfo()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamExtInfo tarsParamExtInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamExtInfo.getMethodInfo()"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition definition"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder"
              },
              {
                "type": "CtTypeReference",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType"
              },
              {
                "type": "CtInvocation",
                "value": "defineMethod(java.lang.String,java.lang.reflect.Type)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder classDefinition"
              },
              {
                "type": "CtExecutableReference",
                "value": "defineMethod(java.lang.String,java.lang.reflect.Type)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getMethodName(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getMethodName(String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String methodName"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtLocalVariableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.util.ReturnValueResolver.getCallBackType(Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.tars.util.ReturnValueResolver"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.util.ReturnValueResolver.getCallBackType(Class)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getParamClass(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getParamClass(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getReturnType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getReturnType()"
              },
              {
                "type": "CtTypeAccess",
                "value": "Visibility.PUBLIC"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.collections4.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtLocalVariable",
                "value": "Class[] paramTypes"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "Class[]"
              },
              {
                "type": "CtNewArray",
                "value": "Class[]"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.Class"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtLocalVariable",
                "value": "String[] paramNames"
              },
              {
                "type": "CtArrayTypeReference",
                "value": "String[]"
              },
              {
                "type": "CtNewArray",
                "value": "String[]"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtLocalVariable",
                "value": "int i"
              },
              {
                "type": "CtTypeReference",
                "value": "int"
              },
              {
                "type": "CtLiteral",
                "value": "int '0'"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.size()"
              },
              {
                "type": "CtVariableWrite",
                "value": "int i"
              },
              {
                "type": "CtLocalVariable",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.commons.lang3.tuple.Pair"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.String"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.get(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getParams()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.get(int)"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtArrayWrite",
                "value": "Class[] paramTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "Class[] paramTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getParamClass(String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.getParamClass(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getKey()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getKey()"
              },
              {
                "type": "CtArrayWrite",
                "value": "String[] paramNames"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] paramNames"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.tuple.Pair.getValue()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.commons.lang3.tuple.Pair pair"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.tuple.Pair.getValue()"
              },
              {
                "type": "CtVariableWrite",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition definition"
              },
              {
                "type": "CtInvocation",
                "value": "withParameter(java.lang.Class,java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition definition"
              },
              {
                "type": "CtExecutableReference",
                "value": "withParameter(java.lang.Class,java.lang.String)"
              },
              {
                "type": "CtArrayRead",
                "value": "Class[] paramTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "Class[] paramTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtArrayRead",
                "value": "String[] paramNames"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] paramNames"
              },
              {
                "type": "CtVariableRead",
                "value": "int i"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.concurrent.ConcurrentHashMap.put(Object,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.concurrent.ConcurrentHashMap prxParamCache"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.concurrent.ConcurrentHashMap.put(Object,Object)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache.getClassMethodKey(String,String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache.getClassMethodKey(String,String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String clazzName"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getMethodName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo methodInfo"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$MethodInfo.getMethodName()"
              },
              {
                "type": "CtConstructorCall",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamInfo.TarsParamInfo(Class[],String[])"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$TarsParamInfo"
              },
              {
                "type": "CtVariableRead",
                "value": "Class[] paramTypes"
              },
              {
                "type": "CtVariableRead",
                "value": "String[] paramNames"
              },
              {
                "type": "CtVariableWrite",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder classDefinition"
              },
              {
                "type": "CtInvocation",
                "value": "withoutCode()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder$MethodDefinition$ParameterDefinition definition"
              },
              {
                "type": "CtExecutableReference",
                "value": "withoutCode()"
              },
              {
                "type": "CtInvocation",
                "value": "getLoaded()"
              },
              {
                "type": "CtInvocation",
                "value": "load(java.lang.ClassLoader)"
              },
              {
                "type": "CtInvocation",
                "value": "make()"
              },
              {
                "type": "CtInvocation",
                "value": "annotateType()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.assertj.core.internal.bytebuddy.dynamic.DynamicType$Builder classDefinition"
              },
              {
                "type": "CtExecutableReference",
                "value": "annotateType()"
              },
              {
                "type": "CtInvocation",
                "value": "build()"
              },
              {
                "type": "CtInvocation",
                "value": "ofType(java.lang.Class)"
              },
              {
                "type": "CtTypeAccess",
                "value": "AnnotationDescription.Builder"
              },
              {
                "type": "CtExecutableReference",
                "value": "ofType(java.lang.Class)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "build()"
              },
              {
                "type": "CtExecutableReference",
                "value": "make()"
              },
              {
                "type": "CtExecutableReference",
                "value": "load(java.lang.ClassLoader)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.Class.getClassLoader()"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.Class class"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.Class.getClassLoader()"
              },
              {
                "type": "CtTypeAccess",
                "value": "ClassLoadingStrategy.Default.INJECTION"
              },
              {
                "type": "CtExecutableReference",
                "value": "getLoaded()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "static class ApplicationConfigCacheInstance {",
                "type": "DELETE",
                "lineNo": 255
              }
            ],
            "targetChanges": [
              {
                "line": "static final class ApplicationConfigCacheInstance {",
                "type": "ADD",
                "lineNo": 283
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$ApplicationConfigCacheInstance"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$ApplicationConfigCacheInstance"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "private ApplicationConfigCacheInstance() {",
                "type": "ADD",
                "lineNo": 289
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 291
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.tars.cache.ApplicationConfigCache$ApplicationConfigCacheInstance.ApplicationConfigCacheInstance()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-tars/src/main/java/org/apache/shenyu/plugin/tars/handler/TarsPluginDataHandler.java",
        "aPath": "shenyu-plugin/shenyu-plugin-tars/src/main/java/org/apache/shenyu/plugin/tars/handler/TarsPluginDataHandler.java",
        "name": "org.apache.shenyu.plugin.tars.handler.TarsPluginDataHandler",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "pluginData.setName(pluginData.getName() + \" tested\");",
                "type": "ADD",
                "lineNo": 35
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData.setName(String)"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData.setName(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData.getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData.getName()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String ' tested'"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-tars/src/main/java/org/apache/shenyu/plugin/tars/proxy/TarsInvokePrxList.java",
        "aPath": "shenyu-plugin/shenyu-plugin-tars/src/main/java/org/apache/shenyu/plugin/tars/proxy/TarsInvokePrxList.java",
        "name": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrxList",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "private CopyOnWriteArrayList<TarsInvokePrx> tarsInvokePrxList;",
                "type": "DELETE",
                "lineNo": 28
              }
            ],
            "targetChanges": [
              {
                "line": "private final List<TarsInvokePrx> tarsInvokePrxList;",
                "type": "ADD",
                "lineNo": 29
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtField",
                "value": "java.util.concurrent.CopyOnWriteArrayList tarsInvokePrxList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CopyOnWriteArrayList"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrx"
              }
            ],
            "targetElements": [
              {
                "type": "CtField",
                "value": "java.util.List tarsInvokePrxList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrx"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "tarsInvokePrxList = new CopyOnWriteArrayList<>();",
                "type": "ADD",
                "lineNo": 41
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtFieldWrite",
                "value": "java.util.List tarsInvokePrxList"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.concurrent.CopyOnWriteArrayList.CopyOnWriteArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CopyOnWriteArrayList"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "* @param tarsInvokePrxList the tars invoke prx list",
                "type": "DELETE",
                "lineNo": 45
              }
            ],
            "type": "DELETE",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "public TarsInvokePrxList(final CopyOnWriteArrayList<TarsInvokePrx> tarsInvokePrxList,",
                "type": "DELETE",
                "lineNo": 50
              },
              {
                "line": "final Method method,",
                "type": "DELETE",
                "lineNo": 51
              }
            ],
            "targetChanges": [
              {
                "line": "public TarsInvokePrxList(final Method method,",
                "type": "ADD",
                "lineNo": 51
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrxList.TarsInvokePrxList(CopyOnWriteArrayList,Method,Class[],String[])"
              },
              {
                "type": "CtParameter",
                "value": "java.util.concurrent.CopyOnWriteArrayList tarsInvokePrxList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CopyOnWriteArrayList"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrx"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.reflect.Method method"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.Method"
              }
            ],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrxList.TarsInvokePrxList(Method,Class[],String[])"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.reflect.Method method"
              },
              {
                "type": "CtTypeReference",
                "value": "java.lang.reflect.Method"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "this.tarsInvokePrxList = tarsInvokePrxList;",
                "type": "DELETE",
                "lineNo": 54
              }
            ],
            "targetChanges": [
              {
                "line": "this.tarsInvokePrxList = new CopyOnWriteArrayList<>();",
                "type": "ADD",
                "lineNo": 54
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtFieldWrite",
                "value": "java.util.concurrent.CopyOnWriteArrayList tarsInvokePrxList"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.CopyOnWriteArrayList tarsInvokePrxList"
              }
            ],
            "targetElements": [
              {
                "type": "CtFieldWrite",
                "value": "java.util.List tarsInvokePrxList"
              },
              {
                "type": "CtConstructorCall",
                "value": "java.util.concurrent.CopyOnWriteArrayList.CopyOnWriteArrayList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CopyOnWriteArrayList"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public CopyOnWriteArrayList<TarsInvokePrx> getTarsInvokePrxList() {",
                "type": "DELETE",
                "lineNo": 65
              }
            ],
            "targetChanges": [
              {
                "line": "public List<TarsInvokePrx> getTarsInvokePrxList() {",
                "type": "ADD",
                "lineNo": 65
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrxList.getTarsInvokePrxList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CopyOnWriteArrayList"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrx"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrxList.getTarsInvokePrxList()"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrx"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "public void setTarsInvokePrxList(final CopyOnWriteArrayList<TarsInvokePrx> tarsInvokePrxList) {",
                "type": "DELETE",
                "lineNo": 74
              },
              {
                "line": "this.tarsInvokePrxList = tarsInvokePrxList;",
                "type": "DELETE",
                "lineNo": 75
              }
            ],
            "targetChanges": [
              {
                "line": "public void addTarsInvokePrxList(final List<TarsInvokePrx> tarsInvokePrxList) {",
                "type": "ADD",
                "lineNo": 74
              },
              {
                "line": "this.tarsInvokePrxList.addAll(tarsInvokePrxList);",
                "type": "ADD",
                "lineNo": 75
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrxList.setTarsInvokePrxList(CopyOnWriteArrayList)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.util.concurrent.CopyOnWriteArrayList tarsInvokePrxList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.concurrent.CopyOnWriteArrayList"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrx"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.util.concurrent.CopyOnWriteArrayList tarsInvokePrxList"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.concurrent.CopyOnWriteArrayList tarsInvokePrxList"
              }
            ],
            "targetElements": [
              {
                "type": "CtMethod",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrxList.addTarsInvokePrxList(List)"
              },
              {
                "type": "CtTypeReference",
                "value": "void"
              },
              {
                "type": "CtParameter",
                "value": "java.util.List tarsInvokePrxList"
              },
              {
                "type": "CtTypeReference",
                "value": "java.util.List"
              },
              {
                "type": "CtTypeReference",
                "value": "org.apache.shenyu.plugin.tars.proxy.TarsInvokePrx"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.List.addAll(Collection)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.util.List tarsInvokePrxList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.List.addAll(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List tarsInvokePrxList"
              }
            ]
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-tars/src/main/java/org/apache/shenyu/plugin/tars/util/PrxInfoUtil.java",
        "aPath": "shenyu-plugin/shenyu-plugin-tars/src/main/java/org/apache/shenyu/plugin/tars/util/PrxInfoUtil.java",
        "name": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class PrxInfoUtil {",
                "type": "DELETE",
                "lineNo": 30
              }
            ],
            "targetChanges": [
              {
                "line": "public final class PrxInfoUtil {",
                "type": "ADD",
                "lineNo": 30
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "private PrxInfoUtil() {",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 87
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.tars.util.PrxInfoUtil.PrxInfoUtil()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "* @param body body",
                "type": "DELETE",
                "lineNo": 138
              }
            ],
            "targetChanges": [
              {
                "line": "* @param body       body",
                "type": "ADD",
                "lineNo": 141
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-tars/src/main/java/org/apache/shenyu/plugin/tars/util/ReturnValueResolver.java",
        "aPath": "shenyu-plugin/shenyu-plugin-tars/src/main/java/org/apache/shenyu/plugin/tars/util/ReturnValueResolver.java",
        "name": "org.apache.shenyu.plugin.tars.util.ReturnValueResolver",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "public class ReturnValueResolver {",
                "type": "DELETE",
                "lineNo": 31
              }
            ],
            "targetChanges": [
              {
                "line": "public final class ReturnValueResolver {",
                "type": "ADD",
                "lineNo": 31
              },
              {
                "line": "@SuppressWarnings(\"rawtypes\")",
                "type": "ADD",
                "lineNo": 33
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.tars.util.ReturnValueResolver"
              }
            ],
            "targetElements": [
              {
                "type": "CtClass",
                "value": "org.apache.shenyu.plugin.tars.util.ReturnValueResolver"
              },
              {
                "type": "CtAnnotation",
                "value": "java.lang.SuppressWarnings"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'rawtypes'"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [
              {
                "line": "private ReturnValueResolver() {",
                "type": "ADD",
                "lineNo": 48
              },
              {
                "line": "}",
                "type": "ADD",
                "lineNo": 49
              }
            ],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtConstructor",
                "value": "org.apache.shenyu.plugin.tars.util.ReturnValueResolver.ReturnValueResolver()"
              }
            ]
          },
          {
            "targetChanges": [
              {
                "line": "@SuppressWarnings(\"all\")",
                "type": "ADD",
                "lineNo": 58
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtAnnotation",
                "value": "java.lang.SuppressWarnings"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'all'"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-tars/src/test/java/org/apache/shenyu/plugin/tars/handler/TarsPluginDataHandlerTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-tars/src/test/java/org/apache/shenyu/plugin/tars/handler/TarsPluginDataHandlerTest.java",
        "name": "org.apache.shenyu.plugin.tars.handler.TarsPluginDataHandlerTest",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "targetChanges": [
              {
                "line": "assertTrue(pluginData.getName().endsWith(\"tested\"));",
                "type": "ADD",
                "lineNo": 47
              }
            ],
            "type": "ADD",
            "sourceElements": [],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertTrue(boolean)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertTrue(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "java.lang.String.endsWith(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.PluginData.getName()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.PluginData pluginData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.PluginData.getName()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.endsWith(String)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'tested'"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-uri/src/test/java/org/apache/shenyu/plugin/uri/URIPluginTest.java",
        "aPath": "shenyu-plugin/shenyu-plugin-uri/src/test/java/org/apache/shenyu/plugin/uri/URIPluginTest.java",
        "name": "org.apache.shenyu.plugin.uri.URIPluginTest",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "assertEquals(exchange.getAttributes().get(Constants.HTTP_URI).toString(), \"http://localhost:8090?queryParam=Hello,World\");",
                "type": "DELETE",
                "lineNo": 79
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(\"http://localhost:8090?queryParam=Hello,World\", exchange.getAttributes().get(Constants.HTTP_URI).toString());",
                "type": "ADD",
                "lineNo": 79
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(<unknown>,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(<unknown>,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "toString()"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtExecutableReference",
                "value": "toString()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http://localhost:8090?queryParam=Hello,World'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http://localhost:8090?queryParam=Hello,World'"
              },
              {
                "type": "CtInvocation",
                "value": "toString()"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtExecutableReference",
                "value": "toString()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertEquals(exchange.getAttributes().get(Constants.HTTP_URI).toString(), \"https://localhost/test?queryParam=Hello,World\");",
                "type": "DELETE",
                "lineNo": 85
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(\"https://localhost/test?queryParam=Hello,World\", exchange.getAttributes().get(Constants.HTTP_URI).toString());",
                "type": "ADD",
                "lineNo": 85
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(<unknown>,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(<unknown>,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "toString()"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtExecutableReference",
                "value": "toString()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'https://localhost/test?queryParam=Hello,World'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'https://localhost/test?queryParam=Hello,World'"
              },
              {
                "type": "CtInvocation",
                "value": "toString()"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtExecutableReference",
                "value": "toString()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertEquals(exchange.getAttributes().get(Constants.HTTP_URI).toString(), \"http://localhost/test?queryParam=Hello,World\");",
                "type": "DELETE",
                "lineNo": 91
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(\"http://localhost/test?queryParam=Hello,World\", exchange.getAttributes().get(Constants.HTTP_URI).toString());",
                "type": "ADD",
                "lineNo": 91
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(<unknown>,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(<unknown>,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "toString()"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtExecutableReference",
                "value": "toString()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http://localhost/test?queryParam=Hello,World'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http://localhost/test?queryParam=Hello,World'"
              },
              {
                "type": "CtInvocation",
                "value": "toString()"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtExecutableReference",
                "value": "toString()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertEquals(exchange.getAttributes().get(Constants.HTTP_URI).toString(), \"http://localhost:8090/rewrite?queryParam=Hello,World\");",
                "type": "DELETE",
                "lineNo": 97
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(\"http://localhost:8090/rewrite?queryParam=Hello,World\", exchange.getAttributes().get(Constants.HTTP_URI).toString());",
                "type": "ADD",
                "lineNo": 97
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(<unknown>,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(<unknown>,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "toString()"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtExecutableReference",
                "value": "toString()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http://localhost:8090/rewrite?queryParam=Hello,World'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http://localhost:8090/rewrite?queryParam=Hello,World'"
              },
              {
                "type": "CtInvocation",
                "value": "toString()"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtExecutableReference",
                "value": "toString()"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "assertEquals(exchange.getAttributes().get(Constants.HTTP_URI).toString(), \"http://localhost:8090/query?queryParam=Hello,%20World\");",
                "type": "DELETE",
                "lineNo": 110
              }
            ],
            "targetChanges": [
              {
                "line": "assertEquals(\"http://localhost:8090/query?queryParam=Hello,%20World\", exchange.getAttributes().get(Constants.HTTP_URI).toString());",
                "type": "ADD",
                "lineNo": 110
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(<unknown>,java.lang.String)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(<unknown>,java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "toString()"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtExecutableReference",
                "value": "toString()"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http://localhost:8090/query?queryParam=Hello,%20World'"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "assertEquals(java.lang.String,<unknown>)"
              },
              {
                "type": "CtExecutableReference",
                "value": "assertEquals(java.lang.String,<unknown>)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'http://localhost:8090/query?queryParam=Hello,%20World'"
              },
              {
                "type": "CtInvocation",
                "value": "toString()"
              },
              {
                "type": "CtInvocation",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtInvocation",
                "value": "getAttributes()"
              },
              {
                "type": "CtFieldRead",
                "value": "org.springframework.web.server.ServerWebExchange exchange"
              },
              {
                "type": "CtExecutableReference",
                "value": "getAttributes()"
              },
              {
                "type": "CtExecutableReference",
                "value": "get(java.lang.String)"
              },
              {
                "type": "CtFieldRead",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.common.constant.Constants"
              },
              {
                "type": "CtFieldReference",
                "value": "java.lang.String HTTP_URI"
              },
              {
                "type": "CtExecutableReference",
                "value": "toString()"
              }
            ]
          }
        ],
        "is_test_source": true
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-websocket/src/main/java/org/apache/shenyu/plugin/websocket/WebSocketPlugin.java",
        "aPath": "shenyu-plugin/shenyu-plugin-websocket/src/main/java/org/apache/shenyu/plugin/websocket/WebSocketPlugin.java",
        "name": "org.apache.shenyu.plugin.websocket.WebSocketPlugin",
        "hunks": [
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "LOG.error(\"websocket upstream configuration error\uff1a{}\", rule.toString());",
                "type": "DELETE",
                "lineNo": 87
              }
            ],
            "targetChanges": [
              {
                "line": "LOG.error(\"websocket upstream configuration error\uff1a{}\", rule);",
                "type": "ADD",
                "lineNo": 88
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'websocket upstream configuration error\uff1a{}'"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.RuleData.toString()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData rule"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.RuleData.toString()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtFieldRead",
                "value": "org.slf4j.Logger LOG"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.slf4j.Logger.error(String,Object)"
              },
              {
                "type": "CtLiteral",
                "value": "java.lang.String 'websocket upstream configuration error\uff1a{}'"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.RuleData rule"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "if (CollectionUtils.isNotEmpty(protocols)) {",
                "type": "DELETE",
                "lineNo": 115
              },
              {
                "line": "protocols = protocols",
                "type": "DELETE",
                "lineNo": 116
              },
              {
                "line": ".stream().flatMap(header -> Arrays.stream(StringUtils.commaDelimitedListToStringArray(header)))",
                "type": "DELETE",
                "lineNo": 117
              },
              {
                "line": ".map(String::trim).collect(Collectors.toList());",
                "type": "DELETE",
                "lineNo": 118
              }
            ],
            "targetChanges": [
              {
                "line": "if (CollectionUtils.isEmpty(protocols)) {",
                "type": "ADD",
                "lineNo": 116
              },
              {
                "line": "return protocols;",
                "type": "ADD",
                "lineNo": 117
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.collections4.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List protocols"
              },
              {
                "type": "CtVariableWrite",
                "value": "java.util.List protocols"
              },
              {
                "type": "CtInvocation",
                "value": "collect(java.util.stream.Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.flatMap(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List protocols"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.flatMap(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String header"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Arrays.stream(int[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Arrays"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Arrays.stream(int[])"
              },
              {
                "type": "CtInvocation",
                "value": "commaDelimitedListToStringArray(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.util.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "commaDelimitedListToStringArray(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String header"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.lang.String.trim()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.trim()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "collect(java.util.stream.Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.collections4.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.collections4.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.collections4.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List protocols"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List protocols"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "return protocols;",
                "type": "DELETE",
                "lineNo": 120
              }
            ],
            "targetChanges": [
              {
                "line": "return protocols.stream()",
                "type": "ADD",
                "lineNo": 119
              },
              {
                "line": ".flatMap(header -> Arrays.stream(StringUtils.commaDelimitedListToStringArray(header)))",
                "type": "ADD",
                "lineNo": 120
              },
              {
                "line": ".map(String::trim)",
                "type": "ADD",
                "lineNo": 121
              },
              {
                "line": ".collect(Collectors.toList());",
                "type": "ADD",
                "lineNo": 122
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "java.util.List protocols"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "collect(java.util.stream.Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "map()"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.flatMap(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List protocols"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.flatMap(Function)"
              },
              {
                "type": "CtParameter",
                "value": "java.lang.String header"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Arrays.stream(int[])"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Arrays"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Arrays.stream(int[])"
              },
              {
                "type": "CtInvocation",
                "value": "commaDelimitedListToStringArray(java.lang.String)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.springframework.util.StringUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "commaDelimitedListToStringArray(java.lang.String)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.lang.String header"
              },
              {
                "type": "CtExecutableReference",
                "value": "map()"
              },
              {
                "type": "CtExecutableReferenceExpression",
                "value": "java.lang.String.trim()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.lang.String.trim()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.lang.String"
              },
              {
                "type": "CtExecutableReference",
                "value": "collect(java.util.stream.Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "if (protocols != null) {",
                "type": "DELETE",
                "lineNo": 177
              },
              {
                "line": "this.subProtocols = protocols;",
                "type": "DELETE",
                "lineNo": 178
              },
              {
                "line": "} else {",
                "type": "DELETE",
                "lineNo": 179
              },
              {
                "line": "this.subProtocols = Collections.emptyList();",
                "type": "DELETE",
                "lineNo": 180
              },
              {
                "line": "}",
                "type": "DELETE",
                "lineNo": 181
              }
            ],
            "targetChanges": [
              {
                "line": "this.subProtocols = ObjectUtils.defaultIfNull(protocols, Collections.emptyList());",
                "type": "ADD",
                "lineNo": 179
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtVariableRead",
                "value": "java.util.List protocols"
              },
              {
                "type": "CtLiteral",
                "value": "<nulltype> 'null'"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.util.List subProtocols"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List protocols"
              },
              {
                "type": "CtFieldWrite",
                "value": "java.util.List subProtocols"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collections.emptyList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collections.emptyList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtFieldWrite",
                "value": "java.util.List subProtocols"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.lang3.ObjectUtils.defaultIfNull(Object,Object)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.lang3.ObjectUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.lang3.ObjectUtils.defaultIfNull(Object,Object)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List protocols"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collections.emptyList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.Collections"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collections.emptyList()"
              }
            ]
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          }
        ],
        "is_test_source": false
      },
      {
        "bPath": "shenyu-plugin/shenyu-plugin-websocket/src/main/java/org/apache/shenyu/plugin/websocket/handler/WebSocketPluginDataHandler.java",
        "aPath": "shenyu-plugin/shenyu-plugin-websocket/src/main/java/org/apache/shenyu/plugin/websocket/handler/WebSocketPluginDataHandler.java",
        "name": "org.apache.shenyu.plugin.websocket.handler.WebSocketPluginDataHandler",
        "hunks": [
          {
            "sourceChanges": [
              {
                "line": "if (CollectionUtils.isEmpty(upstreamList)) {",
                "type": "DELETE",
                "lineNo": 49
              },
              {
                "line": "return;",
                "type": "DELETE",
                "lineNo": 50
              }
            ],
            "targetChanges": [
              {
                "line": "if (CollectionUtils.isNotEmpty(upstreamList)) {",
                "type": "ADD",
                "lineNo": 49
              },
              {
                "line": "UpstreamCacheManager.getInstance().submit(selectorData.getId(), convertUpstreamList(upstreamList));",
                "type": "ADD",
                "lineNo": 50
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.collections4.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.collections4.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.collections4.CollectionUtils.isEmpty(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List upstreamList"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.commons.collections4.CollectionUtils"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List upstreamList"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.submit(String,List)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.submit(String,List)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.websocket.handler.WebSocketPluginDataHandler.convertUpstreamList(List)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.websocket.handler.WebSocketPluginDataHandler.convertUpstreamList(List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List upstreamList"
              }
            ]
          },
          {
            "sourceChanges": [
              {
                "line": "UpstreamCacheManager.getInstance().submit(selectorData.getId(), convertUpstreamList(upstreamList));",
                "type": "DELETE",
                "lineNo": 52
              }
            ],
            "type": "DELETE",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.submit(String,List)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.getInstance()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.cache.UpstreamCacheManager.submit(String,List)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.SelectorData selectorData"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.SelectorData.getId()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.plugin.websocket.handler.WebSocketPluginDataHandler.convertUpstreamList(List)"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.plugin.websocket.handler.WebSocketPluginDataHandler.convertUpstreamList(List)"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List upstreamList"
              }
            ],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [],
            "targetChanges": [],
            "type": "MODIFY",
            "sourceElements": [],
            "targetElements": []
          },
          {
            "sourceChanges": [
              {
                "line": "return upstreamList.stream().map(u -> Upstream.builder()",
                "type": "DELETE",
                "lineNo": 79
              },
              {
                "line": ".protocol(u.getProtocol())",
                "type": "DELETE",
                "lineNo": 80
              },
              {
                "line": ".url(u.getUrl())",
                "type": "DELETE",
                "lineNo": 81
              },
              {
                "line": ".weight(u.getWeight())",
                "type": "DELETE",
                "lineNo": 82
              },
              {
                "line": ".status(u.isStatus())",
                "type": "DELETE",
                "lineNo": 83
              },
              {
                "line": ".timestamp(u.getTimestamp())",
                "type": "DELETE",
                "lineNo": 84
              },
              {
                "line": ".warmup(u.getWarmup())",
                "type": "DELETE",
                "lineNo": 85
              },
              {
                "line": ".build()).collect(Collectors.toList());",
                "type": "DELETE",
                "lineNo": 86
              }
            ],
            "targetChanges": [
              {
                "line": "return upstreamList.stream()",
                "type": "ADD",
                "lineNo": 78
              },
              {
                "line": ".map(u -> Upstream.builder()",
                "type": "ADD",
                "lineNo": 79
              },
              {
                "line": ".protocol(u.getProtocol())",
                "type": "ADD",
                "lineNo": 80
              },
              {
                "line": ".url(u.getUrl())",
                "type": "ADD",
                "lineNo": 81
              },
              {
                "line": ".weight(u.getWeight())",
                "type": "ADD",
                "lineNo": 82
              },
              {
                "line": ".status(u.isStatus())",
                "type": "ADD",
                "lineNo": 83
              },
              {
                "line": ".timestamp(u.getTimestamp())",
                "type": "ADD",
                "lineNo": 84
              },
              {
                "line": ".warmup(u.getWarmup())",
                "type": "ADD",
                "lineNo": 85
              },
              {
                "line": ".build())",
                "type": "ADD",
                "lineNo": 86
              },
              {
                "line": ".collect(Collectors.toList());",
                "type": "ADD",
                "lineNo": 87
              }
            ],
            "type": "MODIFY",
            "sourceElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List upstreamList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.warmup(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.timestamp(long)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.status(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.weight(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.url(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.protocol(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream.builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.protocol(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getProtocol()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getProtocol()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.url(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getUrl()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.weight(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getWeight()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getWeight()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.status(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.isStatus()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.isStatus()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.timestamp(long)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getTimestamp()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getTimestamp()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.warmup(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getWarmup()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getWarmup()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.build()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ],
            "targetElements": [
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtVariableRead",
                "value": "java.util.List upstreamList"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.Collection.stream()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.map(Function)"
              },
              {
                "type": "CtParameter",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.build()"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.warmup(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.timestamp(long)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.status(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.weight(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.url(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.protocol(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream.builder()"
              },
              {
                "type": "CtTypeAccess",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream.builder()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.protocol(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getProtocol()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getProtocol()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.url(String)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getUrl()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getUrl()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.weight(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getWeight()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getWeight()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.status(boolean)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.isStatus()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.isStatus()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.timestamp(long)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getTimestamp()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getTimestamp()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.warmup(int)"
              },
              {
                "type": "CtInvocation",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getWarmup()"
              },
              {
                "type": "CtVariableRead",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream u"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.common.dto.convert.selector.WebSocketUpstream.getWarmup()"
              },
              {
                "type": "CtExecutableReference",
                "value": "org.apache.shenyu.loadbalancer.entity.Upstream$Builder.build()"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Stream.collect(Collector)"
              },
              {
                "type": "CtInvocation",
                "value": "java.util.stream.Collectors.toList()"
              },
              {
                "type": "CtTypeAccess",
                "value": "java.util.stream.Collectors"
              },
              {
                "type": "CtExecutableReference",
                "value": "java.util.stream.Collectors.toList()"
              }
            ]
          }
        ],
        "is_test_source": false
      }
    ]
  }
]