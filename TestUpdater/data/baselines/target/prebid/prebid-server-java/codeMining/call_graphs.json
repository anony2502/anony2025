{
  "8b40c0322": {
    "org.prebid.server.auction.ImplicitParametersExtractorTest.gpcFromShouldReturn1OnInteger()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.ImplicitParametersExtractorTest.gpcFromShouldReturn1OnInteger()",
        "path": "src/test/java/org/prebid/server/auction/ImplicitParametersExtractorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.ImplicitParametersExtractorTest.gpcFromShouldReturn1OnInteger()",
          "path": "src/test/java/org/prebid/server/auction/ImplicitParametersExtractorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.ImplicitParametersExtractor.gpcFrom(HttpRequestContext)",
          "path": "src/main/java/org/prebid/server/auction/ImplicitParametersExtractor.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap.builder()",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 1
        },
        {
          "id": 3,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap$Builder.build()",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 1
        },
        {
          "id": 4,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap$Builder.add(CharSequence,CharSequence)",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 1
        },
        {
          "id": 5,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap$Builder.Builder()",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 2
        },
        {
          "id": 6,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap.CaseInsensitiveMultiMap(MultiMap)",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1,
          2,
          3,
          4
        ],
        "2": [
          5
        ],
        "3": [
          6
        ]
      }
    },
    "org.prebid.server.auction.ImplicitParametersExtractorTest.gpcFromShouldReturn1OnString()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.ImplicitParametersExtractorTest.gpcFromShouldReturn1OnString()",
        "path": "src/test/java/org/prebid/server/auction/ImplicitParametersExtractorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.ImplicitParametersExtractorTest.gpcFromShouldReturn1OnString()",
          "path": "src/test/java/org/prebid/server/auction/ImplicitParametersExtractorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.ImplicitParametersExtractor.gpcFrom(HttpRequestContext)",
          "path": "src/main/java/org/prebid/server/auction/ImplicitParametersExtractor.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap.builder()",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 1
        },
        {
          "id": 3,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap$Builder.build()",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 1
        },
        {
          "id": 4,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap$Builder.add(CharSequence,CharSequence)",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 1
        },
        {
          "id": 5,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap$Builder.Builder()",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 2
        },
        {
          "id": 6,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap.CaseInsensitiveMultiMap(MultiMap)",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1,
          2,
          3,
          4
        ],
        "2": [
          5
        ],
        "3": [
          6
        ]
      }
    }
  },
  "d5af622b2": {
    "org.prebid.server.activity.infrastructure.privacy.usnat.reader.USNationalGppReaderTest.getMspaOptOutOptionModeShouldReturnExpectedResult()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.activity.infrastructure.privacy.usnat.reader.USNationalGppReaderTest.getMspaOptOutOptionModeShouldReturnExpectedResult()",
        "path": "src/test/java/org/prebid/server/activity/infrastructure/privacy/usnat/reader/USNationalGppReaderTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.activity.infrastructure.privacy.usnat.reader.USNationalGppReaderTest.getMspaOptOutOptionModeShouldReturnExpectedResult()",
          "path": "src/test/java/org/prebid/server/activity/infrastructure/privacy/usnat/reader/USNationalGppReaderTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.activity.infrastructure.privacy.usnat.reader.USNationalGppReader.getMspaOptOutOptionMode()",
          "path": "src/main/java/org/prebid/server/activity/infrastructure/privacy/usnat/reader/USNationalGppReader.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.util.ObjectUtil.getIfNotNull(Object,Function)",
          "path": "src/main/java/org/prebid/server/util/ObjectUtil.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2
        ]
      }
    },
    "org.prebid.server.activity.infrastructure.privacy.uscustomlogic.reader.USConnecticutGppReaderTest.getMspaOptOutOptionModeShouldReturnExpectedResult()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.activity.infrastructure.privacy.uscustomlogic.reader.USConnecticutGppReaderTest.getMspaOptOutOptionModeShouldReturnExpectedResult()",
        "path": "src/test/java/org/prebid/server/activity/infrastructure/privacy/uscustomlogic/reader/USConnecticutGppReaderTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.activity.infrastructure.privacy.uscustomlogic.reader.USConnecticutGppReaderTest.getMspaOptOutOptionModeShouldReturnExpectedResult()",
          "path": "src/test/java/org/prebid/server/activity/infrastructure/privacy/uscustomlogic/reader/USConnecticutGppReaderTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.activity.infrastructure.privacy.uscustomlogic.reader.USConnecticutGppReader.getMspaOptOutOptionMode()",
          "path": "src/main/java/org/prebid/server/activity/infrastructure/privacy/uscustomlogic/reader/USConnecticutGppReader.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.util.ObjectUtil.getIfNotNull(Object,Function)",
          "path": "src/main/java/org/prebid/server/util/ObjectUtil.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2
        ]
      }
    }
  },
  "12f8d379c": {
    "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequesterTest.requestBidsShouldReturnBidderSeatBidWithoutBidderBidsAndWithError()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequesterTest.requestBidsShouldReturnBidderSeatBidWithoutBidderBidsAndWithError()",
        "path": "src/test/java/org/prebid/server/deals/simulation/SimulationAwareHttpBidderRequesterTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequesterTest.requestBidsShouldReturnBidderSeatBidWithoutBidderBidsAndWithError()",
          "path": "src/test/java/org/prebid/server/deals/simulation/SimulationAwareHttpBidderRequesterTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.bidder.model.BidderError.failedToRequestBids(String)",
          "path": "src/main/java/org/prebid/server/bidder/model/BidderError.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.bidder.model.BidderSeatBid.of(List)",
          "path": "src/main/java/org/prebid/server/bidder/model/BidderSeatBid.java",
          "depth": 1
        },
        {
          "id": 3,
          "name": "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequester.setBidRates(Map)",
          "path": "src/main/java/org/prebid/server/deals/simulation/SimulationAwareHttpBidderRequester.java",
          "depth": 1
        },
        {
          "id": 4,
          "name": "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequester.requestBids(Bidder,BidderRequest,Timeout,CaseInsensitiveMultiMap,BidderAliases,boolean)",
          "path": "src/main/java/org/prebid/server/deals/simulation/SimulationAwareHttpBidderRequester.java",
          "depth": 1
        },
        {
          "id": 5,
          "name": "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequester.createBid(Imp,String,String)",
          "path": "src/main/java/org/prebid/server/deals/simulation/SimulationAwareHttpBidderRequester.java",
          "depth": 2
        },
        {
          "id": 6,
          "name": "org.prebid.server.exception.PreBidException.PreBidException(String)",
          "path": "src/main/java/org/prebid/server/exception/PreBidException.java",
          "depth": 3
        },
        {
          "id": 7,
          "name": "org.prebid.server.deals.LineItemService.getLineItemById(String)",
          "path": "src/main/java/org/prebid/server/deals/LineItemService.java",
          "depth": 3
        },
        {
          "id": 8,
          "name": "org.prebid.server.deals.lineitem.LineItem.getCpm()",
          "path": "src/main/java/org/prebid/server/deals/lineitem/LineItem.java",
          "depth": 3
        },
        {
          "id": 9,
          "name": "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequester.getLineItemSizes(Imp)",
          "path": "src/main/java/org/prebid/server/deals/simulation/SimulationAwareHttpBidderRequester.java",
          "depth": 3
        }
      ],
      "graph": {
        "0": [
          1,
          2,
          3,
          4
        ],
        "2": [
          2
        ],
        "4": [
          1,
          2,
          5
        ],
        "5": [
          6,
          7,
          8,
          9
        ]
      }
    }
  },
  "5be24a131": {
    "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequesterTest.requestBidsShouldReturnBidderSeatBidWithoutBidderBidsAndWithError()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequesterTest.requestBidsShouldReturnBidderSeatBidWithoutBidderBidsAndWithError()",
        "path": "src/test/java/org/prebid/server/deals/simulation/SimulationAwareHttpBidderRequesterTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequesterTest.requestBidsShouldReturnBidderSeatBidWithoutBidderBidsAndWithError()",
          "path": "src/test/java/org/prebid/server/deals/simulation/SimulationAwareHttpBidderRequesterTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.bidder.model.BidderError.failedToRequestBids(String)",
          "path": "src/main/java/org/prebid/server/bidder/model/BidderError.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequester.setBidRates(Map)",
          "path": "src/main/java/org/prebid/server/deals/simulation/SimulationAwareHttpBidderRequester.java",
          "depth": 1
        },
        {
          "id": 3,
          "name": "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequester.requestBids(Bidder,BidderRequest,Timeout,CaseInsensitiveMultiMap,BidderAliases,boolean)",
          "path": "src/main/java/org/prebid/server/deals/simulation/SimulationAwareHttpBidderRequester.java",
          "depth": 1
        },
        {
          "id": 4,
          "name": "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequester.createBid(Imp,String,String)",
          "path": "src/main/java/org/prebid/server/deals/simulation/SimulationAwareHttpBidderRequester.java",
          "depth": 2
        },
        {
          "id": 5,
          "name": "org.prebid.server.bidder.model.BidderSeatBid.of(List)",
          "path": "src/main/java/org/prebid/server/bidder/model/BidderSeatBid.java",
          "depth": 2
        },
        {
          "id": 6,
          "name": "org.prebid.server.exception.PreBidException.PreBidException(String)",
          "path": "src/main/java/org/prebid/server/exception/PreBidException.java",
          "depth": 3
        },
        {
          "id": 7,
          "name": "org.prebid.server.deals.LineItemService.getLineItemById(String)",
          "path": "src/main/java/org/prebid/server/deals/LineItemService.java",
          "depth": 3
        },
        {
          "id": 8,
          "name": "org.prebid.server.deals.lineitem.LineItem.getCpm()",
          "path": "src/main/java/org/prebid/server/deals/lineitem/LineItem.java",
          "depth": 3
        },
        {
          "id": 9,
          "name": "org.prebid.server.deals.simulation.SimulationAwareHttpBidderRequester.getLineItemSizes(Imp)",
          "path": "src/main/java/org/prebid/server/deals/simulation/SimulationAwareHttpBidderRequester.java",
          "depth": 3
        }
      ],
      "graph": {
        "0": [
          1,
          2,
          3
        ],
        "3": [
          1,
          4,
          5
        ],
        "4": [
          6,
          7,
          8,
          9
        ]
      }
    }
  },
  "4b9fb727c": {
    "org.prebid.server.auction.ImplicitParametersExtractorTest.gpcFromShouldReturn1OnInteger()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.ImplicitParametersExtractorTest.gpcFromShouldReturn1OnInteger()",
        "path": "src/test/java/org/prebid/server/auction/ImplicitParametersExtractorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.ImplicitParametersExtractorTest.gpcFromShouldReturn1OnInteger()",
          "path": "src/test/java/org/prebid/server/auction/ImplicitParametersExtractorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.ImplicitParametersExtractor.gpcFrom(HttpRequestContext)",
          "path": "src/main/java/org/prebid/server/auction/ImplicitParametersExtractor.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap.builder()",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 1
        },
        {
          "id": 3,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap$Builder.build()",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 1
        },
        {
          "id": 4,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap$Builder.add(CharSequence,CharSequence)",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 1
        },
        {
          "id": 5,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap$Builder.Builder()",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 2
        },
        {
          "id": 6,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap.CaseInsensitiveMultiMap(MultiMap)",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1,
          2,
          3,
          4
        ],
        "2": [
          5
        ],
        "3": [
          6
        ]
      }
    },
    "org.prebid.server.auction.ImplicitParametersExtractorTest.gpcFromShouldReturn1OnString()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.ImplicitParametersExtractorTest.gpcFromShouldReturn1OnString()",
        "path": "src/test/java/org/prebid/server/auction/ImplicitParametersExtractorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.ImplicitParametersExtractorTest.gpcFromShouldReturn1OnString()",
          "path": "src/test/java/org/prebid/server/auction/ImplicitParametersExtractorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.ImplicitParametersExtractor.gpcFrom(HttpRequestContext)",
          "path": "src/main/java/org/prebid/server/auction/ImplicitParametersExtractor.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap.builder()",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 1
        },
        {
          "id": 3,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap$Builder.build()",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 1
        },
        {
          "id": 4,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap$Builder.add(CharSequence,CharSequence)",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 1
        },
        {
          "id": 5,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap$Builder.Builder()",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 2
        },
        {
          "id": 6,
          "name": "org.prebid.server.model.CaseInsensitiveMultiMap.CaseInsensitiveMultiMap(MultiMap)",
          "path": "src/main/java/org/prebid/server/model/CaseInsensitiveMultiMap.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1,
          2,
          3,
          4
        ],
        "2": [
          5
        ],
        "3": [
          6
        ]
      }
    }
  },
  "e02e0942f": {
    "org.prebid.server.bidder.adpone.AdponeBidderTest.makeHttpRequestsShouldReturnErrorIfFirstImpExtCannotBeParsed()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.bidder.adpone.AdponeBidderTest.makeHttpRequestsShouldReturnErrorIfFirstImpExtCannotBeParsed()",
        "path": "src/test/java/org/prebid/server/bidder/adpone/AdponeBidderTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.bidder.adpone.AdponeBidderTest.makeHttpRequestsShouldReturnErrorIfFirstImpExtCannotBeParsed()",
          "path": "src/test/java/org/prebid/server/bidder/adpone/AdponeBidderTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.bidder.adpone.AdponeBidder.makeHttpRequests(BidRequest)",
          "path": "src/main/java/org/prebid/server/bidder/adpone/AdponeBidder.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.bidder.adpone.AdponeBidderTest.givenBidRequest(JsonNode)",
          "path": "src/test/java/org/prebid/server/bidder/adpone/AdponeBidderTest.java",
          "depth": 1
        },
        {
          "id": 3,
          "name": "org.prebid.server.json.JacksonMapper.mapper()",
          "path": "src/main/java/org/prebid/server/json/JacksonMapper.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.json.JacksonMapper.encodeToBytes(Object)",
          "path": "src/main/java/org/prebid/server/json/JacksonMapper.java",
          "depth": 2
        },
        {
          "id": 5,
          "name": "org.prebid.server.bidder.model.BidderError.badInput(String)",
          "path": "src/main/java/org/prebid/server/bidder/model/BidderError.java",
          "depth": 2
        },
        {
          "id": 6,
          "name": "org.prebid.server.bidder.model.Result.withError(BidderError)",
          "path": "src/main/java/org/prebid/server/bidder/model/Result.java",
          "depth": 2
        },
        {
          "id": 7,
          "name": "org.prebid.server.proto.openrtb.ext.ExtPrebid.of(Object,Object)",
          "path": "src/main/java/org/prebid/server/proto/openrtb/ext/ExtPrebid.java",
          "depth": 2
        },
        {
          "id": 8,
          "name": "org.prebid.server.json.EncodeException.EncodeException(String)",
          "path": "src/main/java/org/prebid/server/json/EncodeException.java",
          "depth": 3
        },
        {
          "id": 9,
          "name": "org.prebid.server.bidder.model.BidderError.of(String,Type)",
          "path": "src/main/java/org/prebid/server/bidder/model/BidderError.java",
          "depth": 3
        }
      ],
      "graph": {
        "0": [
          1,
          2
        ],
        "1": [
          3,
          4,
          5,
          6
        ],
        "2": [
          7
        ],
        "4": [
          8
        ],
        "5": [
          9
        ],
        "7": [
          7
        ],
        "9": [
          9
        ]
      }
    },
    "org.prebid.server.bidder.ucfunnel.UcfunnelBidderTest.makeHttpRequestsShouldCreateCorrectURL()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.bidder.ucfunnel.UcfunnelBidderTest.makeHttpRequestsShouldCreateCorrectURL()",
        "path": "src/test/java/org/prebid/server/bidder/ucfunnel/UcfunnelBidderTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.bidder.ucfunnel.UcfunnelBidderTest.makeHttpRequestsShouldCreateCorrectURL()",
          "path": "src/test/java/org/prebid/server/bidder/ucfunnel/UcfunnelBidderTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.proto.openrtb.ext.ExtPrebid.of(Object,Object)",
          "path": "src/main/java/org/prebid/server/proto/openrtb/ext/ExtPrebid.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.bidder.ucfunnel.UcfunnelBidder.makeHttpRequests(BidRequest)",
          "path": "src/main/java/org/prebid/server/bidder/ucfunnel/UcfunnelBidder.java",
          "depth": 1
        },
        {
          "id": 3,
          "name": "org.prebid.server.bidder.ucfunnel.UcfunnelBidder.parseImpExt(Imp)",
          "path": "src/main/java/org/prebid/server/bidder/ucfunnel/UcfunnelBidder.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.util.BidderUtil.defaultRequest(BidRequest,String,JacksonMapper)",
          "path": "src/main/java/org/prebid/server/util/BidderUtil.java",
          "depth": 2
        },
        {
          "id": 5,
          "name": "org.prebid.server.bidder.model.Result.withErrors(List)",
          "path": "src/main/java/org/prebid/server/bidder/model/Result.java",
          "depth": 2
        },
        {
          "id": 6,
          "name": "org.prebid.server.bidder.model.BidderError.badInput(String)",
          "path": "src/main/java/org/prebid/server/bidder/model/BidderError.java",
          "depth": 2
        },
        {
          "id": 7,
          "name": "org.prebid.server.bidder.model.Result.withError(BidderError)",
          "path": "src/main/java/org/prebid/server/bidder/model/Result.java",
          "depth": 2
        },
        {
          "id": 8,
          "name": "org.prebid.server.json.JacksonMapper.mapper()",
          "path": "src/main/java/org/prebid/server/json/JacksonMapper.java",
          "depth": 3
        },
        {
          "id": 9,
          "name": "org.prebid.server.exception.PreBidException.PreBidException(String,Throwable)",
          "path": "src/main/java/org/prebid/server/exception/PreBidException.java",
          "depth": 3
        },
        {
          "id": 10,
          "name": "org.prebid.server.util.BidderUtil.defaultRequest(BidRequest,MultiMap,String,JacksonMapper)",
          "path": "src/main/java/org/prebid/server/util/BidderUtil.java",
          "depth": 3
        },
        {
          "id": 11,
          "name": "org.prebid.server.bidder.model.BidderError.of(String,Type)",
          "path": "src/main/java/org/prebid/server/bidder/model/BidderError.java",
          "depth": 3
        },
        {
          "id": 12,
          "name": "org.prebid.server.json.JacksonMapper.encodeToBytes(Object)",
          "path": "src/main/java/org/prebid/server/json/JacksonMapper.java",
          "depth": 4
        },
        {
          "id": 13,
          "name": "org.prebid.server.util.BidderUtil.impIds(BidRequest)",
          "path": "src/main/java/org/prebid/server/util/BidderUtil.java",
          "depth": 4
        },
        {
          "id": 14,
          "name": "org.prebid.server.json.EncodeException.EncodeException(String)",
          "path": "src/main/java/org/prebid/server/json/EncodeException.java",
          "depth": 5
        }
      ],
      "graph": {
        "0": [
          1,
          2
        ],
        "1": [
          1
        ],
        "2": [
          3,
          4,
          5,
          6,
          7
        ],
        "3": [
          8,
          9
        ],
        "4": [
          10
        ],
        "6": [
          11
        ],
        "10": [
          12,
          13
        ],
        "11": [
          11
        ],
        "12": [
          14
        ]
      }
    }
  },
  "7cf656a22": {
    "org.prebid.server.auction.PrivacyEnforcementServiceTest.contextFromBidRequestShouldReturnTcfContext()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.PrivacyEnforcementServiceTest.contextFromBidRequestShouldReturnTcfContext()",
        "path": "src/test/java/org/prebid/server/auction/PrivacyEnforcementServiceTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.PrivacyEnforcementServiceTest.contextFromBidRequestShouldReturnTcfContext()",
          "path": "src/test/java/org/prebid/server/auction/PrivacyEnforcementServiceTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.resolveTcfContext(Privacy,String,String,AccountGdprConfig,MetricName,RequestLogInfo,Timeout)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.contextFromBidRequest(AuctionContext)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 1
        },
        {
          "id": 3,
          "name": "org.prebid.server.privacy.gdpr.model.TCStringEmpty.create()",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/model/TCStringEmpty.java",
          "depth": 1
        },
        {
          "id": 4,
          "name": "org.prebid.server.assertion.FutureAssertion.assertThat(Future)",
          "path": "src/test/java/org/prebid/server/assertion/FutureAssertion.java",
          "depth": 1
        },
        {
          "id": 5,
          "name": "org.prebid.server.privacy.model.PrivacyContext.of(Privacy,TcfContext)",
          "path": "src/main/java/org/prebid/server/privacy/model/PrivacyContext.java",
          "depth": 1
        },
        {
          "id": 6,
          "name": "org.prebid.server.settings.model.Account.empty(String)",
          "path": "src/main/java/org/prebid/server/settings/model/Account.java",
          "depth": 1
        },
        {
          "id": 7,
          "name": "org.prebid.server.privacy.gdpr.model.TcfContext.empty()",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/model/TcfContext.java",
          "depth": 2
        },
        {
          "id": 8,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.isGdprEnabled(AccountGdprConfig,MetricName)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 2
        },
        {
          "id": 9,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.prepareTcfContext(Privacy,String,String,RequestLogInfo,Timeout)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 2
        },
        {
          "id": 10,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.resolveIpAddress(Device,Privacy)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 11,
          "name": "org.prebid.server.privacy.PrivacyExtractor.validPrivacyFrom(BidRequest,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 2
        },
        {
          "id": 12,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.accountGdprConfig(Account)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 13,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.requestLogInfo(MetricName,BidRequest,String)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 14,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.resolveAlpha2CountryCode(Device)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 15,
          "name": "org.prebid.server.settings.model.EnabledForRequestType.isEnabledFor(MetricName)",
          "path": "src/main/java/org/prebid/server/settings/model/EnabledForRequestType.java",
          "depth": 3
        },
        {
          "id": 16,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.isCountryInEea(String)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 17,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.maybeMaskIp(String,TCString)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 18,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.inScopeOfGdpr(Boolean)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 19,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.parseConsentString(String,RequestLogInfo)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 20,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.isConsentValid(TCString)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 21,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.inScopeOfGdpr(String)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 22,
          "name": "org.prebid.server.auction.IpAddressHelper.anonymizeIpv6(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 3
        },
        {
          "id": 23,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.isCoppaMaskingRequired(Privacy)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 3
        },
        {
          "id": 24,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.isLmtEnabled(Device)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 3
        },
        {
          "id": 25,
          "name": "org.prebid.server.auction.IpAddressHelper.maskIpv4(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 3
        },
        {
          "id": 26,
          "name": "org.prebid.server.privacy.PrivacyExtractor.extractPrivacy(Regs,User,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 3
        },
        {
          "id": 27,
          "name": "org.prebid.server.geolocation.CountryCodeMapper.mapToAlpha2(String)",
          "path": "src/main/java/org/prebid/server/geolocation/CountryCodeMapper.java",
          "depth": 3
        },
        {
          "id": 28,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.shouldMaskIp(TCString)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 4
        },
        {
          "id": 29,
          "name": "org.prebid.server.auction.IpAddressHelper.toIpAddress(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 4
        },
        {
          "id": 30,
          "name": "org.prebid.server.metric.Metrics.updatePrivacyTcfInvalidMetric()",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 4
        },
        {
          "id": 31,
          "name": "org.prebid.server.metric.Metrics.updatePrivacyTcfMissingMetric()",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 4
        },
        {
          "id": 32,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.toValidResult(String,TCStringParsingResult)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 4
        },
        {
          "id": 33,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.decodeTcString(String,RequestLogInfo,List)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 4
        },
        {
          "id": 34,
          "name": "org.prebid.server.privacy.PrivacyExtractor.toValidPrivacy(String,String,String,Integer,String,List,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 4
        },
        {
          "id": 35,
          "name": "org.prebid.server.auction.IpAddressHelper.isIpPublic(IPAddress)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 5
        },
        {
          "id": 36,
          "name": "org.prebid.server.auction.IpAddressHelper.maskIpv6(IPAddress)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 5
        },
        {
          "id": 37,
          "name": "org.prebid.server.auction.IpAddressHelper.toIpAddressInternal(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 5
        },
        {
          "id": 38,
          "name": "org.prebid.server.metric.PrivacyMetrics.tcf()",
          "path": "src/main/java/org/prebid/server/metric/PrivacyMetrics.java",
          "depth": 5
        },
        {
          "id": 39,
          "name": "org.prebid.server.metric.Metrics.privacy()",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 5
        },
        {
          "id": 40,
          "name": "org.prebid.server.metric.UpdatableMetrics.incCounter(MetricName)",
          "path": "src/main/java/org/prebid/server/metric/UpdatableMetrics.java",
          "depth": 5
        },
        {
          "id": 41,
          "name": "org.prebid.server.metric.Metrics.updatePrivacyTcfRequestsMetric(int)",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 5
        },
        {
          "id": 42,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.logWarn(String,String,RequestLogInfo)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 5
        },
        {
          "id": 43,
          "name": "org.prebid.server.privacy.PrivacyExtractor.toValidCcpa(String,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 5
        },
        {
          "id": 44,
          "name": "org.prebid.server.metric.UpdatableMetrics.incCounter(MetricName,long)",
          "path": "src/main/java/org/prebid/server/metric/UpdatableMetrics.java",
          "depth": 6
        },
        {
          "id": 45,
          "name": "org.prebid.server.metric.TcfMetrics.fromVersion(int)",
          "path": "src/main/java/org/prebid/server/metric/TcfMetrics.java",
          "depth": 6
        },
        {
          "id": 46,
          "name": "org.prebid.server.metric.MetricName.toString()",
          "path": "src/main/java/org/prebid/server/metric/MetricName.java",
          "depth": 6
        },
        {
          "id": 47,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.logMessage(String,String,RequestLogInfo,String)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 6
        },
        {
          "id": 48,
          "name": "org.prebid.server.log.ConditionalLogger.info(String,int)",
          "path": "src/main/java/org/prebid/server/log/ConditionalLogger.java",
          "depth": 6
        },
        {
          "id": 49,
          "name": "org.prebid.server.privacy.ccpa.Ccpa.validateUsPrivacy(String)",
          "path": "src/main/java/org/prebid/server/privacy/ccpa/Ccpa.java",
          "depth": 6
        },
        {
          "id": 50,
          "name": "org.prebid.server.metric.UpdatableMetrics.name(MetricName)",
          "path": "src/main/java/org/prebid/server/metric/UpdatableMetrics.java",
          "depth": 7
        },
        {
          "id": 51,
          "name": "org.prebid.server.exception.PreBidException.PreBidException(String)",
          "path": "src/main/java/org/prebid/server/exception/PreBidException.java",
          "depth": 7
        },
        {
          "id": 52,
          "name": "org.prebid.server.log.ConditionalLogger.log(String,int,Consumer)",
          "path": "src/main/java/org/prebid/server/log/ConditionalLogger.java",
          "depth": 7
        },
        {
          "id": 53,
          "name": "org.prebid.server.privacy.ccpa.Ccpa.agreementSpecified(char,String)",
          "path": "src/main/java/org/prebid/server/privacy/ccpa/Ccpa.java",
          "depth": 7
        }
      ],
      "graph": {
        "0": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "1": [
          7,
          8,
          9
        ],
        "2": [
          1,
          10,
          11,
          12,
          13,
          14
        ],
        "5": [
          5
        ],
        "8": [
          15
        ],
        "9": [
          16,
          17,
          18,
          19,
          20,
          21
        ],
        "10": [
          22,
          23,
          24,
          25
        ],
        "11": [
          26
        ],
        "14": [
          27
        ],
        "17": [
          22,
          25,
          28,
          29
        ],
        "18": [
          21
        ],
        "19": [
          32,
          33,
          3,
          30,
          31
        ],
        "26": [
          34
        ],
        "28": [
          20
        ],
        "29": [
          35,
          36,
          37
        ],
        "30": [
          38,
          39,
          40
        ],
        "31": [
          38,
          39,
          40
        ],
        "32": [
          3,
          41
        ],
        "33": [
          42
        ],
        "34": [
          43
        ],
        "40": [
          44
        ],
        "41": [
          38,
          39,
          40,
          45
        ],
        "42": [
          48,
          46,
          47
        ],
        "43": [
          49
        ],
        "44": [
          50
        ],
        "45": [
          51
        ],
        "48": [
          52
        ],
        "49": [
          51,
          53
        ],
        "53": [
          51
        ]
      }
    },
    "org.prebid.server.auction.PrivacyEnforcementServiceTest.contextFromBidRequestShouldCallResolveTcfContextWithIpv6AnonymizedWhenIpNotPresentAndLmtIsOne()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.PrivacyEnforcementServiceTest.contextFromBidRequestShouldCallResolveTcfContextWithIpv6AnonymizedWhenIpNotPresentAndLmtIsOne()",
        "path": "src/test/java/org/prebid/server/auction/PrivacyEnforcementServiceTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.PrivacyEnforcementServiceTest.contextFromBidRequestShouldCallResolveTcfContextWithIpv6AnonymizedWhenIpNotPresentAndLmtIsOne()",
          "path": "src/test/java/org/prebid/server/auction/PrivacyEnforcementServiceTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.resolveTcfContext(Privacy,String,String,AccountGdprConfig,MetricName,RequestLogInfo,Timeout)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.IpAddressHelper.anonymizeIpv6(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 1
        },
        {
          "id": 3,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.contextFromBidRequest(AuctionContext)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 1
        },
        {
          "id": 4,
          "name": "org.prebid.server.settings.model.Account.empty(String)",
          "path": "src/main/java/org/prebid/server/settings/model/Account.java",
          "depth": 1
        },
        {
          "id": 5,
          "name": "org.prebid.server.privacy.gdpr.model.TcfContext.empty()",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/model/TcfContext.java",
          "depth": 2
        },
        {
          "id": 6,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.isGdprEnabled(AccountGdprConfig,MetricName)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 2
        },
        {
          "id": 7,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.prepareTcfContext(Privacy,String,String,RequestLogInfo,Timeout)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 2
        },
        {
          "id": 8,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.resolveIpAddress(Device,Privacy)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 9,
          "name": "org.prebid.server.privacy.PrivacyExtractor.validPrivacyFrom(BidRequest,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 2
        },
        {
          "id": 10,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.accountGdprConfig(Account)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 11,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.requestLogInfo(MetricName,BidRequest,String)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 12,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.resolveAlpha2CountryCode(Device)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 13,
          "name": "org.prebid.server.settings.model.EnabledForRequestType.isEnabledFor(MetricName)",
          "path": "src/main/java/org/prebid/server/settings/model/EnabledForRequestType.java",
          "depth": 3
        },
        {
          "id": 14,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.isCountryInEea(String)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 15,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.maybeMaskIp(String,TCString)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 16,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.inScopeOfGdpr(Boolean)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 17,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.parseConsentString(String,RequestLogInfo)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 18,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.isConsentValid(TCString)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 19,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.inScopeOfGdpr(String)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 20,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.isCoppaMaskingRequired(Privacy)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 3
        },
        {
          "id": 21,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.isLmtEnabled(Device)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 3
        },
        {
          "id": 22,
          "name": "org.prebid.server.auction.IpAddressHelper.maskIpv4(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 3
        },
        {
          "id": 23,
          "name": "org.prebid.server.privacy.PrivacyExtractor.extractPrivacy(Regs,User,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 3
        },
        {
          "id": 24,
          "name": "org.prebid.server.geolocation.CountryCodeMapper.mapToAlpha2(String)",
          "path": "src/main/java/org/prebid/server/geolocation/CountryCodeMapper.java",
          "depth": 3
        },
        {
          "id": 25,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.shouldMaskIp(TCString)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 4
        },
        {
          "id": 26,
          "name": "org.prebid.server.auction.IpAddressHelper.toIpAddress(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 4
        },
        {
          "id": 27,
          "name": "org.prebid.server.metric.Metrics.updatePrivacyTcfInvalidMetric()",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 4
        },
        {
          "id": 28,
          "name": "org.prebid.server.metric.Metrics.updatePrivacyTcfMissingMetric()",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 4
        },
        {
          "id": 29,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.toValidResult(String,TCStringParsingResult)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 4
        },
        {
          "id": 30,
          "name": "org.prebid.server.privacy.gdpr.model.TCStringEmpty.create()",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/model/TCStringEmpty.java",
          "depth": 4
        },
        {
          "id": 31,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.decodeTcString(String,RequestLogInfo,List)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 4
        },
        {
          "id": 32,
          "name": "org.prebid.server.privacy.PrivacyExtractor.toValidPrivacy(String,String,String,Integer,String,List,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 4
        },
        {
          "id": 33,
          "name": "org.prebid.server.auction.IpAddressHelper.isIpPublic(IPAddress)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 5
        },
        {
          "id": 34,
          "name": "org.prebid.server.auction.IpAddressHelper.maskIpv6(IPAddress)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 5
        },
        {
          "id": 35,
          "name": "org.prebid.server.auction.IpAddressHelper.toIpAddressInternal(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 5
        },
        {
          "id": 36,
          "name": "org.prebid.server.metric.PrivacyMetrics.tcf()",
          "path": "src/main/java/org/prebid/server/metric/PrivacyMetrics.java",
          "depth": 5
        },
        {
          "id": 37,
          "name": "org.prebid.server.metric.Metrics.privacy()",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 5
        },
        {
          "id": 38,
          "name": "org.prebid.server.metric.UpdatableMetrics.incCounter(MetricName)",
          "path": "src/main/java/org/prebid/server/metric/UpdatableMetrics.java",
          "depth": 5
        },
        {
          "id": 39,
          "name": "org.prebid.server.metric.Metrics.updatePrivacyTcfRequestsMetric(int)",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 5
        },
        {
          "id": 40,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.logWarn(String,String,RequestLogInfo)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 5
        },
        {
          "id": 41,
          "name": "org.prebid.server.privacy.PrivacyExtractor.toValidCcpa(String,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 5
        },
        {
          "id": 42,
          "name": "org.prebid.server.metric.UpdatableMetrics.incCounter(MetricName,long)",
          "path": "src/main/java/org/prebid/server/metric/UpdatableMetrics.java",
          "depth": 6
        },
        {
          "id": 43,
          "name": "org.prebid.server.metric.TcfMetrics.fromVersion(int)",
          "path": "src/main/java/org/prebid/server/metric/TcfMetrics.java",
          "depth": 6
        },
        {
          "id": 44,
          "name": "org.prebid.server.metric.MetricName.toString()",
          "path": "src/main/java/org/prebid/server/metric/MetricName.java",
          "depth": 6
        },
        {
          "id": 45,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.logMessage(String,String,RequestLogInfo,String)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 6
        },
        {
          "id": 46,
          "name": "org.prebid.server.log.ConditionalLogger.info(String,int)",
          "path": "src/main/java/org/prebid/server/log/ConditionalLogger.java",
          "depth": 6
        },
        {
          "id": 47,
          "name": "org.prebid.server.privacy.ccpa.Ccpa.validateUsPrivacy(String)",
          "path": "src/main/java/org/prebid/server/privacy/ccpa/Ccpa.java",
          "depth": 6
        },
        {
          "id": 48,
          "name": "org.prebid.server.metric.UpdatableMetrics.name(MetricName)",
          "path": "src/main/java/org/prebid/server/metric/UpdatableMetrics.java",
          "depth": 7
        },
        {
          "id": 49,
          "name": "org.prebid.server.exception.PreBidException.PreBidException(String)",
          "path": "src/main/java/org/prebid/server/exception/PreBidException.java",
          "depth": 7
        },
        {
          "id": 50,
          "name": "org.prebid.server.log.ConditionalLogger.log(String,int,Consumer)",
          "path": "src/main/java/org/prebid/server/log/ConditionalLogger.java",
          "depth": 7
        },
        {
          "id": 51,
          "name": "org.prebid.server.privacy.ccpa.Ccpa.agreementSpecified(char,String)",
          "path": "src/main/java/org/prebid/server/privacy/ccpa/Ccpa.java",
          "depth": 7
        }
      ],
      "graph": {
        "0": [
          1,
          2,
          3,
          4
        ],
        "1": [
          5,
          6,
          7
        ],
        "3": [
          1,
          8,
          9,
          10,
          11,
          12
        ],
        "6": [
          13
        ],
        "7": [
          16,
          17,
          18,
          19,
          14,
          15
        ],
        "8": [
          2,
          20,
          21,
          22
        ],
        "9": [
          23
        ],
        "12": [
          24
        ],
        "15": [
          2,
          22,
          25,
          26
        ],
        "16": [
          19
        ],
        "17": [
          27,
          28,
          29,
          30,
          31
        ],
        "23": [
          32
        ],
        "25": [
          18
        ],
        "26": [
          33,
          34,
          35
        ],
        "27": [
          36,
          37,
          38
        ],
        "28": [
          36,
          37,
          38
        ],
        "29": [
          39,
          30
        ],
        "31": [
          40
        ],
        "32": [
          41
        ],
        "38": [
          42
        ],
        "39": [
          36,
          37,
          38,
          43
        ],
        "40": [
          44,
          45,
          46
        ],
        "41": [
          47
        ],
        "42": [
          48
        ],
        "43": [
          49
        ],
        "46": [
          50
        ],
        "47": [
          49,
          51
        ],
        "51": [
          49
        ]
      }
    }
  },
  "f46839a2a": {
    "org.prebid.server.util.VersionInfoTest.shouldCreateVersionWithUndefinedForEachMissingPropertyInFile()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.util.VersionInfoTest.shouldCreateVersionWithUndefinedForEachMissingPropertyInFile()",
        "path": "src/test/java/org/prebid/server/util/VersionInfoTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.util.VersionInfoTest.shouldCreateVersionWithUndefinedForEachMissingPropertyInFile()",
          "path": "src/test/java/org/prebid/server/util/VersionInfoTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.util.VersionInfo.create(String,JacksonMapper)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.util.VersionInfo.VersionInfo(String,String)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.json.JacksonMapper.mapper()",
          "path": "src/main/java/org/prebid/server/json/JacksonMapper.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.util.VersionInfo.extractVersion(String)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 2
        },
        {
          "id": 5,
          "name": "org.prebid.server.util.ResourceUtil.readFromClasspath(String)",
          "path": "src/main/java/org/prebid/server/util/ResourceUtil.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3,
          4,
          5
        ]
      }
    },
    "org.prebid.server.util.VersionInfoTest.shouldCreateVersionWithUndefinedForAllFieldsIfFileWasNotFound()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.util.VersionInfoTest.shouldCreateVersionWithUndefinedForAllFieldsIfFileWasNotFound()",
        "path": "src/test/java/org/prebid/server/util/VersionInfoTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.util.VersionInfoTest.shouldCreateVersionWithUndefinedForAllFieldsIfFileWasNotFound()",
          "path": "src/test/java/org/prebid/server/util/VersionInfoTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.util.VersionInfo.create(String,JacksonMapper)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.util.VersionInfo.VersionInfo(String,String)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.json.JacksonMapper.mapper()",
          "path": "src/main/java/org/prebid/server/json/JacksonMapper.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.util.VersionInfo.extractVersion(String)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 2
        },
        {
          "id": 5,
          "name": "org.prebid.server.util.ResourceUtil.readFromClasspath(String)",
          "path": "src/main/java/org/prebid/server/util/ResourceUtil.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3,
          4,
          5
        ]
      }
    },
    "org.prebid.server.util.VersionInfoTest.shouldCreateVersionInfoWithAllProperties()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.util.VersionInfoTest.shouldCreateVersionInfoWithAllProperties()",
        "path": "src/test/java/org/prebid/server/util/VersionInfoTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.util.VersionInfoTest.shouldCreateVersionInfoWithAllProperties()",
          "path": "src/test/java/org/prebid/server/util/VersionInfoTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.util.VersionInfo.create(String,JacksonMapper)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.util.VersionInfo.VersionInfo(String,String)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.json.JacksonMapper.mapper()",
          "path": "src/main/java/org/prebid/server/json/JacksonMapper.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.util.VersionInfo.extractVersion(String)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 2
        },
        {
          "id": 5,
          "name": "org.prebid.server.util.ResourceUtil.readFromClasspath(String)",
          "path": "src/main/java/org/prebid/server/util/ResourceUtil.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3,
          4,
          5
        ]
      }
    }
  },
  "96eda0b11": {
    "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldReturnTargetingKeywordsForWinningBidOpenrtb()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldReturnTargetingKeywordsForWinningBidOpenrtb()",
        "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldReturnTargetingKeywordsForWinningBidOpenrtb()",
          "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.create(ExtPriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver,String)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.PriceGranularity.createFromExtPriceGranularity(ExtPriceGranularity)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.TargetingKeywordsCreator(PriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver,String)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.auction.PriceGranularity.createFromRanges(Integer,List)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 3
        },
        {
          "id": 5,
          "name": "org.prebid.server.auction.PriceGranularity.PriceGranularity(List,BigDecimal,Integer)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 4
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3
        ],
        "2": [
          4
        ],
        "4": [
          5
        ]
      }
    },
    "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldNotIncludeDealBidTargetingIfAlwaysIncludeDealsFlagIsFalse()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldNotIncludeDealBidTargetingIfAlwaysIncludeDealsFlagIsFalse()",
        "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldNotIncludeDealBidTargetingIfAlwaysIncludeDealsFlagIsFalse()",
          "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.create(ExtPriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver,String)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.PriceGranularity.createFromExtPriceGranularity(ExtPriceGranularity)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.TargetingKeywordsCreator(PriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver,String)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.auction.PriceGranularity.createFromRanges(Integer,List)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 3
        },
        {
          "id": 5,
          "name": "org.prebid.server.auction.PriceGranularity.PriceGranularity(List,BigDecimal,Integer)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 4
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3
        ],
        "2": [
          4
        ],
        "4": [
          5
        ]
      }
    },
    "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldIncludeFormatOpenrtb()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldIncludeFormatOpenrtb()",
        "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldIncludeFormatOpenrtb()",
          "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.create(ExtPriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver,String)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.PriceGranularity.createFromExtPriceGranularity(ExtPriceGranularity)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.TargetingKeywordsCreator(PriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver,String)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.auction.PriceGranularity.createFromRanges(Integer,List)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 3
        },
        {
          "id": 5,
          "name": "org.prebid.server.auction.PriceGranularity.PriceGranularity(List,BigDecimal,Integer)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 4
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3
        ],
        "2": [
          4
        ],
        "4": [
          5
        ]
      }
    },
    "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldTruncateTargetingBidderKeywordsIfTruncateAttrCharsIsDefined()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldTruncateTargetingBidderKeywordsIfTruncateAttrCharsIsDefined()",
        "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldTruncateTargetingBidderKeywordsIfTruncateAttrCharsIsDefined()",
          "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.create(ExtPriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver,String)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.PriceGranularity.createFromExtPriceGranularity(ExtPriceGranularity)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.TargetingKeywordsCreator(PriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver,String)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.auction.PriceGranularity.createFromRanges(Integer,List)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 3
        },
        {
          "id": 5,
          "name": "org.prebid.server.auction.PriceGranularity.PriceGranularity(List,BigDecimal,Integer)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 4
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3
        ],
        "2": [
          4
        ],
        "4": [
          5
        ]
      }
    },
    "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldNotTruncateTargetingKeywordsIfTruncateAttrCharsIsNotDefined()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldNotTruncateTargetingKeywordsIfTruncateAttrCharsIsNotDefined()",
        "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldNotTruncateTargetingKeywordsIfTruncateAttrCharsIsNotDefined()",
          "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.create(ExtPriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver,String)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.PriceGranularity.createFromExtPriceGranularity(ExtPriceGranularity)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.TargetingKeywordsCreator(PriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver,String)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.auction.PriceGranularity.createFromRanges(Integer,List)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 3
        },
        {
          "id": 5,
          "name": "org.prebid.server.auction.PriceGranularity.PriceGranularity(List,BigDecimal,Integer)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 4
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3
        ],
        "2": [
          4
        ],
        "4": [
          5
        ]
      }
    }
  },
  "6aabd8b65": {
    "org.prebid.server.activity.infrastructure.privacy.usnat.reader.USNationalGppReaderTest.getMspaOptOutOptionModeShouldReturnExpectedResult()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.activity.infrastructure.privacy.usnat.reader.USNationalGppReaderTest.getMspaOptOutOptionModeShouldReturnExpectedResult()",
        "path": "src/test/java/org/prebid/server/activity/infrastructure/privacy/usnat/reader/USNationalGppReaderTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.activity.infrastructure.privacy.usnat.reader.USNationalGppReaderTest.getMspaOptOutOptionModeShouldReturnExpectedResult()",
          "path": "src/test/java/org/prebid/server/activity/infrastructure/privacy/usnat/reader/USNationalGppReaderTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.activity.infrastructure.privacy.usnat.reader.USNationalGppReader.getMspaOptOutOptionMode()",
          "path": "src/main/java/org/prebid/server/activity/infrastructure/privacy/usnat/reader/USNationalGppReader.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.util.ObjectUtil.getIfNotNull(Object,Function)",
          "path": "src/main/java/org/prebid/server/util/ObjectUtil.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2
        ]
      }
    },
    "org.prebid.server.activity.infrastructure.privacy.uscustomlogic.reader.USConnecticutGppReaderTest.getMspaOptOutOptionModeShouldReturnExpectedResult()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.activity.infrastructure.privacy.uscustomlogic.reader.USConnecticutGppReaderTest.getMspaOptOutOptionModeShouldReturnExpectedResult()",
        "path": "src/test/java/org/prebid/server/activity/infrastructure/privacy/uscustomlogic/reader/USConnecticutGppReaderTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.activity.infrastructure.privacy.uscustomlogic.reader.USConnecticutGppReaderTest.getMspaOptOutOptionModeShouldReturnExpectedResult()",
          "path": "src/test/java/org/prebid/server/activity/infrastructure/privacy/uscustomlogic/reader/USConnecticutGppReaderTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.activity.infrastructure.privacy.uscustomlogic.reader.USConnecticutGppReader.getMspaOptOutOptionMode()",
          "path": "src/main/java/org/prebid/server/activity/infrastructure/privacy/uscustomlogic/reader/USConnecticutGppReader.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.util.ObjectUtil.getIfNotNull(Object,Function)",
          "path": "src/main/java/org/prebid/server/util/ObjectUtil.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2
        ]
      }
    }
  },
  "5108de36c": {
    "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldReturnTargetingKeywordsForWinningBidOpenrtb()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldReturnTargetingKeywordsForWinningBidOpenrtb()",
        "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldReturnTargetingKeywordsForWinningBidOpenrtb()",
          "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.create(ExtPriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.PriceGranularity.createFromExtPriceGranularity(ExtPriceGranularity)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.TargetingKeywordsCreator(PriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.auction.PriceGranularity.createFromRanges(Integer,List)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 3
        },
        {
          "id": 5,
          "name": "org.prebid.server.auction.PriceGranularity.PriceGranularity(List,BigDecimal,Integer)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 4
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3
        ],
        "2": [
          4
        ],
        "4": [
          5
        ]
      }
    },
    "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldNotIncludeDealBidTargetingIfAlwaysIncludeDealsFlagIsFalse()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldNotIncludeDealBidTargetingIfAlwaysIncludeDealsFlagIsFalse()",
        "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldNotIncludeDealBidTargetingIfAlwaysIncludeDealsFlagIsFalse()",
          "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.create(ExtPriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.PriceGranularity.createFromExtPriceGranularity(ExtPriceGranularity)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.TargetingKeywordsCreator(PriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.auction.PriceGranularity.createFromRanges(Integer,List)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 3
        },
        {
          "id": 5,
          "name": "org.prebid.server.auction.PriceGranularity.PriceGranularity(List,BigDecimal,Integer)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 4
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3
        ],
        "2": [
          4
        ],
        "4": [
          5
        ]
      }
    },
    "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldIncludeFormatOpenrtb()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldIncludeFormatOpenrtb()",
        "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldIncludeFormatOpenrtb()",
          "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.create(ExtPriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.PriceGranularity.createFromExtPriceGranularity(ExtPriceGranularity)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.TargetingKeywordsCreator(PriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.auction.PriceGranularity.createFromRanges(Integer,List)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 3
        },
        {
          "id": 5,
          "name": "org.prebid.server.auction.PriceGranularity.PriceGranularity(List,BigDecimal,Integer)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 4
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3
        ],
        "2": [
          4
        ],
        "4": [
          5
        ]
      }
    },
    "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldTruncateTargetingBidderKeywordsIfTruncateAttrCharsIsDefined()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldTruncateTargetingBidderKeywordsIfTruncateAttrCharsIsDefined()",
        "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldTruncateTargetingBidderKeywordsIfTruncateAttrCharsIsDefined()",
          "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.create(ExtPriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.PriceGranularity.createFromExtPriceGranularity(ExtPriceGranularity)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.TargetingKeywordsCreator(PriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.auction.PriceGranularity.createFromRanges(Integer,List)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 3
        },
        {
          "id": 5,
          "name": "org.prebid.server.auction.PriceGranularity.PriceGranularity(List,BigDecimal,Integer)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 4
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3
        ],
        "2": [
          4
        ],
        "4": [
          5
        ]
      }
    },
    "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldNotTruncateTargetingKeywordsIfTruncateAttrCharsIsNotDefined()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldNotTruncateTargetingKeywordsIfTruncateAttrCharsIsNotDefined()",
        "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.TargetingKeywordsCreatorTest.shouldNotTruncateTargetingKeywordsIfTruncateAttrCharsIsNotDefined()",
          "path": "src/test/java/org/prebid/server/auction/TargetingKeywordsCreatorTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.create(ExtPriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.PriceGranularity.createFromExtPriceGranularity(ExtPriceGranularity)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.auction.TargetingKeywordsCreator.TargetingKeywordsCreator(PriceGranularity,boolean,boolean,boolean,boolean,boolean,int,String,String,TargetingKeywordsResolver)",
          "path": "src/main/java/org/prebid/server/auction/TargetingKeywordsCreator.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.auction.PriceGranularity.createFromRanges(Integer,List)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 3
        },
        {
          "id": 5,
          "name": "org.prebid.server.auction.PriceGranularity.PriceGranularity(List,BigDecimal,Integer)",
          "path": "src/main/java/org/prebid/server/auction/PriceGranularity.java",
          "depth": 4
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3
        ],
        "2": [
          4
        ],
        "4": [
          5
        ]
      }
    }
  },
  "185953727": {
    "org.prebid.server.util.VersionInfoTest.shouldCreateVersionWithUndefinedForEachMissingPropertyInFile()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.util.VersionInfoTest.shouldCreateVersionWithUndefinedForEachMissingPropertyInFile()",
        "path": "src/test/java/org/prebid/server/util/VersionInfoTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.util.VersionInfoTest.shouldCreateVersionWithUndefinedForEachMissingPropertyInFile()",
          "path": "src/test/java/org/prebid/server/util/VersionInfoTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.util.VersionInfo.create(String,JacksonMapper)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.util.VersionInfo.VersionInfo(String,String)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.json.JacksonMapper.mapper()",
          "path": "src/main/java/org/prebid/server/json/JacksonMapper.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.util.VersionInfo.extractVersion(String)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 2
        },
        {
          "id": 5,
          "name": "org.prebid.server.util.ResourceUtil.readFromClasspath(String)",
          "path": "src/main/java/org/prebid/server/util/ResourceUtil.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3,
          4,
          5
        ]
      }
    },
    "org.prebid.server.util.VersionInfoTest.shouldCreateVersionWithUndefinedForAllFieldsIfFileWasNotFound()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.util.VersionInfoTest.shouldCreateVersionWithUndefinedForAllFieldsIfFileWasNotFound()",
        "path": "src/test/java/org/prebid/server/util/VersionInfoTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.util.VersionInfoTest.shouldCreateVersionWithUndefinedForAllFieldsIfFileWasNotFound()",
          "path": "src/test/java/org/prebid/server/util/VersionInfoTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.util.VersionInfo.create(String,JacksonMapper)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.util.VersionInfo.VersionInfo(String,String)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.json.JacksonMapper.mapper()",
          "path": "src/main/java/org/prebid/server/json/JacksonMapper.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.util.VersionInfo.extractVersion(String)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 2
        },
        {
          "id": 5,
          "name": "org.prebid.server.util.ResourceUtil.readFromClasspath(String)",
          "path": "src/main/java/org/prebid/server/util/ResourceUtil.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3,
          4,
          5
        ]
      }
    },
    "org.prebid.server.util.VersionInfoTest.shouldCreateVersionInfoWithAllProperties()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.util.VersionInfoTest.shouldCreateVersionInfoWithAllProperties()",
        "path": "src/test/java/org/prebid/server/util/VersionInfoTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.util.VersionInfoTest.shouldCreateVersionInfoWithAllProperties()",
          "path": "src/test/java/org/prebid/server/util/VersionInfoTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.util.VersionInfo.create(String,JacksonMapper)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.util.VersionInfo.VersionInfo(String,String)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 2
        },
        {
          "id": 3,
          "name": "org.prebid.server.json.JacksonMapper.mapper()",
          "path": "src/main/java/org/prebid/server/json/JacksonMapper.java",
          "depth": 2
        },
        {
          "id": 4,
          "name": "org.prebid.server.util.VersionInfo.extractVersion(String)",
          "path": "src/main/java/org/prebid/server/util/VersionInfo.java",
          "depth": 2
        },
        {
          "id": 5,
          "name": "org.prebid.server.util.ResourceUtil.readFromClasspath(String)",
          "path": "src/main/java/org/prebid/server/util/ResourceUtil.java",
          "depth": 2
        }
      ],
      "graph": {
        "0": [
          1
        ],
        "1": [
          2,
          3,
          4,
          5
        ]
      }
    }
  },
  "3ddbe4763": {
    "org.prebid.server.auction.PrivacyEnforcementServiceTest.contextFromBidRequestShouldReturnTcfContext()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.PrivacyEnforcementServiceTest.contextFromBidRequestShouldReturnTcfContext()",
        "path": "src/test/java/org/prebid/server/auction/PrivacyEnforcementServiceTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.PrivacyEnforcementServiceTest.contextFromBidRequestShouldReturnTcfContext()",
          "path": "src/test/java/org/prebid/server/auction/PrivacyEnforcementServiceTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.resolveTcfContext(Privacy,String,String,AccountGdprConfig,MetricName,RequestLogInfo,Timeout)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.contextFromBidRequest(AuctionContext)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 1
        },
        {
          "id": 3,
          "name": "org.prebid.server.privacy.gdpr.model.TCStringEmpty.create()",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/model/TCStringEmpty.java",
          "depth": 1
        },
        {
          "id": 4,
          "name": "org.prebid.server.assertion.FutureAssertion.assertThat(Future)",
          "path": "src/test/java/org/prebid/server/assertion/FutureAssertion.java",
          "depth": 1
        },
        {
          "id": 5,
          "name": "org.prebid.server.privacy.model.PrivacyContext.of(Privacy,TcfContext)",
          "path": "src/main/java/org/prebid/server/privacy/model/PrivacyContext.java",
          "depth": 1
        },
        {
          "id": 6,
          "name": "org.prebid.server.settings.model.Account.empty(String)",
          "path": "src/main/java/org/prebid/server/settings/model/Account.java",
          "depth": 1
        },
        {
          "id": 7,
          "name": "org.prebid.server.privacy.gdpr.model.TcfContext.empty()",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/model/TcfContext.java",
          "depth": 2
        },
        {
          "id": 8,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.isGdprEnabled(AccountGdprConfig,MetricName)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 2
        },
        {
          "id": 9,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.prepareTcfContext(Privacy,String,String,RequestLogInfo,Timeout)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 2
        },
        {
          "id": 10,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.resolveIpAddress(Device,Privacy)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 11,
          "name": "org.prebid.server.privacy.PrivacyExtractor.validPrivacyFrom(BidRequest,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 2
        },
        {
          "id": 12,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.accountGdprConfig(Account)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 13,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.requestLogInfo(MetricName,BidRequest,String)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 14,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.resolveAlpha2CountryCode(Device)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 15,
          "name": "org.prebid.server.settings.model.EnabledForRequestType.isEnabledFor(MetricName)",
          "path": "src/main/java/org/prebid/server/settings/model/EnabledForRequestType.java",
          "depth": 3
        },
        {
          "id": 16,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.isCountryInEea(String)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 17,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.maybeMaskIp(String,TCString)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 18,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.inScopeOfGdpr(Boolean)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 19,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.parseConsentString(String,RequestLogInfo)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 20,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.isConsentValid(TCString)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 21,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.inScopeOfGdpr(String)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 22,
          "name": "org.prebid.server.auction.IpAddressHelper.anonymizeIpv6(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 3
        },
        {
          "id": 23,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.isCoppaMaskingRequired(Privacy)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 3
        },
        {
          "id": 24,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.isLmtEnabled(Device)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 3
        },
        {
          "id": 25,
          "name": "org.prebid.server.auction.IpAddressHelper.maskIpv4(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 3
        },
        {
          "id": 26,
          "name": "org.prebid.server.privacy.PrivacyExtractor.extractPrivacy(Regs,User,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 3
        },
        {
          "id": 27,
          "name": "org.prebid.server.geolocation.CountryCodeMapper.mapToAlpha2(String)",
          "path": "src/main/java/org/prebid/server/geolocation/CountryCodeMapper.java",
          "depth": 3
        },
        {
          "id": 28,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.shouldMaskIp(TCString)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 4
        },
        {
          "id": 29,
          "name": "org.prebid.server.auction.IpAddressHelper.toIpAddress(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 4
        },
        {
          "id": 30,
          "name": "org.prebid.server.metric.Metrics.updatePrivacyTcfInvalidMetric()",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 4
        },
        {
          "id": 31,
          "name": "org.prebid.server.metric.Metrics.updatePrivacyTcfMissingMetric()",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 4
        },
        {
          "id": 32,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.toValidResult(String,TCStringParsingResult)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 4
        },
        {
          "id": 33,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.decodeTcString(String,RequestLogInfo,List)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 4
        },
        {
          "id": 34,
          "name": "org.prebid.server.privacy.PrivacyExtractor.toValidPrivacy(String,String,String,Integer,String,List,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 4
        },
        {
          "id": 35,
          "name": "org.prebid.server.auction.IpAddressHelper.isIpPublic(IPAddress)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 5
        },
        {
          "id": 36,
          "name": "org.prebid.server.auction.IpAddressHelper.maskIpv6(IPAddress)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 5
        },
        {
          "id": 37,
          "name": "org.prebid.server.auction.IpAddressHelper.toIpAddressInternal(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 5
        },
        {
          "id": 38,
          "name": "org.prebid.server.metric.PrivacyMetrics.tcf()",
          "path": "src/main/java/org/prebid/server/metric/PrivacyMetrics.java",
          "depth": 5
        },
        {
          "id": 39,
          "name": "org.prebid.server.metric.Metrics.privacy()",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 5
        },
        {
          "id": 40,
          "name": "org.prebid.server.metric.UpdatableMetrics.incCounter(MetricName)",
          "path": "src/main/java/org/prebid/server/metric/UpdatableMetrics.java",
          "depth": 5
        },
        {
          "id": 41,
          "name": "org.prebid.server.metric.Metrics.updatePrivacyTcfRequestsMetric(int)",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 5
        },
        {
          "id": 42,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.logWarn(String,String,RequestLogInfo)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 5
        },
        {
          "id": 43,
          "name": "org.prebid.server.privacy.PrivacyExtractor.toValidCcpa(String,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 5
        },
        {
          "id": 44,
          "name": "org.prebid.server.metric.UpdatableMetrics.incCounter(MetricName,long)",
          "path": "src/main/java/org/prebid/server/metric/UpdatableMetrics.java",
          "depth": 6
        },
        {
          "id": 45,
          "name": "org.prebid.server.metric.TcfMetrics.fromVersion(int)",
          "path": "src/main/java/org/prebid/server/metric/TcfMetrics.java",
          "depth": 6
        },
        {
          "id": 46,
          "name": "org.prebid.server.metric.MetricName.toString()",
          "path": "src/main/java/org/prebid/server/metric/MetricName.java",
          "depth": 6
        },
        {
          "id": 47,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.logMessage(String,String,RequestLogInfo,String)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 6
        },
        {
          "id": 48,
          "name": "org.prebid.server.log.ConditionalLogger.info(String,int)",
          "path": "src/main/java/org/prebid/server/log/ConditionalLogger.java",
          "depth": 6
        },
        {
          "id": 49,
          "name": "org.prebid.server.privacy.ccpa.Ccpa.validateUsPrivacy(String)",
          "path": "src/main/java/org/prebid/server/privacy/ccpa/Ccpa.java",
          "depth": 6
        },
        {
          "id": 50,
          "name": "org.prebid.server.metric.UpdatableMetrics.name(MetricName)",
          "path": "src/main/java/org/prebid/server/metric/UpdatableMetrics.java",
          "depth": 7
        },
        {
          "id": 51,
          "name": "org.prebid.server.exception.PreBidException.PreBidException(String)",
          "path": "src/main/java/org/prebid/server/exception/PreBidException.java",
          "depth": 7
        },
        {
          "id": 52,
          "name": "org.prebid.server.log.ConditionalLogger.log(String,int,Consumer)",
          "path": "src/main/java/org/prebid/server/log/ConditionalLogger.java",
          "depth": 7
        },
        {
          "id": 53,
          "name": "org.prebid.server.privacy.ccpa.Ccpa.agreementSpecified(char,String)",
          "path": "src/main/java/org/prebid/server/privacy/ccpa/Ccpa.java",
          "depth": 7
        }
      ],
      "graph": {
        "0": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "1": [
          7,
          8,
          9
        ],
        "2": [
          1,
          10,
          11,
          12,
          13,
          14
        ],
        "5": [
          5
        ],
        "8": [
          15
        ],
        "9": [
          16,
          17,
          18,
          19,
          20,
          21
        ],
        "10": [
          22,
          23,
          24,
          25
        ],
        "11": [
          26
        ],
        "14": [
          27
        ],
        "17": [
          22,
          25,
          28,
          29
        ],
        "18": [
          21
        ],
        "19": [
          32,
          33,
          3,
          30,
          31
        ],
        "26": [
          34
        ],
        "28": [
          20
        ],
        "29": [
          35,
          36,
          37
        ],
        "30": [
          38,
          39,
          40
        ],
        "31": [
          38,
          39,
          40
        ],
        "32": [
          3,
          41
        ],
        "33": [
          42
        ],
        "34": [
          43
        ],
        "40": [
          44
        ],
        "41": [
          38,
          39,
          40,
          45
        ],
        "42": [
          48,
          46,
          47
        ],
        "43": [
          49
        ],
        "44": [
          50
        ],
        "45": [
          51
        ],
        "48": [
          52
        ],
        "49": [
          51,
          53
        ],
        "53": [
          51
        ]
      }
    },
    "org.prebid.server.auction.PrivacyEnforcementServiceTest.contextFromBidRequestShouldCallResolveTcfContextWithIpv6AnonymizedWhenIpNotPresentAndLmtIsOne()": {
      "root": {
        "id": 0,
        "name": "org.prebid.server.auction.PrivacyEnforcementServiceTest.contextFromBidRequestShouldCallResolveTcfContextWithIpv6AnonymizedWhenIpNotPresentAndLmtIsOne()",
        "path": "src/test/java/org/prebid/server/auction/PrivacyEnforcementServiceTest.java",
        "depth": 0
      },
      "nodes": [
        {
          "id": 0,
          "name": "org.prebid.server.auction.PrivacyEnforcementServiceTest.contextFromBidRequestShouldCallResolveTcfContextWithIpv6AnonymizedWhenIpNotPresentAndLmtIsOne()",
          "path": "src/test/java/org/prebid/server/auction/PrivacyEnforcementServiceTest.java",
          "depth": 0
        },
        {
          "id": 1,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.resolveTcfContext(Privacy,String,String,AccountGdprConfig,MetricName,RequestLogInfo,Timeout)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 1
        },
        {
          "id": 2,
          "name": "org.prebid.server.auction.IpAddressHelper.anonymizeIpv6(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 1
        },
        {
          "id": 3,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.contextFromBidRequest(AuctionContext)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 1
        },
        {
          "id": 4,
          "name": "org.prebid.server.settings.model.Account.empty(String)",
          "path": "src/main/java/org/prebid/server/settings/model/Account.java",
          "depth": 1
        },
        {
          "id": 5,
          "name": "org.prebid.server.privacy.gdpr.model.TcfContext.empty()",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/model/TcfContext.java",
          "depth": 2
        },
        {
          "id": 6,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.isGdprEnabled(AccountGdprConfig,MetricName)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 2
        },
        {
          "id": 7,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.prepareTcfContext(Privacy,String,String,RequestLogInfo,Timeout)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 2
        },
        {
          "id": 8,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.resolveIpAddress(Device,Privacy)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 9,
          "name": "org.prebid.server.privacy.PrivacyExtractor.validPrivacyFrom(BidRequest,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 2
        },
        {
          "id": 10,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.accountGdprConfig(Account)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 11,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.requestLogInfo(MetricName,BidRequest,String)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 12,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.resolveAlpha2CountryCode(Device)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 2
        },
        {
          "id": 13,
          "name": "org.prebid.server.settings.model.EnabledForRequestType.isEnabledFor(MetricName)",
          "path": "src/main/java/org/prebid/server/settings/model/EnabledForRequestType.java",
          "depth": 3
        },
        {
          "id": 14,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.isCountryInEea(String)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 15,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.maybeMaskIp(String,TCString)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 16,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.inScopeOfGdpr(Boolean)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 17,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.parseConsentString(String,RequestLogInfo)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 18,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.isConsentValid(TCString)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 19,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.inScopeOfGdpr(String)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 3
        },
        {
          "id": 20,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.isCoppaMaskingRequired(Privacy)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 3
        },
        {
          "id": 21,
          "name": "org.prebid.server.auction.PrivacyEnforcementService.isLmtEnabled(Device)",
          "path": "src/main/java/org/prebid/server/auction/PrivacyEnforcementService.java",
          "depth": 3
        },
        {
          "id": 22,
          "name": "org.prebid.server.auction.IpAddressHelper.maskIpv4(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 3
        },
        {
          "id": 23,
          "name": "org.prebid.server.privacy.PrivacyExtractor.extractPrivacy(Regs,User,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 3
        },
        {
          "id": 24,
          "name": "org.prebid.server.geolocation.CountryCodeMapper.mapToAlpha2(String)",
          "path": "src/main/java/org/prebid/server/geolocation/CountryCodeMapper.java",
          "depth": 3
        },
        {
          "id": 25,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.shouldMaskIp(TCString)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 4
        },
        {
          "id": 26,
          "name": "org.prebid.server.auction.IpAddressHelper.toIpAddress(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 4
        },
        {
          "id": 27,
          "name": "org.prebid.server.metric.Metrics.updatePrivacyTcfInvalidMetric()",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 4
        },
        {
          "id": 28,
          "name": "org.prebid.server.metric.Metrics.updatePrivacyTcfMissingMetric()",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 4
        },
        {
          "id": 29,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.toValidResult(String,TCStringParsingResult)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 4
        },
        {
          "id": 30,
          "name": "org.prebid.server.privacy.gdpr.model.TCStringEmpty.create()",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/model/TCStringEmpty.java",
          "depth": 4
        },
        {
          "id": 31,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.decodeTcString(String,RequestLogInfo,List)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 4
        },
        {
          "id": 32,
          "name": "org.prebid.server.privacy.PrivacyExtractor.toValidPrivacy(String,String,String,Integer,String,List,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 4
        },
        {
          "id": 33,
          "name": "org.prebid.server.auction.IpAddressHelper.isIpPublic(IPAddress)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 5
        },
        {
          "id": 34,
          "name": "org.prebid.server.auction.IpAddressHelper.maskIpv6(IPAddress)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 5
        },
        {
          "id": 35,
          "name": "org.prebid.server.auction.IpAddressHelper.toIpAddressInternal(String)",
          "path": "src/main/java/org/prebid/server/auction/IpAddressHelper.java",
          "depth": 5
        },
        {
          "id": 36,
          "name": "org.prebid.server.metric.PrivacyMetrics.tcf()",
          "path": "src/main/java/org/prebid/server/metric/PrivacyMetrics.java",
          "depth": 5
        },
        {
          "id": 37,
          "name": "org.prebid.server.metric.Metrics.privacy()",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 5
        },
        {
          "id": 38,
          "name": "org.prebid.server.metric.UpdatableMetrics.incCounter(MetricName)",
          "path": "src/main/java/org/prebid/server/metric/UpdatableMetrics.java",
          "depth": 5
        },
        {
          "id": 39,
          "name": "org.prebid.server.metric.Metrics.updatePrivacyTcfRequestsMetric(int)",
          "path": "src/main/java/org/prebid/server/metric/Metrics.java",
          "depth": 5
        },
        {
          "id": 40,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.logWarn(String,String,RequestLogInfo)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 5
        },
        {
          "id": 41,
          "name": "org.prebid.server.privacy.PrivacyExtractor.toValidCcpa(String,List)",
          "path": "src/main/java/org/prebid/server/privacy/PrivacyExtractor.java",
          "depth": 5
        },
        {
          "id": 42,
          "name": "org.prebid.server.metric.UpdatableMetrics.incCounter(MetricName,long)",
          "path": "src/main/java/org/prebid/server/metric/UpdatableMetrics.java",
          "depth": 6
        },
        {
          "id": 43,
          "name": "org.prebid.server.metric.TcfMetrics.fromVersion(int)",
          "path": "src/main/java/org/prebid/server/metric/TcfMetrics.java",
          "depth": 6
        },
        {
          "id": 44,
          "name": "org.prebid.server.metric.MetricName.toString()",
          "path": "src/main/java/org/prebid/server/metric/MetricName.java",
          "depth": 6
        },
        {
          "id": 45,
          "name": "org.prebid.server.privacy.gdpr.TcfDefinerService.logMessage(String,String,RequestLogInfo,String)",
          "path": "src/main/java/org/prebid/server/privacy/gdpr/TcfDefinerService.java",
          "depth": 6
        },
        {
          "id": 46,
          "name": "org.prebid.server.log.ConditionalLogger.info(String,int)",
          "path": "src/main/java/org/prebid/server/log/ConditionalLogger.java",
          "depth": 6
        },
        {
          "id": 47,
          "name": "org.prebid.server.privacy.ccpa.Ccpa.validateUsPrivacy(String)",
          "path": "src/main/java/org/prebid/server/privacy/ccpa/Ccpa.java",
          "depth": 6
        },
        {
          "id": 48,
          "name": "org.prebid.server.metric.UpdatableMetrics.name(MetricName)",
          "path": "src/main/java/org/prebid/server/metric/UpdatableMetrics.java",
          "depth": 7
        },
        {
          "id": 49,
          "name": "org.prebid.server.exception.PreBidException.PreBidException(String)",
          "path": "src/main/java/org/prebid/server/exception/PreBidException.java",
          "depth": 7
        },
        {
          "id": 50,
          "name": "org.prebid.server.log.ConditionalLogger.log(String,int,Consumer)",
          "path": "src/main/java/org/prebid/server/log/ConditionalLogger.java",
          "depth": 7
        },
        {
          "id": 51,
          "name": "org.prebid.server.privacy.ccpa.Ccpa.agreementSpecified(char,String)",
          "path": "src/main/java/org/prebid/server/privacy/ccpa/Ccpa.java",
          "depth": 7
        }
      ],
      "graph": {
        "0": [
          1,
          2,
          3,
          4
        ],
        "1": [
          5,
          6,
          7
        ],
        "3": [
          1,
          8,
          9,
          10,
          11,
          12
        ],
        "6": [
          13
        ],
        "7": [
          16,
          17,
          18,
          19,
          14,
          15
        ],
        "8": [
          2,
          20,
          21,
          22
        ],
        "9": [
          23
        ],
        "12": [
          24
        ],
        "15": [
          2,
          22,
          25,
          26
        ],
        "16": [
          19
        ],
        "17": [
          27,
          28,
          29,
          30,
          31
        ],
        "23": [
          32
        ],
        "25": [
          18
        ],
        "26": [
          33,
          34,
          35
        ],
        "27": [
          36,
          37,
          38
        ],
        "28": [
          36,
          37,
          38
        ],
        "29": [
          39,
          30
        ],
        "31": [
          40
        ],
        "32": [
          41
        ],
        "38": [
          42
        ],
        "39": [
          36,
          37,
          38,
          43
        ],
        "40": [
          44,
          45,
          46
        ],
        "41": [
          47
        ],
        "42": [
          48
        ],
        "43": [
          49
        ],
        "46": [
          50
        ],
        "47": [
          49,
          51
        ],
        "51": [
          49
        ]
      }
    }
  }
}